function Language(){var language=window.navigator.userLanguage||window.navigator.language;this.english();this.lan=0;if(language=="pl-PL"||language=="pl"||debugPolish){this.polish();this.lan=1}}Language.prototype.polish=function(){this.difficulty="POZIOM TRUDNOŚCI: ";this.healedFor="Uleczono za ";this.thisComboIsMax="Te kombo jest już wymaksowane!";this.youAreLEGENDARYAlready="Jesteś już LEGENDARNY!";this.maximumDefensesIncreased="Obrona i wizja zwiększone!";this.multiplierForActivatingCombos="Mnożnik za używanie kombosów zwiększony!";this.multiplierForDefeatingEnemies="Mnożnik za pokonywanie wrogów zwiększony!";this.multiplierForCollectingColors="Mnożnik za zbieranie kolorów zwiększony!";this.youAreLEGENDARY="Jesteś LEGENDARNY!";this.youCanActivate5ColorCombos="Możesz aktywować kombo z 5 kolorów!";this.destroyed="Zniszczono ";this.destructionFailed="Zniszczenie zawiodło!";this.created="Stworzono ";this.creationFailed="Stworzenie zawiodło!";this.teleported="Teleportowano ";this.cleansed="Oczyszczono ze zła ";this.cleanseFailed="Oczyszczenie zawiodło!";this.locationMarked="Lokacja oznaczona! Użyj przeniesienia do teleportacji!";this.recalledToLocation="Przeniesiono do oznaczonej lokacji!";this.levitationFor="Lewitacja na ";this.protectionFromCorruptedBlocks="Obrona przed złymi polami na ";this.procetionFromTakingColor="Obrona przed zabieraniem koloru na ";this.changedRandomly="Zmieniono losowo ";this.randomizeFailed="Losowa zmiana zawiodła!";this.healing=" leczące ";this.healingBlocksFailed="Leczące pola zawiodły!";this.random=" losowe ";this.revealingEnemies="Ujawnienie złych pól w ";this.revealingFailed="Ujawnianie zawiodło!";this.changedColor=" zmieniono kolor";this.noBlocksChangedColor="Żadne pole nie zmieniło koloru!";this.moved=" przesunięto";this.noBlocksMoved="Żadne pole nie zostało przesunięte!";this.shifted=" poruszone";this.toShiftBlocksMustBeAtLeast="Aby poruszać pola, musi ich być przynajmniej 2!";this.dug=" wykopano";this.thereIsNothingToDig="Nie ma nic do kopania!";this.pickedUp=" zabrano";this.noBlocksPickedUp="Nie zabrano niczego!";this.placed=" odstawiono";this.noBlocksPlaced="Nie odstawiono niczego!";this.noBlocksToPlace="Nie masz pól do odstawienia!";this.ultimate="OSTATECZNE KOMBO!";this.controlsExplained="Sterowanie: użyj lewej części ekranu jak drążka sterowniczego; nie ruszaj się aby odsączyć kolor pola na którym stoisz; dotknij prawej części ekranu aby użyć zebrane kolory (do 4) w kombosie.";this.hp="PŻ!";this.continueButton="Kontynuuj";this.newGameButton="Nowa gra";this.library="Biblioteka";this.heal="Leczenie";this.cleanse="Oczyszczenie";this.teleport="Teleportuj";this.destroy="Zniszczenie";this.create="Stworzenie";this.reveal="Ujawnienie";this.whiteout="Zbielenie";this.turnblue="Zmień w wodę";this.turnsky="Zmień w powietrze";this.turnorange="Zmień w ogień";this.turngrey="Zmień w ziemię";this.protectnormal="Obrona";this.teleblocks="Teleportuj pola";this.shiftblock="Porusz pola";this.dig="Kop";this.mark="Oznacz";this.recall="Przenień";this.levitation="Lewitacja";this.protectdrain="Obrona wciągania";this.randomblock="Losuj pola";this.healpick="Zbierane życie";this.pickup="Weź pola";this.place="Postaw pola";this.createblock="Stwórz losowe";this.turngreen="Zmień w życie";this.buff1="Zwiększ życie";this.buff2="Zwiększ obronę";this.buff3="Zwiększ mnożnik komba";this.buff4="Zwiększ mnożnik wrogów";this.buff5="Zwiększ mnożnik kolorów";this.tutBasics="Podstawy";this.tutControls="Sterowanie";this.tutCombos="Kombosy";this.tutEnemies="Złe pola";this.tutLeveling="Zdobywanie poziomów";this.healD="Leczy cię, dając punkty życia, ale twoje zdrowie nie może przekroczyć twojego maksymalnego zdrowia. Liczba odnowionych puknktów życia jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.cleanseD="Oczyszcza złe pola, zabierając 1 poziom z każdego pola branego pod uwagę. Liczba oczyszczonych kolumn jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.teleportD="Teleportuje cię w kierunku w którym jesteś zwrócony. Jak daleko zostaniesz przeteleportowany zależy od liczby zebranych kolorów + 1. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.destroyD="Niszczy warstwę pól na której stoisz. Liczba zniszczonych pól jest zależna od liczby zebranych kolorów, ale gdy stoisz na szczycie i naokoło nie ma tak wysokich pól, jedynie pole na którym stoisz zostanie zniszczone. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.createD="Tworzy białe, puste pola i umieszcza je naokoło, w taki sposób jakby spadły z nieba. Liczba stworzonych pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.revealD="Ukazuje ukryte złe pola naokoło. Przydatne gdy nie widzisz wroga (który ma wyższy poziom niż twoja obrona). Liczba ujawnionych kolumn jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.whiteoutD="Usuwa kolor widzianych z nieba pól. Jeśli pole było złe, zostanie całkowicie oczyszczone. Liczba branych pod uwagę pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.turnblueD="Zmienia kolor na wodny widzianych z nieba pól. Liczba branych pod uwagę pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.turnskyD="Zmienia kolor na powietrzny widzianych z nieba pól. Liczba branych pod uwagę pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.turnorangeD="Zmienia kolor na ognisty widzianych z nieba pól. Liczba branych pod uwagę pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.turngreyD="Zmienia kolor na ziemny widzianych z nieba pól. Liczba branych pod uwagę pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.protectnormalD="Tworzy pole siłowe, które trwa przez ilość tur równą liczbie zebranych kolorów. Tura mija po przejściu z jednego pola na inne. Te pole siłowe chroni przed obrażeniami zadawanymi przy wchodzeniu na złe pola.";this.teleblocksD="Przemieszcza warstwę pól na wprost, widzianych z nieba. Te pola zostaną przemieszczone za graczem. Liczba przemieszczonych pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.shiftblockD="Przemieszcza pole na którym stoisz na dno kolumny na której stoisz. Więc gdybyś stał na białym polu, a pod tobą jest kolorowe pole, używając tego komba bedziesz stał na kolorowym polu a białe pole będzie pod nim. To kombo zawsze działa tak samo, niezależnie od liczby zebranych kolorów.";this.digD="Wykopuje pola pod tobą. Każde kolorowe pole jest odstawiane przed tobą, a białe pola są niszczone. To kombo zawsze działa tak samo, niezależnie od liczby zebranych kolorów.";this.markD="Oznacza twoją dokładną lokalizację. Może ona być użyta do przeniesienia do niej przez inne kombo. To kombo zawsze działa tak samo, niezależnie od liczby zebranych kolorów.";this.recallD="Przenosi do lokalizacji uprzednio oznaczonej innym kombem. Jeśli nie oznaczyłeś żadnej lokalizacji, zostaniesz przeniesiony do lokacji startowej. To kombo zawsze działa tak samo, niezależnie od liczby zebranych kolorów.";this.levitationD="Umożliwia szybowanie w przestworzach! Nie będziesz mógł być zraniony przez złe pola, ale nie możesz też zbierać kolorów. Liczba tur lotu jest zależna od liczby zebranych kolorów + 1. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej. Możesz wylądować w każdym momęcie używając akcji komba.";this.protectdrainD="Tworzy pole siłowe, które trwa przez ilość tur równą liczbie zebranych kolorów. Tura mija po przejściu z jednego pola na inne. Te pole siłowe chroni przed obrażeniami zadawanymi przy zabieraniu koloru złym polom (niektóre zadają obrażenia przy zabieraniu im koloru).";this.randomblockD="Zmienia kolor pól w losowy sposób. Całe kolumny pól są zmieniane. Liczba zmienionych kolumnn jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.healpickD="Nasyca pobliskie pola (widziane z nieba) zdrowiem. Jeśli staniesz na takim polu, uleczysz 1 punkt życia za każde nasycenie. Po wyleczeniu nasycenie znika. Liczba nasyconych pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.pickupD="Pobliskie pola znikną. Będą one bezpiecznie przechowywane w twojej międzywymiarowej kieszeni, będzie więc możliwość umieszczenia ich gdzie indziej używając innego komba. Liczba znikniętych pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.placeD="Pojawia pola zebrane wcześniej przy pomocy innego komba. Te pola były przechowywane w międzywymiarowej kieszeni i teraz zostały przywrócone. To kombo zawsze działa tak samo, niezależnie od liczby zebranych kolorów.";this.createblockD="Tworzy losowe pola i umieszcza je w pobliżu, w taki sposób jakby spadły z nieba. Liczba znikniętych pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.turngreenD="Zmienia kolor na życia widzianych z nieba pól. Liczba branych pod uwagę pól jest zależna od liczby zebranych kolorów. Formuła używa liczb trójkątnych, więc dla 1 zebranego koloru to po prostu 1, dla 2 - 3, dla 3- 6, dla 4 - 10, i tak dalej.";this.buff1D="Przy każdym użyciu zwiększa maksymalne punkty życia o 2. Maksimum to 10 razy, więc maksymalne życie może osiągnąć 25, 5 które jest na starcie plus 2 * 10.";this.buff2D="Przy każdym użyciu zwiększa obronę przeciwko złym polom. Każdy poziom (z 10) daje 1/2 reduckję obrażeń (dla przykładu: z obroną 2 i złym polem które normalnie rani za 2 punkty życia, tym razem zrani jedynie za 1). Każdy poziom umożliwia także widzenie wyższych poziomów wrogów. Jeśli brakuje 1 poziomu, złe pola będą się trząść, jeśli brakuje 2 lub więcej, nie będzie wiadomo które pola są złe!";this.buff3D="Przy każdym użyciu zwiększa mnożnik komba o 5, więc wszystkie komba będą dawać 5 razy więcej punktów niż poprzednio. Na poziomie 2, 10 razy i tak dalej aż do maksimum na poziomie 10, gdzie wszystkie komba będą dawać 50 razy tyle punktów.";this.buff4D="Przy każdym użyciu zwiększa mnożnik złych pól o 5, więc wszystkie kolory odebrane złym polom będą dawać 5 razy więcej punktów niż poprzednio. Na poziomie 2, 10 razy i tak dalej aż do maksimum na poziomie 10, gdzie wszystkie odebrane złym polom kolory będą dawać 50 razy tyle punktów. Oczywiście punkty te są na dodatek mnożone przez poziom wroga, więc złe pole o poziomie 5 będzie dodatkowo mnożyć wynik razy 5. Komba: złe pola i zbieranie koloru działają razem, więc przy maksymalnym poziomie obu można dostać 2500 razy * poziom wroga puntków.";this.buff5D="Przy każdym użyciu zwiększa mnożnik zbierania koloru o 5, więc wszystkie zebrane kolory będą dawać 5 razy więcej punktów niż poprzednio. Na poziomie 2, 10 razy i tak dalej aż do maksimum na poziomie 10, gdzie wszystkie zebrane kolory będą dawać 50 razy tyle punktów. Komba: złe pola i zbieranie koloru działają razem, więc przy maksymalnym poziomie obu można dostać 2500 razy * poziom wroga puntków.";this.tutBasicsD="Celem gry jest ocalenie krainy bieli i rozprawienie się ze wsyzstkimi Kolorami. Uważaj jednak, ponieważ Kolory stawiają opór i wyniszczają krainę swoimi podłymi przydupasami! By pokonać złe Kolory i przynieść pokój krainie, możesz zbierać kolory z kolorowych pól i używać ich do niesamowitych kombosów!";this.tutControlsD="Aby się poruszać, dotknij i przytrzymaj lewą część ekranu - pojawi się okrąg, będzie można przesuwać palcem w kierunku w którym ma poruszać się postać. Aby aktywować kombo, dotknij prawej części ekranu. Jeśli zbierzesz więcej kolorów niż możesz trzymać, wszystkie one znikną i dostaniesz bonus punktowy!";this.tutCombosD="Widzisz te unoszące się kule przy postaci? Przetrzymują one zebrane kolory. Zbierz przynajmniej 1 aby aktywować kombo. Jest wiele różnych kombosów, jeśli aktywujesz dane kombo przynajmniej raz, możesz przeczytać o nim w bibliotece. Nie jest ważna kolejność zebranych kolorów, a ilość służy jedynie do ustalenia siły danego komba.";this.tutEnemiesD="Po zdobyciu 10 punktów, pierwszy typ złych pól zacznie się pojawiać. Jest w sumie 10 typów złych pól, każdy z nich zacznie się pojawiać gdy zbierzesz 10 razy tyle punktów niż porzednio (więc 10, 100, 1000 itd.). Uważaj ze złymi polami, zadadzą obrażenia za każdym razem gdy na nich staniesz, więc najlepiej zabrać ich kolor za pierwszym razem (przez co je niszczymy). W późniejszej części gry niektóre pola zranią cię w momęcie zabrania im koloru, więc uważaj!";this.tutLevelingD="Kombosy używające 4 różnych kolorów są specjalne, pernamentnie zwiększą siłę postaci (aż do śmierci, wtedy trzeba zaczynać od nowa). Jest w sumie 5 takich kombosów, każdy z nich może być użyty 10 razy aby osiągnąć pełny efekt. Gdy użyjesz ich wszystich 10 razy dostaniesz specjalną moc!";this.help="Pomoc";this.using="Używając ";this.colorCombo=" kombo";this.areYouSure="Nadpisać zapis?";this.yes="Tak";this.combosWith="Kombo";this.legendary="LEGENDARNY!";this.legendaryD="Zdobyłeś wszystkie pernamentne bonusy, stając się legendą! Twoje maksymalne punkty życia zostały dodatkowo zwiększone o 5 (dając maksimum: 30), możesz zbierać legendarny mnożnik, a także używać komba składające się z 5 kolorów! Legendarny mnożnik zwiększa się o 1 za każdym razem gdy zbierasz kolor. Ten mnożnik jest aplikowany za każdym razem gdy zdobywasz punkty, więć będziesz zdobywał więcej i więcej! Możesz w diamencie przetrzymywać 5ty kolor, więc możesz używać 5 kolorów do kombosów, które mają o wiele większą moc (dla przykłądu: kombo 4 życia daje 10 PŻ, kombo 5 życia da 15 PŻ). Możesz też używać OSTATECZNEGO KOMBA!, które używa 5 różnych kolorów.";this.ultimateD="Te kombo niszczy wszystko w olbrzymim obszarze. Przydatne jeśli obszar w którym aktualnie jesteś nie pasuje ci lub jest tu zbyt wiele wysokim poziomem złych pól."};Language.prototype.english=function(){this.difficulty="DIFFICULTY: ";this.healedFor="Healed for ";this.thisComboIsMax="This combo is already maxed out!";this.youAreLEGENDARYAlready="You are LEGENDARY already!";this.maximumDefensesIncreased="Defenses and vision increased!";this.multiplierForActivatingCombos="Multiplier for activating combos increased!";this.multiplierForDefeatingEnemies="Multiplier for defeating enemies increased!";this.multiplierForCollectingColors="Multiplier for collecting colors increased!";this.youAreLEGENDARY="You are LEGENDARY!";this.youCanActivate5ColorCombos="You can now activate 5 color combos!";this.destroyed="Destroyed ";this.destructionFailed="Destruction failed!";this.created="Created ";this.creationFailed="Creation failed!";this.teleported="Teleported ";this.cleansed="Cleansed ";this.cleanseFailed="Cleanse failed!";this.locationMarked="Location marked! Use recall to teleport!";this.recalledToLocation="Recalled to marked location!";this.levitationFor="Levitation for ";this.protectionFromCorruptedBlocks="Protection from corrupted blocks for ";this.procetionFromTakingColor="Protection from taking color for ";this.changedRandomly="Changed randomly ";this.randomizeFailed="Randomize failed!";this.healing=" healing ";this.healingBlocksFailed="Healing blocks failed!";this.random=" random ";this.revealingEnemies="Revealing enemies in ";this.revealingFailed="Revealing failed!";this.changedColor=" changed color";this.noBlocksChangedColor="No blocks changed color!";this.moved=" moved";this.noBlocksMoved="No blocks moved!";this.shifted=" shifted";this.toShiftBlocksMustBeAtLeast="To shift blocks, there must be at least 2!";this.dug=" dug";this.thereIsNothingToDig="There is nothing to dig!";this.pickedUp=" picked up";this.noBlocksPickedUp="No blocks picked up!";this.placed=" placed";this.noBlocksPlaced="No blocks placed!";this.noBlocksToPlace="No blocks to place!";this.ultimate="ULTIMATE!";this.controlsExplained="Controls: use left side of the screen as a joystic to move around; stay on a tile to drain it's color; tap right part of the screen to use collected colors (up to 4) in a combo.";this.hp="HP!";this.continueButton="Continue";this.newGameButton="New game";this.library="Library";this.heal="Heal";this.cleanse="Cleanse";this.teleport="Teleport";this.destroy="Destroy";this.create="Create";this.reveal="Reveal";this.whiteout="Whiteout";this.turnblue="Turn water";this.turnsky="Turn air";this.turnorange="Turn fire";this.turngrey="Turn earth";this.protectnormal="Protection";this.teleblocks="Teleport blocks";this.shiftblock="Shift blocks";this.dig="Dig";this.mark="Mark";this.recall="Recall";this.levitation="Levitation";this.protectdrain="Drain protection";this.randomblock="Randomize blocks";this.healpick="Health pickups";this.pickup="Pick up land";this.place="Place land";this.createblock="Create random";this.turngreen="Turn life";this.buff1="Gain life";this.buff2="Gain defense";this.buff3="Gain combo multiplier";this.buff4="Gain enemy multiplier";this.buff5="Gain color multiplier";this.tutBasics="Basics";this.tutControls="Controls";this.tutCombos="Combos";this.tutEnemies="Enemies";this.tutLeveling="Leveling";this.healD="Heals you, giving hit points up to you'r maximum health. Number of hit points restored is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.cleanseD="Cleanses the evil tiles, taking away 1 level from each affected evil tile. Number of column of tiles cleansed is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.teleportD="Teleports you in the direction you are facing. How far you will be teleported is dependant on number of collected colors + 1. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.destroyD="Destroy layer of tiles you are currently standing on. Number of tiles destroyed is dependant on number of collected colors, but if you are standing on high place with no other high places around, only tile you are standing on will be destroyed. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.createD="Creates white, empty tiles and places them all around you, in such a way as they just fell from the sky. Number of tiles created is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.revealD="Reveal hidden evil tiles around you. Useful when you can't yet see the enemy (as they are higher level than your defense). Number of column of tiles revealed is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.whiteoutD="Removes color from visible from the sky tiles. If a tile was evil, it will be also completly cleansed. Number of tiles whitened is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.turnblueD="Changes tile to water in visible from the sky tiles. Number of tiles changed is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.turnskyD="Changes tile to air in visible from the sky tiles. Number of tiles changed is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.turnorangeD="Changes tile to fire in visible from the sky tiles. Number of tiles changed is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.turngreyD="Changes tile to earth in visible from the sky tiles. Number of tiles changed is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.protectnormalD="Creates a forcefield around the player for number of collected colors turns. Turn passes each time you move from one place to another. This forcefield will protect from all damage done to you when moving to evil tiles.";this.teleblocksD="Move layer of tiles that are in front of you, visible from the sky. These tiles will be moved behind you. Number of tiles moved is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.shiftblockD="Places block that you are standing on at the bottom of the column you are standing on. So if you were standing on a white tile, and under it is a colored tile, using this combo will make you stand on colored tile and the white tile will be under it. This combo works always the same, no matter how many collected colors you have.";this.digD="Digs tiles under you. Each colored tile is placed in front of you and the white tiles are destroyed. This combo works always the same, no matter how many collected colors you have.";this.markD="Marks the exact location you are standing on. It can be used to recall to using another combo. This combo works always the same, no matter how many collected colors you have.";this.recallD="Recall to location you have previously marked with another combo. If you haven't marked any location yet, you will be recalled to the start location. This combo works always the same, no matter how many collected colors you have.";this.levitationD="Allows to fly through the air! You won't be harmed by evil tiles, but you can't drain color either. Number of turns flying is dependant on number of collected colors + 1. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on. You can land at any time using combo action.";this.protectdrainD="Creates a forcefield around the player for number of collected colors turns. Turn passes each time you move from one place to another. This forcefield will protect from all damage done to you when draining the evil tiles (some of them damage you when you take their color).";this.randomblockD="Changes colors of nearby tiles in random pattern. Whole column of tiles are changed. Number of columns changed is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.healpickD="Infuses tiles nearby (visible from the sky) with health. If you stand on such tile, you will gain 1 hit point per one infusion. After healing in this way, infusion is gone. Number of tiles infused is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.pickupD="Blocks around you will blink out of existance. They will be safely stored in your dimensional pocket, and you can place them somewhere else using another combo. Number of tiles taken is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.placeD="Blinks tiles you collected earlier with another combo into extistance. These tiles were stored in your dimensional pocket and are now restored. This combo works always the same, no matter how many collected colors you have.";this.createblockD="Creates random colored tiles and places them all around you, in such a way as they just fell from the sky. Number of tiles created is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.turngreenD="Changes tile to life in visible from the sky tiles. Number of tiles changed is dependant on number of collected colors. Formula is using triangular number, so for 1 collected color it's just 1, for 2 - 3, for 3 - 6, for 4 - 10, and so on.";this.buff1D="Everytime it's used expands your maximum life by 2. Maximum is 10 times, so your maximum life can reach 25, 5 you have at the start and 2 * 10.";this.buff2D="Everytime it's used stregnthen your defenses against evil tiles. Each level (out of 10) gives 1/2 damage reduction (for example: with defense 2 and enemy who normally hurt you for 2 hit points, you will only get hit for 1). Also every level allows to see higher level enemies. If you are short by 1 level, you will see them shaking, if you are short by 2 or more, you won't know where they are at all!";this.buff3D="Everytime it's used raises combo multiplier by 5, so all combos done will give 5 times the points as they would normally give. At level 2, 10 times and so on until maximum at level 10, where all combos will give 50 times points.";this.buff4D="Everytime it's used raises evil tiles multiplier by 5, so you will gain additional points for every evil tile you drain. At level 2 you will gain 10 times the points, and at maximum level 10 - 50 times the points. Of course that is also multiplied by level of the enemy, so enemy level 5 will also multiply the score by 5. Evil tiles and color drain multipliers work together, so at maximum level of both you will gain 2500 times * enemy level the points.";this.buff5D="Everytime it's used raises color drain multiplier by 5, so all collected colors give 5 times the points. At level 2 it's 10 times the points, and at maximum level 10 - 50 times the points. Evil tiles and color drain multipliers work together, so at maximum level of both you will gain 2500 times * enemy level the points.";this.tutBasicsD="The goal of the game is to save the land of white and eradicate all Colors. But beware, as the Colors rebell and corrupt the land with their vile spawns! To defead the evil Colors and bring peace and prosperity to the land, you can drain the color from the vile Colors and use it in amazing combos!";this.tutControlsD="To move around, touch and hold the left side of the screen - circle will appear, and you can move by swiping your finger in the desired direction. To activate collected colors in a combo, tap the right side of the screen. If you collect more colors than you can hold, all your colors will dissapear and you will gain bonus points!";this.tutCombosD="See that floating balls by your character? These hold collected colors of the enemies. Collect at least one to be able to activate combo. There are many diffrent combos, and once you activated the combo at least once, you can read about it in the library. It doesn't matter what order you collected the colors, and quanity will only determine the strength of the effect.";this.tutEnemiesD="Once you collect 10 points, first type of evil tiles will start appearing. There are total of 10 types of enemies, each will start appearing once you collect 10 times more than before (so 10, 100, 1000 etc.). Be carefull around enemies, they will hurt you each time you stand on them, so its best to drain them from their color the first time(destroing them). Later on some of them will hurt you the moment you taken their color, so be carefull!";this.tutLevelingD="The combos that use 4 colors are special, they will pernamently strenghten your character (until you die and have to start over). There is total of 5 such combos, and each one can be used 10 times to gain full effect. Once you use all of them 10 times, you will gain special power!";this.help="Help";this.using="Using ";this.colorCombo=" combo";this.areYouSure="Overwrite save?";this.yes="Yes";this.combosWith="Combos";this.legendary="LEGENDARY!";this.legendaryD="You have gained all pernament bonuses, becoming legendary! Your maximum health is further expanded by 5 (giving you maximum health of 30), you can collect ultra multiplier now, and you can use 5 color combos! Ultra multiplier is gained every time you drain a color, giving 1 extra ultra multiplier. This multiplier is applied every time you gain points, so you will gain more and more! You can store the 5th color inside the diamond now, so you can use 5 colors combos, that have much greater power (for example: 4 life combo will give 10 hp, 5 life combo will give 15). You can also use ULTIMATE, combo that uses 5 diffrent colors.";this.ultimateD="This combo destroys everything in a huge radius. Handy if the area you are playing doesn't suit you or have become too corrupted."};Language.prototype.block=function(howMany){if(this.lan==1){if(howMany==1){return"pole"}else if(howMany>1&&howMany<5){return"pola"}else{return"pól"}}else{if(howMany==1){return"tile"}else{return"tiles"}}};Language.prototype.turn=function(howMany){if(this.lan==1){if(howMany==1){return"turę"}else if(howMany>1&&howMany<5){return"tury"}else{return"tór"}}else{if(howMany==1){return"turn"}else{return"turns"}}};Language.prototype.color=function(howMany){if(this.lan==1){if(howMany==1){return"koloru"}else{return"kolorów"}}else{if(howMany==1){return"color"}else{return"colors"}}};Language.prototype.tip=function(r){var t;if(this.lan==1){switch(r){case 0:t="Nie ma limitu czasu! Zastanów się i przemyśl dokładnie swój następny ruch.";break;case 1:t="Uważaj przy poruszaniu się! Za każdym razem gdy poruszasz się z pola na pole (które nie jest białe), złe pola się rozprzestrzeniają.";break;case 2:t="Uważaj przy wchodzeniu na złe pola! Stracisz punkty życia. Możesz później spokojnie na nich stać.";break;case 3:t="Niektóre złe pola zranią cię gdy zabierzesz im kolor!";break;case 4:t="Widzisz te drżące pola? Są złe, jednak potrzebujesz wyższego poziomu obrony by je dostrzec!";break;case 5:t="Możesz nie brać koloru gdy ruszysz się dostatecznie szybko do następnego pola. (Przydatne jeśli chcesz aktywować konkretne kombo)";break;case 6:t="Gdy twoje punkty życia spadną do 0, przegrasz. Pamiętaj o leczeniu!";break;case 7:t="Postaraj się nie ruszać w jednym miejscu zbyt długo, coraz więcej złych pól będzie się pojawiać! (Chyba że chodzisz po białych polach)";break;default:t="Hej! Słuchaj! Hej! Słuchaj!";break}}else{switch(r){case 0:t="There is no time limit! Take your time and think throughly your next move.";break;case 1:t="Be carefull when moving too much! Every time you move from one tile to another (that is not white), corruption spreads.";break;case 2:t="Be carefull when moving to corrupted blocks! You will lose life. You can safely stand at them after that.";break;case 3:t="Some corrupted tiles will hurt you when you try to take their color!";
break;case 4:t="See that shaking normal colored tiles? They are evil, but you need higher defense to see them!";break;case 5:t="You can skip taking color when you move fast enought to another tile. (Usefull when you want to activate specific combo)";break;case 6:t="When your life reaches 0, you will lose. Remember to heal!";break;case 7:t="Try not to move in one area for too long, as it will gradually become more corrupted! (Unless you move on white tiles)";break;default:t="Hey! Listen! Hey! Listen!";break}}return t};function Game(p,m){if(is(p)){this.player=p}if(is(m)){this.map=m}}Game.prototype.firstTime=function(){this.screen=new Screen;this.input=new Input;if(!this.map)this.map=new Map;if(!this.player)this.player=new Player;this.gui=new Gui;this.effects=new Effects(this.player,this.map,this.gui);this.level=new Level(defaultViewPort);this.level.setMap(this.map);this.level.addObject(this.player);this.level.setCenter(this.player);this.level.gui=this.gui;this.level.effects=this.effects;this.screen.addChild(this.level.get());if(showGUI)this.gui.addToScreen(this.screen);this.level.loadMap()};Game.prototype.main=function(delta){this.update(delta);this.screen.render();if(!is(this.firstTimeBool)){if(is(this.firstTimeSecondBool)){this.firstTimeBool=true;hideLoadingScreen()}this.firstTimeSecondBool=true}};Game.prototype.update=function(delta){this.updateInput(delta);this.player.update(delta);this.effects.update(delta);this.level.update(delta);this.gui.update(delta)};Game.prototype.updateInput=function(delta){if(this.input.type==2){this.gui.hideControlsHelp();var speed=10;var moveVector=new Point(0,0);if(this.input.keysDown[37]){moveVector.x-=1}else if(this.input.keysDown[39]){moveVector.x+=1}if(this.input.keysDown[38]){moveVector.y-=1}else if(this.input.keysDown[40]){moveVector.y+=1}this.player.moveArrowKeys(moveVector);if(this.input.keysDown[187]){this.level.setViewPort(this.level.size-2);this.input.keysDown[187]=false}else if(this.input.keysDown[189]){this.level.setViewPort(this.level.size+2);this.input.keysDown[189]=false}if(this.input.keysDown[32]){this.player.activate=true;this.input.keysDown[32]=false}if(this.input.keysDown[27]){this.input.keysDown[27]=false;menu.showMenu(true)}}else if(this.input.type==4){var t=this.input.touches;var sh=constantWidth*.5;var sw=constantHeight*.25;var swr=constantHeight*.5;var p=new Point(0,0);if(t)if(t.length>0){var ls=null;rs=null;for(var i=0;i<t.length;i++){if(t[i].clientX<sh&&t[i].clientY>sw){if(!ls){ls=new Point(t[i].clientX,t[i].clientY);ls.id=t[i].identifier}else{ls=null}}else if(t[i].clientX>sh&&t[i].clientY>swr){if(!rs){rs=new Point(t[i].clientX,t[i].clientY)}else{rs=null}}}if(ls){if(this.analogStick){var as=null;var id=this.analogStick.id;if(ls.id==id){as=ls}if(as){p=new Point(this.analogStick.x-as.x,this.analogStick.y-as.y);this.gui.analogStickBob.position.x=as.x;this.gui.analogStickBob.position.y=as.y}else{this.analogStick=null;this.gui.analogStick.visible=false;this.gui.analogStickBob.visible=false}}else{if(ls){this.analogStick=new Point(ls.x,ls.y);this.analogStick.id=ls.id;this.gui.analogStick.position.x=ls.x;this.gui.analogStick.position.y=ls.y;this.gui.analogStickBob.position.x=ls.x;this.gui.analogStickBob.position.y=ls.y;this.gui.analogStick.visible=true;this.gui.analogStickBob.visible=true}}}else{this.analogStick=null;this.gui.analogStick.visible=false;this.gui.analogStickBob.visible=false}if(rs){this.gui.hideControlsHelp();this.player.activate=true;this.gui.analogStickRight.position.x=rs.x;this.gui.analogStickRight.position.y=rs.y;this.gui.analogStickRight.visible=true}else{this.player.activate=false;this.gui.analogStickRight.visible=false}}else{this.analogStick=null;this.gui.analogStick.visible=false;this.gui.analogStickBob.visible=false;this.gui.analogStickRight.visible=false}this.player.moveTouch(p)}else{this.player.move(new Point(0,0))}};function Tile(width,height,size){this.dimensions(width,height,size)}Tile.prototype.dimensions=function(width,height,size){this.width=sad(width,200);this.height=sad(height,100);this.size=sad(size,50)};Tile.prototype.oneColor=function(c){this.primaryColor=c;this.secondaryColor=ni(c,-.2);this.tertiaryColor=ni(c,-.35);this.primaryLineColor=ni(c,-.6);this.secondaryLineColor=ni(c,.2);this.primaryLineThickness=3;this.secondaryLineThickness=3};Tile.prototype.colors=function(primary,secondary){this.primaryColor=sad(primary,4231398);this.secondaryColor=sad(secondary,3768524)};Tile.prototype.lines=function(primaryThickness,primaryColor,secondaryThickness,secondaryColor){this.primaryLineThickness=sad(primaryThickness,2);this.primaryLineColor=sad(primaryColor,0);this.secondaryLineThickness=sad(secondaryThickness,1);this.secondaryLineColor=sad(secondaryColor,0)};Tile.prototype.init=function(){var width=this.width;var height=this.height;var size=this.size;if(!is(this.primaryColor))this.colors();var colorMain=this.primaryColor;var colorSecondary=this.secondaryColor;var colorTertiary=this.tertiaryColor;if(!is(this.primaryLineThickness))this.lines();var sizeOutlines=this.primaryLineThickness;var colorOutline=this.primaryLineColor;var sizeLines=this.secondaryLineThickness;var colorLines=this.secondaryLineColor;var o=new PIXI.Graphics;var w=width*.5;var h=height*.5;var w2=w*2;var h2=h*2;var s=size;o.beginFill(colorMain);o.moveTo(w,0);o.lineTo(w2,h);o.lineTo(w,h2);o.lineTo(0,h);o.lineTo(w,0);o.endFill();o.beginFill(colorSecondary);o.moveTo(0,h);o.lineTo(w,h2);o.lineTo(w,h2+s);o.lineTo(0,h+s);o.lineTo(0,h);o.endFill();o.beginFill(colorTertiary);o.moveTo(w,h2);o.lineTo(w2,h);o.lineTo(w2,h+s);o.lineTo(w,h2+s);o.endFill();o.lineStyle(sizeLines,colorLines);if(sizeLines){o.moveTo(0,h);o.lineTo(w,h2);o.lineTo(w2,h);o.moveTo(w,h2);o.lineTo(w,h2+s)}if(sizeOutlines>0)o.lineStyle(sizeOutlines,colorOutline);if(sizeOutlines>0||sizeLines>0){o.moveTo(w,0);o.lineTo(w2,h);o.lineTo(w2,h+s);o.lineTo(w,h2+s);o.lineTo(0,h+s);o.lineTo(0,h);o.lineTo(w,0)}var t=s*.5;this.polygon=new PIXI.Polygon([0,-h-t,w,-t,w,s-t,0,h+s-t,-w,s-t,-w,-t]);this.graphic=o};Tile.prototype.empty=function(){this.graphic=new PIXI.Graphics};Tile.prototype.addGood1=function(){if(!is(this.graphic))this.init();var o=this.graphic;var width=this.width;var height=this.height;var size=this.size;var sizeOutlines=this.primaryLineThickness;var colorOutline=this.primaryLineColor;var xx=width/8;var yy=height/8;o.lineStyle(sizeOutlines,16766720);o.moveTo(5*xx,5*yy);o.lineTo(6*xx,6*yy);o.lineTo(6*xx,6*yy+size);o.moveTo(3*xx,4*yy);o.lineTo(2*xx,4*yy);o.lineTo(1*xx,5*yy);o.lineTo(1*xx,5*yy+size);o.moveTo(5*xx,4*yy);o.lineTo(6*xx,4*yy);o.lineTo(7*xx,3*yy);this.graphic=o};Tile.prototype.addEvil1=function(){if(!is(this.graphic))this.init();var o=this.graphic;var width=this.width;var height=this.height;var size=this.size;var sizeOutlines=this.primaryLineThickness;var colorOutline=this.primaryLineColor;var xx=width/8;var yy=height/8;o.lineStyle(sizeOutlines,colorOutline);o.moveTo(5*xx,5*yy);o.lineTo(6*xx,6*yy);o.lineTo(6*xx,6*yy+size);o.moveTo(3*xx,4*yy);o.lineTo(2*xx,4*yy);o.lineTo(1*xx,5*yy);o.lineTo(1*xx,5*yy+size);o.moveTo(5*xx,4*yy);o.lineTo(6*xx,4*yy);o.lineTo(7*xx,3*yy);this.graphic=o};Tile.prototype.addEvil2=function(){if(!is(this.graphic))this.init();var o=this.graphic;var width=this.width;var height=this.height;var size=this.size;var sizeOutlines=this.primaryLineThickness;var colorOutline=this.primaryLineColor;var xx=width/8;var yy=height/8;o.lineStyle(sizeOutlines,colorOutline);o.moveTo(2*xx,2*yy);o.lineTo(3*xx,3*yy);o.moveTo(5*xx,5*yy);o.lineTo(6*xx,6*yy);o.lineTo(6*xx,6*yy+size);o.moveTo(3*xx,4*yy);o.lineTo(2*xx,4*yy);o.lineTo(1*xx,5*yy);o.lineTo(1*xx,5*yy+size);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,6*yy);o.lineTo(3*xx,7*yy);o.lineTo(3*xx,7*yy+size);o.moveTo(4*xx,3*yy);o.lineTo(4*xx,2*yy);o.lineTo(5*xx,1*yy);o.moveTo(5*xx,4*yy);o.lineTo(6*xx,4*yy);o.lineTo(7*xx,3*yy);this.graphic=o};Tile.prototype.addEvil3=function(){if(!is(this.graphic))this.init();var o=this.graphic;var width=this.width;var height=this.height;var size=this.size;var sizeOutlines=this.primaryLineThickness;var colorOutline=this.primaryLineColor;var xx=width/8;var yy=height/8;o.lineStyle(sizeOutlines,colorOutline);o.moveTo(2*xx,2*yy);o.lineTo(3*xx,3*yy);o.moveTo(5*xx,5*yy);o.lineTo(6*xx,6*yy);o.lineTo(6*xx,6*yy+size);o.moveTo(3*xx,4*yy);o.lineTo(2*xx,4*yy);o.lineTo(1*xx,5*yy);o.lineTo(1*xx,5*yy+size);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,6*yy);o.lineTo(3*xx,7*yy);o.lineTo(3*xx,7*yy+size);o.moveTo(4*xx,3*yy);o.lineTo(4*xx,2*yy);o.lineTo(5*xx,1*yy);o.moveTo(5*xx,4*yy);o.lineTo(6*xx,4*yy);o.lineTo(7*xx,3*yy);o.moveTo(3*xx,3*yy);o.lineTo(4*xx,3*yy);o.lineTo(5*xx,4*yy);o.lineTo(5*xx,5*yy);o.lineTo(4*xx,5*yy);o.lineTo(3*xx,4*yy);o.lineTo(3*xx,3*yy);this.graphic=o};Tile.prototype.addEvil4=function(){if(!is(this.graphic))this.init();var o=this.graphic;var width=this.width;var height=this.height;var size=this.size;var sizeOutlines=this.primaryLineThickness;var colorOutline=this.primaryLineColor;var xx=width/8;var yy=height/8;o.lineStyle(sizeOutlines,colorOutline);o.moveTo(2*xx,2*yy);o.lineTo(3*xx,3*yy);o.moveTo(5*xx,5*yy);o.lineTo(6*xx,6*yy);o.lineTo(6*xx,6*yy+size);o.moveTo(3*xx,4*yy);o.lineTo(2*xx,4*yy);o.lineTo(1*xx,5*yy);o.lineTo(1*xx,5*yy+size);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,6*yy);o.lineTo(3*xx,7*yy);o.lineTo(3*xx,7*yy+size);o.moveTo(4*xx,3*yy);o.lineTo(4*xx,2*yy);o.lineTo(5*xx,1*yy);o.moveTo(5*xx,4*yy);o.lineTo(6*xx,4*yy);o.lineTo(7*xx,3*yy);o.moveTo(1*xx,3*yy);o.lineTo(2*xx,4*yy);o.moveTo(3*xx,1*yy);o.lineTo(4*xx,2*yy);o.moveTo(4*xx,6*yy);o.lineTo(5*xx,7*yy);o.lineTo(5*xx,7*yy+size);o.moveTo(6*xx,4*yy);o.lineTo(7*xx,5*yy);o.lineTo(7*xx,5*yy+size);o.moveTo(3*xx,3*yy);o.lineTo(4*xx,3*yy);o.lineTo(5*xx,4*yy);o.lineTo(5*xx,5*yy);o.lineTo(4*xx,5*yy);o.lineTo(3*xx,4*yy);o.lineTo(3*xx,3*yy);this.graphic=o};Tile.prototype.addEvil5=function(){if(!is(this.graphic))this.init();var o=this.graphic;var width=this.width;var height=this.height;var size=this.size;var sizeOutlines=this.primaryLineThickness;var colorOutline=this.primaryLineColor;var xx=width/8;var yy=height/8;o.lineStyle(sizeOutlines,colorOutline);o.moveTo(2*xx,2*yy);o.lineTo(3*xx,3*yy);o.moveTo(5*xx,5*yy);o.lineTo(6*xx,6*yy);o.lineTo(6*xx,6*yy+size);o.moveTo(3*xx,4*yy);o.lineTo(2*xx,4*yy);o.lineTo(1*xx,5*yy);o.lineTo(1*xx,5*yy+size);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,6*yy);o.lineTo(3*xx,7*yy);o.lineTo(3*xx,7*yy+size);o.moveTo(4*xx,3*yy);o.lineTo(4*xx,2*yy);o.lineTo(5*xx,1*yy);o.moveTo(5*xx,4*yy);o.lineTo(6*xx,4*yy);o.lineTo(7*xx,3*yy);o.moveTo(1*xx,3*yy);o.lineTo(2*xx,4*yy);o.moveTo(3*xx,1*yy);o.lineTo(4*xx,2*yy);o.moveTo(4*xx,6*yy);o.lineTo(5*xx,7*yy);o.lineTo(5*xx,7*yy+size);o.moveTo(6*xx,4*yy);o.lineTo(7*xx,5*yy);o.lineTo(7*xx,5*yy+size);o.moveTo(6*xx,2*yy);o.lineTo(4*xx,3*yy);o.moveTo(6*xx,2*yy);o.lineTo(5*xx,4*yy);o.moveTo(2*xx,6*yy);o.lineTo(3*xx,4*yy);o.moveTo(2*xx,6*yy);o.lineTo(4*xx,5*yy);o.moveTo(2*xx,6*yy);o.lineTo(2*xx,6*yy+size);o.moveTo(3*xx,3*yy);o.lineTo(4*xx,3*yy);o.lineTo(5*xx,4*yy);o.lineTo(5*xx,5*yy);o.lineTo(4*xx,5*yy);o.lineTo(3*xx,4*yy);o.lineTo(3*xx,3*yy);this.graphic=o};Tile.prototype.addEvil6=function(color){if(!is(this.graphic))this.init();var o=this.graphic;var width=this.width;var height=this.height;var size=this.size;var crystalColor=color;var sizeOutlines=this.primaryLineThickness;var colorOutline=this.primaryLineColor;var xx=width/8;var yy=height/8;o.lineStyle(sizeOutlines,colorOutline);o.moveTo(2*xx,2*yy);o.lineTo(3*xx,3*yy);o.moveTo(5*xx,5*yy);o.lineTo(6*xx,6*yy);o.lineTo(6*xx,6*yy+size);o.moveTo(3*xx,4*yy);o.lineTo(2*xx,4*yy);o.lineTo(1*xx,5*yy);o.lineTo(1*xx,5*yy+size);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,6*yy);o.lineTo(3*xx,7*yy);o.lineTo(3*xx,7*yy+size);o.moveTo(4*xx,3*yy);o.lineTo(4*xx,2*yy);o.lineTo(5*xx,1*yy);o.moveTo(5*xx,4*yy);o.lineTo(6*xx,4*yy);o.lineTo(7*xx,3*yy);o.moveTo(1*xx,3*yy);o.lineTo(2*xx,4*yy);o.moveTo(3*xx,1*yy);o.lineTo(4*xx,2*yy);o.moveTo(4*xx,6*yy);o.lineTo(5*xx,7*yy);o.lineTo(5*xx,7*yy+size);o.moveTo(6*xx,4*yy);o.lineTo(7*xx,5*yy);o.lineTo(7*xx,5*yy+size);o.moveTo(6*xx,2*yy);o.lineTo(4*xx,3*yy);o.moveTo(6*xx,2*yy);o.lineTo(5*xx,4*yy);o.moveTo(2*xx,6*yy);o.lineTo(3*xx,4*yy);o.moveTo(2*xx,6*yy);o.lineTo(4*xx,5*yy);o.moveTo(2*xx,6*yy);o.lineTo(2*xx,6*yy+size);o.beginFill(crystalColor);o.moveTo(3*xx,3*yy);o.lineTo(4*xx,3*yy);o.lineTo(5*xx,4*yy);o.lineTo(5*xx,5*yy);o.lineTo(4*xx,5*yy);o.lineTo(3*xx,4*yy);o.lineTo(3*xx,3*yy);o.endFill();this.graphic=o};Tile.prototype.finish=function(){if(!is(this.graphic))this.init();this.texture=this.graphic.generateTexture()};Tile.prototype.tile=function(p){if(!is(this.texture))this.finish();var tile=new PIXI.Sprite(this.texture);tile.hitArea=this.polygon;tile.anchor.x=.5;tile.anchor.y=.5;if(!is(p))p=new Point(0,0);tile.position.x=p.x;tile.position.y=p.y;return tile};function Effects(player,map,gui){var p=this.player=player;this.map=map;this.gui=gui;this.timer=0;this.timerActivate=0;this.gui.updateBuffs(p.permBuff0,p.permBuff1,p.permBuff2,p.permBuff3,p.permBuff4,p.multiplierUltimate);this.gui.score=this.player.realScore;this.gui.changeScore();this.updateShieldTimer()}Effects.prototype.update=function(delta){this.timer+=delta};Effects.prototype.addScore=function(score){var map=this.map;this.gui.score=this.player.realScore+=score;if(map.difficulty<10){var s=this.gui.score;var d=map.difficulty;var l=10;for(var i=0;i<d;i++){l*=10}if(s>=l){map.difficulty++;this.gui.addQuickMessage("+"+score,1,1);this.gui.addQuickMessage(language.difficulty+map.difficulty+"!",2,1)}else{this.gui.addQuickMessage("+"+score,1,1)}}else{this.gui.addQuickMessage("+"+score,1,1)}this.gui.changeScore()};Effects.prototype.changeUltimateMultiplier=function(){var p=this.player;this.gui.updateBuffs(p.permBuff0,p.permBuff1,p.permBuff2,p.permBuff3,p.permBuff4,p.multiplierUltimate)};Effects.prototype.changeLife=function(life,maxLife){this.gui.changeLife(life,maxLife)};Effects.prototype.activate=function(scoreHere){var shouldReloadMap=false;scoreMultiplier=sad(scoreHere,0);if(this.timerActivate<=this.timer||scoreMultiplier>0||constantCombo){this.timerActivate=this.timer+1;if(this.player.levitation>0){this.player.levitation=0;this.player.changedDirection=true;return true}var p=this.player;var m=this.map;var green=p.suckPool["col"+1];var blue=p.suckPool["col"+2];var sky=p.suckPool["col"+3];var orange=p.suckPool["col"+4];var grey=p.suckPool["col"+5];log("Green: "+green);log("Blue: "+blue);log("Sky: "+sky);log("Orange: "+orange);log("Grey: "+grey);var all=green+blue+sky+orange+grey;var score=p.drainPool();if(score<1&&!constantCombo)return shouldReloadMap;if(scoreMultiplier>0)score*=scoreMultiplier;if(p.multiplierCombo>0){score*=p.multiplierCombo}this.addScore(score);for(var i=1;i<=4;i++){p["b"+i].tint=p.tileSet.getColor(0)}p.center.tint=p.tileSet.getColor(0);p.lastBall=0;if(constantCombo){green=constantComboValues.g;blue=constantComboValues.b;sky=constantComboValues.s;orange=constantComboValues.o;grey=constantComboValues.e;all=green+blue+sky+orange+grey}var power5=5,power4=4,power3=3,power2=2,power1=1,power0=0;if(green==power5){this.heal(green)}else if(blue==power5){shouldReloadMap=this.cleanse(blue)}else if(sky==power5){shouldReloadMap=this.teleport(sky)}else if(orange==power5){shouldReloadMap=this.destroyBlock(orange)}else if(grey==power5){shouldReloadMap=this.createBlock(grey)}else if(green==power1&&blue==power1&&sky==power1&&orange==power1&&grey==power1){shouldReloadMap=this.ultimateActivate();menu.addToLibrary("ultimate")}else if(green==power0&&blue>power0&&sky>power0&&orange==power0&&grey>power0){shouldReloadMap=this.mark();menu.addToLibrary("mark")}else if(green>power0&&blue>power0&&sky>power0&&orange==power0&&grey==power0){shouldReloadMap=this.recall();menu.addToLibrary("recall")}else if(green==power0&&blue>power0&&sky>power0&&orange>power0&&grey==power0){shouldReloadMap=this.levitation(all);menu.addToLibrary("levitation")}else if(green>power0&&blue==power0&&sky>power0&&orange>power0&&grey==power0){shouldReloadMap=this.protectionFromDamage(1,all);menu.addToLibrary("protectdrain")}else if(green==power0&&blue==power0&&sky>power0&&orange>power0&&grey>power0){shouldReloadMap=this.randomizeBlockColors(all);menu.addToLibrary("randomblock")}else if(green>power0&&blue>power0&&sky==power0&&orange==power0&&grey>power0){shouldReloadMap=this.healthPickUps(all);menu.addToLibrary("healpick")}else if(green>power0&&blue>power0&&sky==power0&&orange>power0&&grey==power0){shouldReloadMap=this.pickUpLand(all);menu.addToLibrary("pickup")}else if(green==power0&&blue>power0&&sky==power0&&orange>power0&&grey>power0){shouldReloadMap=this.placeLand(all);menu.addToLibrary("place")}else if(green>power0&&blue==power0&&sky==power0&&orange>power0&&grey>power0){shouldReloadMap=this.createNewBlocks(all);menu.addToLibrary("createblock")}else if(green>power0&&blue==power0&&sky>power0&&orange==power0&&grey>power0){shouldReloadMap=this.changeColor(1,all);menu.addToLibrary("turngreen")}else if(green==power0&&blue>power0&&sky>power0&&orange==power0&&grey==power0){shouldReloadMap=this.reveal(all);menu.addToLibrary("reveal")}else if(green==power0&&blue==power0&&sky>power0&&orange>power0&&grey==power0){shouldReloadMap=this.changeColor(0,all);menu.addToLibrary("whiteout")}else if(green>power0&&blue>power0&&sky==power0&&orange==power0&&grey==power0){shouldReloadMap=this.changeColor(2,all);menu.addToLibrary("turnblue")}else if(green>power0&&blue==power0&&sky>power0&&orange==power0&&grey==power0){shouldReloadMap=this.changeColor(3,all);menu.addToLibrary("turnsky")}else if(green>power0&&blue==power0&&sky==power0&&orange>power0&&grey==power0){shouldReloadMap=this.changeColor(4,all);menu.addToLibrary("turnorange")}else if(green>power0&&blue==power0&&sky==power0&&orange==power0&&grey>power0){shouldReloadMap=this.changeColor(5,all);menu.addToLibrary("turngrey")}else if(green==power0&&blue>power0&&sky==power0&&orange>power0&&grey==power0){shouldReloadMap=this.protectionFromDamage(0,all);menu.addToLibrary("protectnormal")}else if(green==power0&&blue==power0&&sky>power0&&orange==power0&&grey>power0){shouldReloadMap=this.teleportBlocksBehind(all);menu.addToLibrary("teleblocks")}else if(green==power0&&blue>power0&&sky==power0&&orange==power0&&grey>power0){shouldReloadMap=this.shiftAndPlaceBlockAtBottom(all);menu.addToLibrary("shiftblock")}else if(green==power0&&blue==power0&&sky==power0&&orange>power0&&grey>power0){shouldReloadMap=this.digAndPlaceInFront(all);menu.addToLibrary("dig")}else if(green==power4){this.heal(green)}else if(blue==power4){shouldReloadMap=this.cleanse(blue)}else if(sky==power4){shouldReloadMap=this.teleport(sky)}else if(orange==power4){shouldReloadMap=this.destroyBlock(orange)}else if(grey==power4){shouldReloadMap=this.createBlock(grey)}else if(blue==power1&&sky==power1&&orange==power1&&grey==power1){shouldReloadMap=this.permBuff(0);menu.addToLibrary("buff1")}else if(green==power1&&sky==power1&&orange==power1&&grey==power1){shouldReloadMap=this.permBuff(1);menu.addToLibrary("buff2")}else if(green==power1&&blue==power1&&orange==power1&&grey==power1){shouldReloadMap=this.permBuff(2);menu.addToLibrary("buff3")}else if(green==power1&&blue==power1&&sky==power1&&grey==power1){shouldReloadMap=this.permBuff(3);menu.addToLibrary("buff4")}else if(green==power1&&blue==power1&&sky==power1&&orange==power1){shouldReloadMap=this.permBuff(4);menu.addToLibrary("buff5")}else if(green==power3){this.heal(green)}else if(blue==power3){shouldReloadMap=this.cleanse(blue)}else if(sky==power3){shouldReloadMap=this.teleport(sky)}else if(orange==power3){shouldReloadMap=this.destroyBlock(orange)}else if(grey==power3){shouldReloadMap=this.createBlock(grey)}else if(green==power2){this.heal(green)}else if(blue==power2){shouldReloadMap=this.cleanse(blue)}else if(sky==power2){shouldReloadMap=this.teleport(sky)}else if(orange==power2){shouldReloadMap=this.destroyBlock(orange)}else if(grey==power2){shouldReloadMap=this.createBlock(grey)}else if(green==power1){this.heal(green)}else if(blue==power1){shouldReloadMap=this.cleanse(blue)}else if(sky==power1){shouldReloadMap=this.teleport(sky)}else if(orange==power1){shouldReloadMap=this.destroyBlock(orange)}else if(grey==power1){shouldReloadMap=this.createBlock(grey)}}return shouldReloadMap};Effects.prototype.heal=function(h,t){t=sad(t,this.player);var life=t.life;h=n1(h);life+=h;if(life>t.maxLife)life=t.maxLife;t.life=life;this.gui.addQuickMessage(language.healedFor+h+"!");this.changeLife(t.life,t.maxLife);menu.addToLibrary("heal")};Effects.prototype.permBuff=function(buff){var shouldReloadMap=false;var p=this.player;if(p.level<10){switch(buff){case 0:if(p.permBuff0<10){p.permBuff0++;p.maxLife+=2;this.changeLife(p.life,p.maxLife);this.gui.addQuickMessage("Maximum health increased!")}else{this.gui.addQuickMessage(language.thisComboIsMax)}break;case 1:if(p.permBuff1<10){p.permBuff1++;shouldReloadMap=true;this.gui.addQuickMessage(language.maximumDefensesIncreased)}else{this.gui.addQuickMessage(language.thisComboIsMax)}break;case 2:if(p.permBuff2<10){p.permBuff2++;p.multiplierCombo+=10;this.gui.addQuickMessage(language.multiplierForActivatingCombos)}else{this.gui.addQuickMessage(language.thisComboIsMax)}break;case 3:if(p.permBuff3<10){p.permBuff3++;p.multiplierEnemy+=10;this.gui.addQuickMessage(language.multiplierForDefeatingEnemies)}else{this.gui.addQuickMessage(language.thisComboIsMax)}break;case 4:if(p.permBuff4<10){p.permBuff4++;p.multiplierWait+=10;this.gui.addQuickMessage(language.multiplierForCollectingColors)}else{this.gui.addQuickMessage(language.thisComboIsMax)}break;default:break}this.gui.updateBuffs(p.permBuff0,p.permBuff1,p.permBuff2,p.permBuff3,p.permBuff4,p.multiplierUltimate);this.checkForMaxLevel()}else{this.gui.addQuickMessage(language.youAreLEGENDARYAlready);menu.addToLibrary("legendary")}var score=10;if(p.multiplierCombo>0)score*=p.multiplierCombo;if(p.multiplierUltimate>0)score*=p.multiplierUltimate;this.addScore(score);return shouldReloadMap};Effects.prototype.checkForMaxLevel=function(){var p=this.player;if(p.permBuff0==10&&p.permBuff1==10&&p.permBuff2==10&&p.permBuff3==10&&p.permBuff4==10){p.level=10;p.maxLife+=5;this.changeLife(p.life,p.maxLife);p.transitionToLegendary();this.gui.addQuickMessage(language.youAreLEGENDARY,1);this.gui.addQuickMessage(language.youCanActivate5ColorCombos);menu.addToLibrary("legendary")}};Effects.prototype.destroyBlock=function(l){log("Destroyed block");var e=this.player.altitude;var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(l){case 1:r+=this.map.setBlock(0,0,e);break;case 2:r+=this.map.setBlock(0,0,e);r+=this.map.setBlock(p.x,p.y,e);r+=this.map.setBlock(p.x*-1,p.y*-1,e);break;case 3:r+=this.map.setBlock(0,0,e);r+=this.map.setBlock(p.x,p.y,e);r+=this.map.setBlock(p.x*-1,p.y*-1,e);r+=this.map.setBlock(p.x*2,p.y*2,e);r+=this.map.setBlock(p.y*1,p.x,e);r+=this.map.setBlock(p.y*-1,p.x*-1,e);break;case 4:r+=this.map.setBlock(0,0,e);r+=this.map.setBlock(p.x,p.y,e);r+=this.map.setBlock(p.x*-1,p.y*-1,e);r+=this.map.setBlock(p.x*2,p.y*2,e);r+=this.map.setBlock(p.y,p.x,e);r+=this.map.setBlock(p.y*-1,p.x*-1,e);r+=this.map.setBlock(p.x+p.y,p.x+p.y,e);r+=this.map.setBlock(p.x-p.y,-p.x+p.y,e);r+=this.map.setBlock(-p.x+p.y,p.x-p.y,e);r+=this.map.setBlock(-p.x-p.y,-p.x-p.y,e);break;case 5:r+=this.map.setBlock(0,0,e);r+=this.map.setBlock(p.x,p.y,e);r+=this.map.setBlock(p.x*-1,p.y*-1,e);r+=this.map.setBlock(p.x*2,p.y*2,e);r+=this.map.setBlock(p.y,p.x,e);r+=this.map.setBlock(p.y*-1,p.x*-1,e);r+=this.map.setBlock(p.x+p.y,p.x+p.y,e);r+=this.map.setBlock(p.x-p.y,-p.x+p.y,e);r+=this.map.setBlock(-p.x+p.y,p.x-p.y,e);r+=this.map.setBlock(-p.x-p.y,-p.x-p.y,e);r+=this.map.setBlock(p.x*3,p.y*3,e);r+=this.map.setBlock(2*p.x+p.y,p.x+2*p.y,e);r+=this.map.setBlock(2*p.x-p.y,-p.x+2*p.y,e);r+=this.map.setBlock(3*p.x+p.y,p.x+3*p.y,e);r+=this.map.setBlock(3*p.x-p.y,-p.x+3*p.y,e);break;default:break}r=-r;if(r>=1)this.gui.addQuickMessage(language.destroyed+r+" "+language.block(r)+"!");else{this.gui.addQuickMessage(language.destructionFailed)}menu.addToLibrary("destroy");return true};Effects.prototype.createBlock=function(l){log("Created block");var e=-1;var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(l){case 1:r+=this.map.setBlock(0,0,e,new Block(0,0));break;case 2:r+=this.map.setBlock(0,0,e,new Block(0,0));r+=this.map.setBlock(p.x,p.y,e,new Block(0,0));r+=this.map.setBlock(p.x*-1,p.y*-1,e,new Block(0,0));break;case 3:r+=this.map.setBlock(0,0,e,new Block(0,0));r+=this.map.setBlock(p.x,p.y,e,new Block(0,0));r+=this.map.setBlock(p.x*-1,p.y*-1,e,new Block(0,0));r+=this.map.setBlock(p.x*2,p.y*2,e,new Block(0,0));r+=this.map.setBlock(p.y*1,p.x,e,new Block(0,0));r+=this.map.setBlock(p.y*-1,p.x*-1,e,new Block(0,0));break;case 4:r+=this.map.setBlock(0,0,e,new Block(0,0));r+=this.map.setBlock(p.x,p.y,e,new Block(0,0));r+=this.map.setBlock(p.x*-1,p.y*-1,e,new Block(0,0));r+=this.map.setBlock(p.x*2,p.y*2,e,new Block(0,0));r+=this.map.setBlock(p.y,p.x,e,new Block(0,0));r+=this.map.setBlock(p.y*-1,p.x*-1,e,new Block(0,0));r+=this.map.setBlock(p.x+p.y,p.x+p.y,e,new Block(0,0));r+=this.map.setBlock(p.x-p.y,-p.x+p.y,e,new Block(0,0));r+=this.map.setBlock(-p.x+p.y,p.x-p.y,e,new Block(0,0));r+=this.map.setBlock(-p.x-p.y,-p.x-p.y,e,new Block(0,0));break;case 5:r+=this.map.setBlock(0,0,e,new Block(0,0));r+=this.map.setBlock(p.x,p.y,e,new Block(0,0));r+=this.map.setBlock(p.x*-1,p.y*-1,e,new Block(0,0));r+=this.map.setBlock(p.x*2,p.y*2,e,new Block(0,0));r+=this.map.setBlock(p.y,p.x,e,new Block(0,0));r+=this.map.setBlock(p.y*-1,p.x*-1,e,new Block(0,0));r+=this.map.setBlock(p.x+p.y,p.x+p.y,e,new Block(0,0));r+=this.map.setBlock(p.x-p.y,-p.x+p.y,e,new Block(0,0));r+=this.map.setBlock(-p.x+p.y,p.x-p.y,e,new Block(0,0));r+=this.map.setBlock(-p.x-p.y,-p.x-p.y,e,new Block(0,0));r+=this.map.setBlock(p.x*3,p.y*3,e,new Block(0,0));r+=this.map.setBlock(2*p.x+p.y,p.x+2*p.y,e,new Block(0,0));r+=this.map.setBlock(2*p.x-p.y,-p.x+2*p.y,e,new Block(0,0));r+=this.map.setBlock(3*p.x+p.y,p.x+3*p.y,e,new Block(0,0));r+=this.map.setBlock(3*p.x-p.y,-p.x+3*p.y,e,new Block(0,0));break;default:break}if(r>=1)this.gui.addQuickMessage(language.created+r+" "+language.block(r)+"!");else{this.gui.addQuickMessage(language.creationFailed)}menu.addToLibrary("create");return true};Effects.prototype.teleport=function(strength){var s=sad(strength,1);s=n1(s)+1;var pl=this.player;var d=pl.direction;var m=this.map;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}pl.area.x+=p.x*s;pl.area.y+=p.y*s;while(pl.area.x>=m.size){pl.area.x-=m.size;pl.map.x+=1}while(pl.area.x<0){pl.area.x+=m.size;pl.map.x-=1}while(pl.area.y>=m.size){pl.area.y-=m.size;pl.map.y+=1}while(pl.area.y<0){pl.area.y+=m.size;pl.map.y-=1}m.dirty=true;pl.activateSmoke(1);this.gui.addQuickMessage(language.teleported+s+" "+language.block(s)+"!");menu.addToLibrary("teleport");return true};Effects.prototype.cleanse=function(l){log("Clense blocks");var e=this.player.altitude;var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(l){case 1:r+=this.cleanseBlock(0,0);break;case 2:r+=this.cleanseBlock(0,0);r+=this.cleanseBlock(p.x,p.y);r+=this.cleanseBlock(p.x*-1,p.y*-1);break;case 3:r+=this.cleanseBlock(0,0);r+=this.cleanseBlock(p.x,p.y);r+=this.cleanseBlock(p.x*-1,p.y*-1);r+=this.cleanseBlock(p.x*2,p.y*2);r+=this.cleanseBlock(p.y*1,p.x);r+=this.cleanseBlock(p.y*-1,p.x*-1);break;case 4:r+=this.cleanseBlock(0,0);r+=this.cleanseBlock(p.x,p.y);r+=this.cleanseBlock(p.x*-1,p.y*-1);r+=this.cleanseBlock(p.x*2,p.y*2);r+=this.cleanseBlock(p.y,p.x);r+=this.cleanseBlock(p.y*-1,p.x*-1);r+=this.cleanseBlock(p.x+p.y,p.x+p.y);r+=this.cleanseBlock(p.x-p.y,-p.x+p.y);r+=this.cleanseBlock(-p.x+p.y,p.x-p.y);r+=this.cleanseBlock(-p.x-p.y,-p.x-p.y);break;case 5:r+=this.cleanseBlock(0,0);r+=this.cleanseBlock(p.x,p.y);r+=this.cleanseBlock(p.x*-1,p.y*-1);r+=this.cleanseBlock(p.x*2,p.y*2);r+=this.cleanseBlock(p.y,p.x);r+=this.cleanseBlock(p.y*-1,p.x*-1);r+=this.cleanseBlock(p.x+p.y,p.x+p.y);r+=this.cleanseBlock(p.x-p.y,-p.x+p.y);r+=this.cleanseBlock(-p.x+p.y,p.x-p.y);r+=this.cleanseBlock(-p.x-p.y,-p.x-p.y);r+=this.cleanseBlock(p.x*3,p.y*3);r+=this.cleanseBlock(2*p.x+p.y,p.x+2*p.y);r+=this.cleanseBlock(2*p.x-p.y,-p.x+2*p.y);r+=this.cleanseBlock(3*p.x+p.y,p.x+3*p.y);r+=this.cleanseBlock(3*p.x-p.y,-p.x+3*p.y);break;default:break}if(r>=1)this.gui.addQuickMessage(language.cleansed+r+" "+language.block(r)+"!");else{this.gui.addQuickMessage(language.cleanseFailed)}menu.addToLibrary("cleanse");if(r>0)return true;else return false};Effects.prototype.cleanseBlock=function(x,y,e){var result=0;var block;var column=this.map.getColumn(x,y);for(var i=0;i<column.length;i++){block=column[i];if(block.enemy>0){block.enemy--;this.map.setBlock(x,y,i,block);result++}}return result};Effects.prototype.mark=function(){this.player.markedMap=this.player.map.clone();this.player.markedArea=this.player.area.clone();this.gui.addQuickMessage(language.locationMarked);return false};Effects.prototype.recall=function(){this.player.map=this.player.markedMap.clone();this.player.area=this.player.markedArea.clone();this.map.dirty=true;this.player.activateSmoke(1);this.gui.addQuickMessage(language.recalledToLocation);return true};Effects.prototype.levitation=function(power){this.player.levitation=n1(power)+1;this.updateShieldTimer();this.gui.addQuickMessage(language.levitationFor+this.player.levitation+" "+language.turn(this.player.levitation)+"!");return true};Effects.prototype.protectionFromDamage=function(type,power){if(type==0){this.player.protectionFromMoving=power;this.player.shield1.visible=true;this.gui.addQuickMessage(language.protectionFromCorruptedBlocks+power+" "+language.turn(power)+"!")}else{this.player.protectionFromSucking=power;this.player.shield2.visible=true;this.gui.addQuickMessage(language.procetionFromTakingColor+power+" "+language.turn(power)+"!")}this.updateShieldTimer();return false};Effects.prototype.randomizeBlockColors=function(all){log("Clense blocks");var e=this.player.altitude;var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(all){case 1:r+=this.randomizeBlockColumn(0,0);break;case 2:r+=this.randomizeBlockColumn(0,0);r+=this.randomizeBlockColumn(p.x,p.y);r+=this.randomizeBlockColumn(p.x*-1,p.y*-1);break;case 3:r+=this.randomizeBlockColumn(0,0);r+=this.randomizeBlockColumn(p.x,p.y);r+=this.randomizeBlockColumn(p.x*-1,p.y*-1);r+=this.randomizeBlockColumn(p.x*2,p.y*2);r+=this.randomizeBlockColumn(p.y*1,p.x);r+=this.randomizeBlockColumn(p.y*-1,p.x*-1);break;case 4:r+=this.randomizeBlockColumn(0,0);r+=this.randomizeBlockColumn(p.x,p.y);r+=this.randomizeBlockColumn(p.x*-1,p.y*-1);r+=this.randomizeBlockColumn(p.x*2,p.y*2);r+=this.randomizeBlockColumn(p.y,p.x);r+=this.randomizeBlockColumn(p.y*-1,p.x*-1);r+=this.randomizeBlockColumn(p.x+p.y,p.x+p.y);r+=this.randomizeBlockColumn(p.x-p.y,-p.x+p.y);r+=this.randomizeBlockColumn(-p.x+p.y,p.x-p.y);r+=this.randomizeBlockColumn(-p.x-p.y,-p.x-p.y);break;case 5:r+=this.randomizeBlockColumn(0,0);r+=this.randomizeBlockColumn(p.x,p.y);r+=this.randomizeBlockColumn(p.x*-1,p.y*-1);r+=this.randomizeBlockColumn(p.x*2,p.y*2);r+=this.randomizeBlockColumn(p.y,p.x);r+=this.randomizeBlockColumn(p.y*-1,p.x*-1);r+=this.randomizeBlockColumn(p.x+p.y,p.x+p.y);r+=this.randomizeBlockColumn(p.x-p.y,-p.x+p.y);r+=this.randomizeBlockColumn(-p.x+p.y,p.x-p.y);r+=this.randomizeBlockColumn(-p.x-p.y,-p.x-p.y);r+=this.randomizeBlockColumn(p.x*3,p.y*3);r+=this.randomizeBlockColumn(2*p.x+p.y,p.x+2*p.y);r+=this.randomizeBlockColumn(2*p.x-p.y,-p.x+2*p.y);
r+=this.randomizeBlockColumn(3*p.x+p.y,p.x+3*p.y);r+=this.randomizeBlockColumn(3*p.x-p.y,-p.x+3*p.y);break;default:break}if(r>=1)this.gui.addQuickMessage(language.changedRandomly+r+" "+language.block(r)+"!");else{this.gui.addQuickMessage(language.randomizeFailed)}if(r>0)return true;else return false};Effects.prototype.randomizeBlockColumn=function(x,y){var result=0;var block;var column=this.map.getColumn(x,y);for(var i=0;i<column.length;i++){block=column[i];if(block.id!=0){block.id=roll(1,5);this.map.setBlock(x,y,i,block);result++}}return result};Effects.prototype.healthPickUps=function(power){log("Create health pick ups");var e=this.player.altitude;var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(power){case 1:r+=this.createHealthPickUpAtTop(0,0);break;case 2:r+=this.createHealthPickUpAtTop(0,0);r+=this.createHealthPickUpAtTop(p.x,p.y);r+=this.createHealthPickUpAtTop(p.x*-1,p.y*-1);break;case 3:r+=this.createHealthPickUpAtTop(0,0);r+=this.createHealthPickUpAtTop(p.x,p.y);r+=this.createHealthPickUpAtTop(p.x*-1,p.y*-1);r+=this.createHealthPickUpAtTop(p.x*2,p.y*2);r+=this.createHealthPickUpAtTop(p.y*1,p.x);r+=this.createHealthPickUpAtTop(p.y*-1,p.x*-1);break;case 4:r+=this.createHealthPickUpAtTop(0,0);r+=this.createHealthPickUpAtTop(p.x,p.y);r+=this.createHealthPickUpAtTop(p.x*-1,p.y*-1);r+=this.createHealthPickUpAtTop(p.x*2,p.y*2);r+=this.createHealthPickUpAtTop(p.y,p.x);r+=this.createHealthPickUpAtTop(p.y*-1,p.x*-1);r+=this.createHealthPickUpAtTop(p.x+p.y,p.x+p.y);r+=this.createHealthPickUpAtTop(p.x-p.y,-p.x+p.y);r+=this.createHealthPickUpAtTop(-p.x+p.y,p.x-p.y);r+=this.createHealthPickUpAtTop(-p.x-p.y,-p.x-p.y);break;case 5:r+=this.createHealthPickUpAtTop(0,0);r+=this.createHealthPickUpAtTop(p.x,p.y);r+=this.createHealthPickUpAtTop(p.x*-1,p.y*-1);r+=this.createHealthPickUpAtTop(p.x*2,p.y*2);r+=this.createHealthPickUpAtTop(p.y,p.x);r+=this.createHealthPickUpAtTop(p.y*-1,p.x*-1);r+=this.createHealthPickUpAtTop(p.x+p.y,p.x+p.y);r+=this.createHealthPickUpAtTop(p.x-p.y,-p.x+p.y);r+=this.createHealthPickUpAtTop(-p.x+p.y,p.x-p.y);r+=this.createHealthPickUpAtTop(-p.x-p.y,-p.x-p.y);r+=this.createHealthPickUpAtTop(p.x*3,p.y*3);r+=this.createHealthPickUpAtTop(2*p.x+p.y,p.x+2*p.y);r+=this.createHealthPickUpAtTop(2*p.x-p.y,-p.x+2*p.y);r+=this.createHealthPickUpAtTop(3*p.x+p.y,p.x+3*p.y);r+=this.createHealthPickUpAtTop(3*p.x-p.y,-p.x+3*p.y);break;default:break}if(r>1)this.gui.addQuickMessage(language.created+r+language.healing+language.block(r)+"!");else{this.gui.addQuickMessage(language.healingBlocksFailed)}if(r>0)return true;else return false};Effects.prototype.createHealthPickUpAtTop=function(x,y){var result=0;var block;var column=this.map.getColumn(x,y);if(column.length>0){block=column[column.length-1];if(is(block.life))block.life+=1;else block.life=1;this.map.setBlock(x,y,column.length-1,block);result++}return result};Effects.prototype.createNewBlocks=function(power){log("Created random block");var e=-1;var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(power){case 1:r+=this.map.setBlock(0,0,e,new Block);break;case 2:r+=this.map.setBlock(0,0,e,new Block);r+=this.map.setBlock(p.x,p.y,e,new Block);r+=this.map.setBlock(p.x*-1,p.y*-1,e,new Block);break;case 3:r+=this.map.setBlock(0,0,e,new Block);r+=this.map.setBlock(p.x,p.y,e,new Block);r+=this.map.setBlock(p.x*-1,p.y*-1,e,new Block);r+=this.map.setBlock(p.x*2,p.y*2,e,new Block);r+=this.map.setBlock(p.y*1,p.x,e,new Block);r+=this.map.setBlock(p.y*-1,p.x*-1,e,new Block);break;case 4:r+=this.map.setBlock(0,0,e,new Block);r+=this.map.setBlock(p.x,p.y,e,new Block);r+=this.map.setBlock(p.x*-1,p.y*-1,e,new Block);r+=this.map.setBlock(p.x*2,p.y*2,e,new Block);r+=this.map.setBlock(p.y,p.x,e,new Block);r+=this.map.setBlock(p.y*-1,p.x*-1,e,new Block);r+=this.map.setBlock(p.x+p.y,p.x+p.y,e,new Block);r+=this.map.setBlock(p.x-p.y,-p.x+p.y,e,new Block);r+=this.map.setBlock(-p.x+p.y,p.x-p.y,e,new Block);r+=this.map.setBlock(-p.x-p.y,-p.x-p.y,e,new Block);break;case 5:r+=this.map.setBlock(0,0,e,new Block);r+=this.map.setBlock(p.x,p.y,e,new Block);r+=this.map.setBlock(p.x*-1,p.y*-1,e,new Block);r+=this.map.setBlock(p.x*2,p.y*2,e,new Block);r+=this.map.setBlock(p.y,p.x,e,new Block);r+=this.map.setBlock(p.y*-1,p.x*-1,e,new Block);r+=this.map.setBlock(p.x+p.y,p.x+p.y,e,new Block);r+=this.map.setBlock(p.x-p.y,-p.x+p.y,e,new Block);r+=this.map.setBlock(-p.x+p.y,p.x-p.y,e,new Block);r+=this.map.setBlock(-p.x-p.y,-p.x-p.y,e,new Block);r+=this.map.setBlock(p.x*3,p.y*3,e,new Block);r+=this.map.setBlock(2*p.x+p.y,p.x+2*p.y,e,new Block);r+=this.map.setBlock(2*p.x-p.y,-p.x+2*p.y,e,new Block);r+=this.map.setBlock(3*p.x+p.y,p.x+3*p.y,e,new Block);r+=this.map.setBlock(3*p.x-p.y,-p.x+3*p.y,e,new Block);break;default:break}if(r>=1)this.gui.addQuickMessage(language.created+r+language.random+language.block(r)+"!");else{this.gui.addQuickMessage(language.creationFailed)}return true};Effects.prototype.reveal=function(power){log("Reveal evil blocks");var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(power){case 1:r+=this.revealBlocksInColumn(0,0);break;case 2:r+=this.revealBlocksInColumn(0,0);r+=this.revealBlocksInColumn(p.x,p.y);r+=this.revealBlocksInColumn(p.x*-1,p.y*-1);break;case 3:r+=this.revealBlocksInColumn(0,0);r+=this.revealBlocksInColumn(p.x,p.y);r+=this.revealBlocksInColumn(p.x*-1,p.y*-1);r+=this.revealBlocksInColumn(p.x*2,p.y*2);r+=this.revealBlocksInColumn(p.y*1,p.x);r+=this.revealBlocksInColumn(p.y*-1,p.x*-1);break;case 4:r+=this.revealBlocksInColumn(0,0);r+=this.revealBlocksInColumn(p.x,p.y);r+=this.revealBlocksInColumn(p.x*-1,p.y*-1);r+=this.revealBlocksInColumn(p.x*2,p.y*2);r+=this.revealBlocksInColumn(p.y,p.x);r+=this.revealBlocksInColumn(p.y*-1,p.x*-1);r+=this.revealBlocksInColumn(p.x+p.y,p.x+p.y);r+=this.revealBlocksInColumn(p.x-p.y,-p.x+p.y);r+=this.revealBlocksInColumn(-p.x+p.y,p.x-p.y);r+=this.revealBlocksInColumn(-p.x-p.y,-p.x-p.y);break;case 5:r+=this.revealBlocksInColumn(0,0);r+=this.revealBlocksInColumn(p.x,p.y);r+=this.revealBlocksInColumn(p.x*-1,p.y*-1);r+=this.revealBlocksInColumn(p.x*2,p.y*2);r+=this.revealBlocksInColumn(p.y,p.x);r+=this.revealBlocksInColumn(p.y*-1,p.x*-1);r+=this.revealBlocksInColumn(p.x+p.y,p.x+p.y);r+=this.revealBlocksInColumn(p.x-p.y,-p.x+p.y);r+=this.revealBlocksInColumn(-p.x+p.y,p.x-p.y);r+=this.revealBlocksInColumn(-p.x-p.y,-p.x-p.y);r+=this.revealBlocksInColumn(p.x*3,p.y*3);r+=this.revealBlocksInColumn(2*p.x+p.y,p.x+2*p.y);r+=this.revealBlocksInColumn(2*p.x-p.y,-p.x+2*p.y);r+=this.revealBlocksInColumn(3*p.x+p.y,p.x+3*p.y);r+=this.revealBlocksInColumn(3*p.x-p.y,-p.x+3*p.y);break;default:break}if(r>=1)this.gui.addQuickMessage(language.revealingEnemies+r+" "+language.block(r)+"!");else{this.gui.addQuickMessage(language.revealingFailed)}if(r>0)return true;else return false};Effects.prototype.revealBlocksInColumn=function(x,y){var result=0;var block;var column=this.map.getColumn(x,y);for(var i=0;i<column.length;i++){block=column[i];block.revealed=true;this.map.setBlock(x,y,i,block);result++}return result};Effects.prototype.changeColor=function(color,power){log("Change blocks");var e=color;var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(power){case 1:r+=this.setSpecificBlockToColor(0,0,e);break;case 2:r+=this.setSpecificBlockToColor(0,0,e);r+=this.setSpecificBlockToColor(p.x,p.y,e);r+=this.setSpecificBlockToColor(p.x*-1,p.y*-1,e);break;case 3:r+=this.setSpecificBlockToColor(0,0,e);r+=this.setSpecificBlockToColor(p.x,p.y,e);r+=this.setSpecificBlockToColor(p.x*-1,p.y*-1,e);r+=this.setSpecificBlockToColor(p.x*2,p.y*2,e);r+=this.setSpecificBlockToColor(p.y*1,p.x,e);r+=this.setSpecificBlockToColor(p.y*-1,p.x*-1,e);break;case 4:r+=this.setSpecificBlockToColor(0,0,e);r+=this.setSpecificBlockToColor(p.x,p.y,e);r+=this.setSpecificBlockToColor(p.x*-1,p.y*-1,e);r+=this.setSpecificBlockToColor(p.x*2,p.y*2,e);r+=this.setSpecificBlockToColor(p.y,p.x,e);r+=this.setSpecificBlockToColor(p.y*-1,p.x*-1,e);r+=this.setSpecificBlockToColor(p.x+p.y,p.x+p.y,e);r+=this.setSpecificBlockToColor(p.x-p.y,-p.x+p.y,e);r+=this.setSpecificBlockToColor(-p.x+p.y,p.x-p.y,e);r+=this.setSpecificBlockToColor(-p.x-p.y,-p.x-p.y,e);break;case 5:r+=this.setSpecificBlockToColor(0,0,e);r+=this.setSpecificBlockToColor(p.x,p.y,e);r+=this.setSpecificBlockToColor(p.x*-1,p.y*-1,e);r+=this.setSpecificBlockToColor(p.x*2,p.y*2,e);r+=this.setSpecificBlockToColor(p.y,p.x,e);r+=this.setSpecificBlockToColor(p.y*-1,p.x*-1,e);r+=this.setSpecificBlockToColor(p.x+p.y,p.x+p.y,e);r+=this.setSpecificBlockToColor(p.x-p.y,-p.x+p.y,e);r+=this.setSpecificBlockToColor(-p.x+p.y,p.x-p.y,e);r+=this.setSpecificBlockToColor(-p.x-p.y,-p.x-p.y,e);r+=this.setSpecificBlockToColor(p.x*3,p.y*3,e);r+=this.setSpecificBlockToColor(2*p.x+p.y,p.x+2*p.y,e);r+=this.setSpecificBlockToColor(2*p.x-p.y,-p.x+2*p.y,e);r+=this.setSpecificBlockToColor(3*p.x+p.y,p.x+3*p.y,e);r+=this.setSpecificBlockToColor(3*p.x-p.y,-p.x+3*p.y,e);break;default:break}if(r>=1)this.gui.addQuickMessage(r+" "+language.block(r)+language.changedColor+"!");else{this.gui.addQuickMessage(language.noBlocksChangedColor)}return true};Effects.prototype.setSpecificBlockToColor=function(x,y,color){var block=this.map.getBlock(x,y);var h=this.map.getColumn(x,y).length;if(!is(block.void)&&block.void!=true){block.id=color;if(color==0)block.enemy=0;this.map.setBlock(x,y,h-1,block);return 1}return 0};Effects.prototype.teleportBlocksBehind=function(power){log("Move blocks behind");var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(power){case 1:r+=this.moveBlockFromTo(p.x,p.y,-p.x,-p.y);break;case 2:r+=this.moveBlockFromTo(p.x,p.y,-p.x,-p.y);r+=this.moveBlockFromTo(p.x+p.y,p.x+p.y,-p.x+p.y,p.x-p.y);r+=this.moveBlockFromTo(p.x-p.y,-p.x+p.y,-p.x-p.y,-p.x-p.y);break;case 3:r+=this.moveBlockFromTo(p.x,p.y,-p.x,-p.y);r+=this.moveBlockFromTo(p.x+p.y,p.x+p.y,-p.x+p.y,p.x-p.y);r+=this.moveBlockFromTo(p.x-p.y,-p.x+p.y,-p.x-p.y,-p.x-p.y);r+=this.moveBlockFromTo(2*p.x,2*p.y,-2*p.x,-2*p.y);r+=this.moveBlockFromTo(2*p.x+p.y,1*p.x+2*p.y,-2*p.x+p.y,p.x-2*p.y);r+=this.moveBlockFromTo(2*p.x-p.y,-1*p.x+2*p.y,-2*p.x-p.y,-p.x-2*p.y);break;case 4:r+=this.moveBlockFromTo(p.x,p.y,-p.x,-p.y);r+=this.moveBlockFromTo(p.x+p.y,p.x+p.y,-p.x+p.y,p.x-p.y);r+=this.moveBlockFromTo(p.x-p.y,-p.x+p.y,-p.x-p.y,-p.x-p.y);r+=this.moveBlockFromTo(2*p.x,2*p.y,-2*p.x,-2*p.y);r+=this.moveBlockFromTo(2*p.x+p.y,1*p.x+2*p.y,-2*p.x+p.y,p.x-2*p.y);r+=this.moveBlockFromTo(2*p.x-p.y,-1*p.x+2*p.y,-2*p.x-p.y,-p.x-2*p.y);r+=this.moveBlockFromTo(3*p.x+p.y,1*p.x+3*p.y,-3*p.x+p.y,p.x-3*p.y);r+=this.moveBlockFromTo(3*p.x-p.y,-1*p.x+3*p.y,-3*p.x-p.y,-p.x-3*p.y);r+=this.moveBlockFromTo(3*p.x,3*p.y,-3*p.x,-3*p.y);r+=this.moveBlockFromTo(4*p.x,4*p.y,-4*p.x,-4*p.y);break;case 5:r+=this.moveBlockFromTo(p.x,p.y,-p.x,-p.y);r+=this.moveBlockFromTo(p.x+p.y,p.x+p.y,-p.x+p.y,p.x-p.y);r+=this.moveBlockFromTo(p.x-p.y,-p.x+p.y,-p.x-p.y,-p.x-p.y);r+=this.moveBlockFromTo(2*p.x,2*p.y,-2*p.x,-2*p.y);r+=this.moveBlockFromTo(2*p.x+p.y,1*p.x+2*p.y,-2*p.x+p.y,p.x-2*p.y);r+=this.moveBlockFromTo(2*p.x-p.y,-1*p.x+2*p.y,-2*p.x-p.y,-p.x-2*p.y);r+=this.moveBlockFromTo(3*p.x+p.y,1*p.x+3*p.y,-3*p.x+p.y,p.x-3*p.y);r+=this.moveBlockFromTo(3*p.x-p.y,-1*p.x+3*p.y,-3*p.x-p.y,-p.x-3*p.y);r+=this.moveBlockFromTo(3*p.x,3*p.y,-3*p.x,-3*p.y);r+=this.moveBlockFromTo(4*p.x,4*p.y,-4*p.x,-4*p.y);r+=this.moveBlockFromTo(5*p.x,5*p.y,-5*p.x,-5*p.y);r+=this.moveBlockFromTo(4*p.x+p.y,1*p.x+4*p.y,-4*p.x+p.y,p.x-4*p.y);r+=this.moveBlockFromTo(4*p.x-p.y,-1*p.x+4*p.y,-4*p.x-p.y,-p.x-4*p.y);r+=this.moveBlockFromTo(5*p.x+p.y,1*p.x+5*p.y,-5*p.x+p.y,p.x-5*p.y);r+=this.moveBlockFromTo(5*p.x-p.y,-1*p.x+5*p.y,-5*p.x-p.y,-p.x-5*p.y);break;default:break}if(r>=1)this.gui.addQuickMessage(r+" "+language.block(r)+language.moved+"!");else{this.gui.addQuickMessage(language.noBlocksMoved)}return true};Effects.prototype.moveBlockFromTo=function(x,y,toX,toY){var blockFrom=this.map.getBlock(x,y);if(blockFrom){this.map.setBlock(x,y,-1);this.map.setBlock(toX,toY,-1,blockFrom);return 1}return 0};Effects.prototype.shiftAndPlaceBlockAtBottom=function(power){var column=this.map.getColumn(0,0);if(column.length>1){var block=column[column.length-1];for(var i=column.length-1;i>0;i--){column[i]=column[i-1]}column[0]=block;for(var i=0;i<column.length;i++){this.map.setBlock(0,0,i,column[i])}this.gui.addQuickMessage(column.length+" "+language.block(column.length)+language.shifted+"!")}else{this.gui.addQuickMessage(language.toShiftBlocksMustBeAtLeast)}};Effects.prototype.digAndPlaceInFront=function(power){var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var dug=0;var column=this.map.getColumn(0,0);var originalLength=column.length;if(column.length>0){for(var i=column.length-1;i>=0;i--){var block=column[i];dug++;if(block.id!=0){this.map.setBlock(p.x,p.y,-1,block)}this.map.setBlock(0,0,i)}if(dug>=1)this.gui.addQuickMessage(dug+" "+language.block(dug)+language.dug+"!");return true}else{this.gui.addQuickMessage(language.thereIsNothingToDig);return false}};Effects.prototype.pickUpLand=function(power){log("Pick blocks");this.player.pickedBlocks=[];var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var r=0;switch(power){case 3:var b=this.map.getBlock(0,0);if(b){this.player.pickedBlocks[0]=b;this.map.setBlock(0,0);r++}else{this.player.pickedBlocks[0]=null}break;case 4:var b=this.map.getBlock(0,0);if(b){this.player.pickedBlocks[0]=b;this.map.setBlock(0,0);r++}else{this.player.pickedBlocks[0]=null}var b1=this.map.getBlock(p.x,p.y);if(b1){this.player.pickedBlocks[1]=b1;this.map.setBlock(p.x,p.y);r++}else{this.player.pickedBlocks[1]=null}var b2=this.map.getBlock(p.x*-1,p.y*-1);if(b2){this.player.pickedBlocks[2]=b2;this.map.setBlock(p.x*-1,p.y*-1);r++}else{this.player.pickedBlocks[2]=null}break;case 5:var b=this.map.getBlock(0,0);if(b){this.player.pickedBlocks[0]=b;this.map.setBlock(0,0);r++}else{this.player.pickedBlocks[0]=null}var b1=this.map.getBlock(p.x,p.y);if(b1){this.player.pickedBlocks[1]=b1;this.map.setBlock(p.x,p.y);r++}else{this.player.pickedBlocks[1]=null}var b2=this.map.getBlock(p.x*-1,p.y*-1);if(b2){this.player.pickedBlocks[2]=b2;this.map.setBlock(p.x*-1,p.y*-1);r++}else{this.player.pickedBlocks[2]=null}var b3=this.map.getBlock(p.x*2,p.y*2);if(b3){this.player.pickedBlocks[3]=b3;this.map.setBlock(p.x*2,p.y*2);r++}else{this.player.pickedBlocks[3]=null}var b4=this.map.getBlock(p.y*1,p.x);if(b4){this.player.pickedBlocks[4]=b4;this.map.setBlock(p.y*1,p.x);r++}else{this.player.pickedBlocks[4]=null}var b5=this.map.getBlock(p.y*-1,p.x*-1);if(b5){this.player.pickedBlocks[5]=b5;this.map.setBlock(p.y*-1,p.x*-1);r++}else{this.player.pickedBlocks[5]=null}break;default:break}if(r>=1)this.gui.addQuickMessage(r+" "+language.block(r)+language.pickedUp+"!");else this.gui.addQuickMessage(language.noBlocksPickedUp);return true};Effects.prototype.placeLand=function(power){var p;var d=this.player.direction;switch(d){case 1:p=new Point(0,-1);break;case 2:p=new Point(1,0);break;case 3:p=new Point(0,1);break;case 4:p=new Point(-1,0);break;default:p=new Point(0,-1);break}var howMany=this.player.pickedBlocks.length;var actuallyHowMany=0;if(howMany>0){var block;if(howMany>=6){block=this.player.pickedBlocks[3];if(block){this.map.setBlock(p.x*2,p.y*2,-1,block);actuallyHowMany++}block=this.player.pickedBlocks[4];if(block){this.map.setBlock(p.y*1,p.x,-1,block);actuallyHowMany++}block=this.player.pickedBlocks[5];if(block){this.map.setBlock(p.y*-1,p.x*-1,block);actuallyHowMany++}}if(howMany>=3){block=this.player.pickedBlocks[1];if(block){this.map.setBlock(p.x,p.y,-1,block);actuallyHowMany++}block=this.player.pickedBlocks[2];if(block){this.map.setBlock(p.x*-1,p.y*-1,-1,block);actuallyHowMany++}}if(howMany>=1){block=this.player.pickedBlocks[0];if(block){this.map.setBlock(0,0,-1,block);actuallyHowMany++}}this.player.pickedBlocks=[];if(actuallyHowMany>=1)this.gui.addQuickMessage(actuallyHowMany+" "+language.block(actuallyHowMany)+language.placed+"!");else this.gui.addQuickMessage(language.noBlocksPlaced);return true}else{this.gui.addQuickMessage(language.noBlocksToPlace);return false}};Effects.prototype.ultimateActivate=function(){for(var i=-4;i<5;i++){for(var j=-4;j<5;j++){var column=this.map.getColumn(i,j);var h=column.length;for(var k=0;k<h;k++){this.map.setBlock(i,j,-1)}}}this.gui.addQuickMessage(language.ultimate);return true};Effects.prototype.updateShieldTimer=function(){var p=this.player;this.gui.updateTimers(p.levitation,p.protectionFromMoving,p.protectionFromSucking)};function Input(){this.type=0;this.keysDown={};this.mouseDown={};this.mouseX=0;this.mouseY=0;this.touches=[];var that=this;window.addEventListener("mousemove",function(e){that.type=2;that.mouseX=e.clientX;that.mouseY=e.clientY},false);window.addEventListener("mousedown",function(e){e.preventDefault();that.mouseDown[e.button]=true},false);window.addEventListener("mouseup",function(e){e.preventDefault();if(debug)console.log("Mouse: "+e.button);delete that.mouseDown[e.button]},false);window.addEventListener("contextmenu",function(e){e.preventDefault()},false);this.touchTimer;this.touchTime=500;this.touchesNow=0;this.touchesMax=0;this.tap=0;this.tapping=false;window.addEventListener("touchstart",function(e){e.preventDefault();that.type=4;for(var i=0;i<e.changedTouches.length;i++){that.touches[that.touches.length]=e.changedTouches[i]}},false);window.addEventListener("touchmove",function(e){e.preventDefault();for(var i=0;i<e.changedTouches.length;i++){var touch=e.changedTouches[i];for(var j=0;j<that.touches.length;j++){if(that.touches[j].identifier==touch.identifier){that.touches[j]=touch;break}}}},false);window.addEventListener("touchend",function(e){e.preventDefault();for(var i=0;i<e.changedTouches.length;i++){var touch=that.touches.splice(that.touches.indexOf(e.changedTouches[i]),1)}},false);window.addEventListener("keydown",function(e){e.preventDefault();that.type=2;if(e.keyCode==122)enableFullScreen();else that.keysDown[e.keyCode]=true},false);window.addEventListener("keyup",function(e){if(debug)console.log("KeyPr: "+e.keyCode);e.preventDefault();delete that.keysDown[e.keyCode]},false)}function Player(){this.map=new Point(0,0);this.area=new Point(0,0);this.tile=new Point(.5,.5);this.altitude=0;this.height=2;this.markedMap=this.map.clone();this.markedArea=this.area.clone();this.levitation=0;this.protectionFromMoving=0;this.protectionFromSucking=0;this.pickedBlocks=[];this.speed=playerMoveSpeed;this.suckSpeed=playerMoveSpeed*2/3;if(playerInstantPicking)this.suckSpeed=playerMoveSpeed*3/2;this.suckPool=new Object;this.drainPool();this.score=0;this.realScore=0;this.maxLife=5+startingLevel*2;if(startingLevel>=10)this.maxLife+=5;this.life=this.maxLife;this.permBuff0=startingLevel;this.permBuff1=startingLevel;this.permBuff2=startingLevel;this.permBuff3=startingLevel;this.permBuff4=startingLevel;this.multiplierWait=startingLevel*10;this.multiplierCombo=startingLevel*10;this.multiplierEnemy=startingLevel*10;this.multiplierUltimate=startingLevel;this.level=startingLevel;this.direction=1;this.changedDirection=true;this.movingInProgress=0;this.directionTimer=0;this.moving=false;this.changedTileBool=false;this.activate=false;this.suckingColor=0;this.smokeActivated=false;this.levitationArrowPosition=false;this.knownCombos={}}Player.prototype.save=function(){var result={};result.map={x:this.map.x,y:this.map.y};result.area={x:this.area.x,y:this.area.y};result.tile={x:this.tile.x,y:this.tile.y};result.altitude=this.altitude;result.height=this.height;result.markedMap={x:this.markedMap.x,y:this.markedMap.y};result.markedArea={x:this.markedArea.x,y:this.markedArea.y};result.levitation=this.levitation;result.protectionFromMoving=this.protectionFromMoving;result.protectionFromSucking=this.protectionFromSucking;result.pickedBlocks=this.pickedBlocks;result.speed=this.speed;result.suckSpeed=this.suckSpeed;result.suckPool=this.suckPool;result.score=this.score;result.realScore=this.realScore;result.maxLife=this.maxLife;result.life=this.life;result.permBuff0=this.permBuff0;result.permBuff1=this.permBuff1;result.permBuff2=this.permBuff2;result.permBuff3=this.permBuff3;result.permBuff4=this.permBuff4;result.multiplierWait=this.multiplierWait;result.multiplierCombo=this.multiplierCombo;result.multiplierEnemy=this.multiplierEnemy;result.multiplierUltimate=this.multiplierUltimate;result.level=this.level;result.direction=this.direction;result.changedDirection=this.changedDirection;result.movingInProgress=this.movingInProgress;result.directionTimer=this.directionTimer;result.moving=this.moving;result.changedTileBool=this.changedTileBool;result.activate=this.activate;result.suckingColor=this.suckingColor;result.smokeActivated=this.smokeActivated;result.levitationArrowPosition=this.levitationArrowPosition;result.knownCombos=this.knownCombos;if(is(this.lastBall))result.lastBall=this.lastBall;if(is(this.b1))result.ballTints={t1:this.b1.tint,t2:this.b2.tint,t3:this.b3.tint,t4:this.b4.tint,t5:this.center.tint};return result};Player.prototype.load=function(save){this.map=new Point(save.map.x,save.map.y);this.area=new Point(save.area.x,save.area.y);this.tile=new Point(save.tile.x,save.tile.y);this.altitude=save.altitude;this.height=save.height;this.markedMap=new Point(save.markedMap.x,save.markedMap.y);this.markedArea=new Point(save.markedArea.x,save.markedArea.y);this.levitation=save.levitation;this.protectionFromMoving=save.protectionFromMoving;this.protectionFromSucking=save.protectionFromSucking;this.pickedBlocks=save.pickedBlocks;this.speed=save.speed;this.suckSpeed=save.suckSpeed;this.suckPool=save.suckPool;this.score=save.score;this.realScore=save.realScore;this.maxLife=save.maxLife;this.life=save.life;this.permBuff0=save.permBuff0;this.permBuff1=save.permBuff1;this.permBuff2=save.permBuff2;this.permBuff3=save.permBuff3;this.permBuff4=save.permBuff4;this.multiplierWait=save.multiplierWait;this.multiplierCombo=save.multiplierCombo;this.multiplierEnemy=save.multiplierEnemy;this.multiplierUltimate=save.multiplierUltimate;this.level=save.level;this.direction=save.direction;this.changedDirection=save.changedDirection;this.movingInProgress=save.movingInProgress;this.directionTimer=save.directionTimer;this.moving=save.moving;this.changedTileBool=save.changedTileBool;this.activate=save.activate;this.suckingColor=save.suckingColor;this.smokeActivated=save.smokeActivated;this.levitationArrowPosition=save.levitationArrowPosition;this.knownCombos=save.knownCombos;if(is(save.lastBall))this.lastBall=save.lastBall;if(is(save.ballTints))this.ballTints=save.ballTints};Player.prototype.activateSmoke=function(time){time=sad(time,1);this.smokeActivated=true;this.smokeTimer=time;this.smoke1.visible=this.smoke2.visible=this.smoke3.visible=true;this.smoke1.alpha=this.smoke2.alpha=this.smoke3.alpha=1;this.smoke3.scale.x=this.smoke3.scale.y=this.smoke2.scale.x=this.smoke2.scale.y=this.smoke1.scale.x=this.smoke1.scale.y=1;this.smoke1.position.x=-1*this.xx;this.smoke1.position.y=-1*this.xx;this.smoke2.position.x=1*this.xx;this.smoke2.position.y=-1*this.xx;this.smoke3.position.x=0*this.xx;this.smoke3.position.y=1*this.xx};Player.prototype.moveArrowKeys=function(point){if(point.x!=0){if(point.y!=0){if(point.x>0&&point.y>0){point.y=0}else if(point.x<0&&point.y<0){point.y=0}else if(point.x<0&&point.y>0){point.x=0}else if(point.x>0&&point.y<0){point.x=0}}else{if(point.x>0){if(this.direction!=2){this.direction=2;this.changedDirection=true}}else{if(this.direction!=4){this.direction=4;this.changedDirection=true}}}}else{if(point.y!=0){if(point.y>0){if(this.direction!=3){this.direction=3;this.changedDirection=true}}else{if(this.direction!=1){this.direction=1;this.changedDirection=true}}}}this.move(point)};Player.prototype.moveTouch=function(point){var p=point;if(p.x!=0||p.y!=0){var force=point.x*point.x+point.y*point.y;var a=Math.atan2(-p.y,p.x)+PI_2;if(PI_2>a&&a<=0){p.x=0;p.y=-1;if(this.direction!=1){this.direction=1;this.changedDirection=true}}else if(PI>a&&a<=PI_2){p.x=-1;p.y=0;if(this.direction!=4){this.direction=4;this.changedDirection=true}}else if(PI3_2>a&&a<=PI){p.x=0;p.y=1;if(this.direction!=3){this.direction=3;this.changedDirection=true}}else if(PI2>a&&a<=PI3_2){p.x=1;p.y=0;if(this.direction!=2){this.direction=2;this.changedDirection=true}}else{p.x=0;p.y=0}var minForce=constantWidth;if(force>=minForce){this.move(p)}else{this.move(new Point(0,0))}}else{this.move(new Point(0,0))}};Player.prototype.move=function(point){if(point.x!=0||point.y!=0){if(this.changedDirection&&this.movingInProgress==0){this.directionTimer=Date.now()+100;point=new Point(0,0)}else if(this.movingInProgress==0){var date=Date.now();if(date>this.directionTimer){this.movingInProgress=this.direction}else{point=new Point(0,0)}}}if(this.movingInProgress>0){switch(this.movingInProgress){case 1:point.x=0;point.y=-1;break;case 2:point.x=1;point.y=0;break;case 3:point.x=0;point.y=1;break;case 4:point.x=-1;point.y=0;break;default:point.x=0;point.y=1;break}}this.movingPoint=point;if(point.x==0&&point.y==0){this.moving=false}else{this.moving=true}};Player.prototype.drainPool=function(){var ts=new TileSet;var cn=ts.getColorNumber();var points=0;for(var i=1;i<=cn;i++){points+=this.suckPool["col"+i];this.suckPool["col"+i]=0}return points};Player.prototype.updateColor=function(c){if(c!=this.suckingColor){this.bar.scale.y=0}this.suckingColor=c};Player.prototype.changeLife=function(life){this.life+=life;if(this.life>this.maxLife||invincibility){this.life=this.maxLife}return this.life};Player.prototype.suckedColor=function(){var id=this.suckingColor;var c=this.tileSet.getColor(id);this.suckPool["col"+id]++;var bn=sad(this.lastBall,0);bn++;if(bn<=4){var b=this["b"+bn];b.tint=c;this.lastBall=bn}else{if(this.level!=10){for(var i=1;i<=4;i++){this["b"+i].tint=this.tileSet.getColor(0)}this.score=this.drainPool();this.lastBall=0}else{if(bn<=5){var b=this.center;b.tint=c;this.lastBall=bn}else{for(var i=1;i<=4;i++){this["b"+i].tint=this.tileSet.getColor(0)}this.center.tint=this.tileSet.getColor(0);this.score=this.drainPool();this.score+=1;this.lastBall=0}}}this.suckingColor=0;this.bar.scale.y=0;if(this.level==10){this.multiplierUltimate++}};Player.prototype.changedTile=function(direction){this.changedTileNumber=direction;this.changedTileBool=true};Player.prototype.update=function(delta){var xx=this.xx,yy=this.yy;if(this.suckingColor!=0){var c=this.tileSet.getColor(this.suckingColor);this.bar.tint=c;this.bar.scale.y+=this.suckSpeed*delta;if(this.bar.scale.y>=1){this.bar.scale.y=1}}if(this.moving){var p=this.movingPoint;var goX=p.x*delta*this.speed;var goY=p.y*delta*this.speed;this.tile.x+=goX;this.tile.y+=goY;if(this.changedTileBool){switch(this.changedTileNumber){case 1:if(this.tile.y>.5)this.tile.y=.5;break;case 2:if(this.tile.x<.5)this.tile.x=.5;break;case 3:if(this.tile.y<.5)this.tile.y=.5;break;case 4:if(this.tile.x>.5)this.tile.x=.5;break;default:if(Math.floor(this.tile.x*11)==5)this.tile.x=.5;if(Math.floor(this.tile.y*11)==5)this.tile.y=.5;break}if(this.tile.x==.5&&this.tile.y==.5){this.movingInProgress=0;this.changedTileBool=false}}}if(this.changedDirection){var arrowAlpha=PI_2+PI_4;var arrowRotation=PI_4;if(this.direction==1){arrowAlpha+=PI;arrowRotation-=PI_2}else if(this.direction==2){arrowAlpha+=PI3_2;arrowRotation+=PI2}else if(this.direction==3){arrowRotation+=PI_2}else if(this.direction==4){arrowAlpha+=PI_2;arrowRotation+=PI}var ar=this.arrow;ar.rotation=arrowRotation;ar.position.x=0+xx*Math.cos(arrowAlpha);ar.position.y=0+yy*Math.sin(arrowAlpha);this.changedDirection=false;this.levitationArrowPosition=true}if(this.level==10){var axeA=4*xx;var axeB=4*yy;var alpha=this.alpha;var change=false;alpha+=delta;if(alpha>PI_2){alpha-=PI_2;change=true}this.alpha=alpha;alpha-=PI_4;if(change){var tempColor=this.rb4.tint;this.rb4.tint=this.rb3.tint;this.rb3.tint=this.rb2.tint;this.rb2.tint=this.rb1.tint;this.rb1.tint=tempColor;var tempBall=this.b1;this.b1=this.b2;this.b2=this.b3;this.b3=this.b4;this.b4=tempBall}var b=this.rb1;b.position.x=0+axeA*Math.cos(alpha-PI_2);b.position.y=5*yy+axeB*Math.sin(alpha-PI_2);b=this.rb2;b.position.x=-3*xx+axeA*Math.cos(alpha);b.position.y=2*yy+axeB*Math.sin(alpha);b=this.rb3;b.position.x=0+axeA*Math.cos(alpha+PI_2);b.position.y=-1*yy+axeB*Math.sin(alpha+PI_2);b=this.rb4;b.position.x=3*xx+axeA*Math.cos(alpha+PI);b.position.y=2*yy+axeB*Math.sin(alpha+PI)}if(this.smokeActivated){this.smoke1.position.x-=this.xx*delta;this.smoke2.position.x+=this.xx*delta;this.smoke2.position.y-=this.xx*delta;this.smoke3.position.x+=this.xx*delta;this.smoke3.position.y+=this.xx*delta;this.smoke3.alpha=this.smoke2.alpha=this.smoke1.alpha-=this.smokeTimer*delta;this.smoke3.scale.x=this.smoke3.scale.y=this.smoke2.scale.x=this.smoke2.scale.y=this.smoke1.scale.x=this.smoke1.scale.y+=delta;if(this.smoke1.alpha<=0){this.smokeActivated=false;this.smoke3.visible=this.smoke2.visible=this.smoke1.visible=false}}};Player.prototype.transitionToLegendary=function(){var ts=this.tileSet;var x=ts.x,y=ts.y,h=ts.height;var xx=x/8,yy=y/8,hh=h/4;this.back.visible=false;this.front.visible=false;this.alpha=PI_4;this.level=10};Player.prototype.createGraphics=function(tileSet){var savedBallTint=[];if(is(this.b1)){savedBallTint[0]=true;for(var i=1;i<=4;i++){savedBallTint[i]=this["b"+i].tint}savedBallTint[5]=this.center.tint}else if(this.ballTints){savedBallTint[0]=true;for(var i=1;i<=5;i++){savedBallTint[i]=this.ballTints["t"+i]}}var ts=tileSet;this.tileSet=ts;var x=ts.x,y=ts.y,h=ts.height;var xx=x/8,yy=y/8,hh=h/4;var rect=new PIXI.Rectangle(0,-8*yy,8*xx,18*yy);var cn=0;var c=16777215;var cs=ni(c,-.1);var css=ni(c,-.2);var ct=ni(c,-.3);var ctt=ni(c,-.4);var lcp=ni(c,-.6);var lcs=ni(c,.2);var lt=2;var o=new PIXI.Graphics;o.beginFill(ct);o.moveTo(xx,3*yy);o.lineTo(4*xx,0);o.lineTo(4*xx,2*yy);o.lineTo(2*xx,4*yy);o.lineTo(xx,3*yy);o.endFill();o.beginFill(cs);o.moveTo(4*xx,0);o.lineTo(4*xx,2*yy);o.lineTo(6*xx,4*yy);o.lineTo(7*xx,3*yy);o.lineTo(4*xx,0);o.endFill();o.lineStyle(lt,lcs);o.moveTo(4*xx,0);o.lineTo(4*xx,2*yy);o.lineStyle(lt,lcp);o.moveTo(xx,3*yy);o.lineTo(4*xx,0);o.lineTo(7*xx,3*yy);o.moveTo(2*xx,4*yy);o.lineTo(4*xx,2*yy);o.lineTo(6*xx,4*yy);o.lineStyle(0,cn);o.bounds=rect;var back=o;var o=new PIXI.Graphics;o.beginFill(cs);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,-2*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(ct);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,-2*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(css);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,10*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(ctt);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,10*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.lineStyle(lt,lcs);o.moveTo(4*xx,-2*yy);o.lineTo(4*xx,10*yy);o.moveTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.lineTo(5*xx,4*yy);o.lineStyle(lt,lcp);o.moveTo(4*xx,-2*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,10*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,-2*yy);o.lineStyle(0,cn);o.bounds=rect;var center=o;var o=new PIXI.Graphics;o.beginFill(c);o.moveTo(3*xx,4*yy);o.lineTo(4*xx,-2*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,10*yy);o.lineTo(3*xx,4*yy);o.endFill();o.bounds=rect;var centerMask=o;var o=new PIXI.Graphics;
o.beginFill(c);o.moveTo(3*xx,-2*yy);o.lineTo(5*xx,-2*yy);o.lineTo(5*xx,10*yy);o.lineTo(3*xx,10*yy);o.lineTo(3*xx,-2*yy);o.endFill();o.bounds=rect;var bar=o;var o=new PIXI.Graphics;o.beginFill(cs);o.moveTo(0,4*yy);o.lineTo(xx,3*yy);o.lineTo(4*xx,6*yy);o.lineTo(4*xx,8*yy);o.lineTo(0,4*yy);o.endFill();o.beginFill(ct);o.moveTo(4*xx,8*yy);o.lineTo(4*xx,6*yy);o.lineTo(7*xx,3*yy);o.lineTo(8*xx,4*yy);o.lineTo(4*xx,8*yy);o.endFill();o.lineStyle(lt,lcs);o.moveTo(4*xx,6*yy);o.lineTo(4*xx,8*yy);o.lineStyle(lt,lcp);o.moveTo(0,4*yy);o.lineTo(xx,3*yy);o.lineTo(4*xx,6*yy);o.lineTo(7*xx,3*yy);o.lineTo(8*xx,4*yy);o.lineTo(4*xx,8*yy);o.lineTo(0,4*yy);o.lineStyle(0,cn);o.bounds=rect;var front=o;var o=new PIXI.Graphics;o.lineStyle(lt,lcp);o.beginFill(c);o.drawCircle(4*xx,-yy,yy);o.endFill();o.bounds=rect;var b1=o;var o=new PIXI.Graphics;o.lineStyle(lt,lcp);o.beginFill(c);o.drawCircle(7*xx,2*yy,yy);o.endFill();o.bounds=rect;var b2=o;var o=new PIXI.Graphics;o.lineStyle(lt,lcp);o.beginFill(c);o.drawCircle(4*xx,5*yy,yy);o.endFill();o.bounds=rect;var b3=o;var o=new PIXI.Graphics;o.lineStyle(lt,lcp);o.beginFill(c);o.drawCircle(xx,2*yy,yy);o.endFill();o.bounds=rect;var b4=o;var o=new PIXI.Graphics;o.beginFill(cs);o.drawCircle(4*xx,4*yy,2*xx);o.endFill();o.bounds=rect;var smoke1=o;var o=new PIXI.Graphics;o.beginFill(c);o.drawCircle(4*xx,4*yy,2*xx);o.endFill();o.bounds=rect;var smoke2=o;var o=new PIXI.Graphics;o.beginFill(ct);o.drawCircle(4*xx,4*yy,2*xx);o.endFill();o.bounds=rect;var smoke3=o;var shieldColor1=255;var shieldColor2=16776960;var o=new PIXI.Graphics;o.beginFill(shieldColor1);o.drawEllipse(4*xx,4*yy,4*xx,6*yy);o.endFill();o.bounds=rect;var shield1=o;var o=new PIXI.Graphics;o.beginFill(shieldColor2);o.drawEllipse(4*xx,4*yy,4*xx,6*yy);o.endFill();o.bounds=rect;var shield2=o;var o=new PIXI.Graphics;o.lineStyle(lt,lcp);o.beginFill(c);o.moveTo(4*xx,1*yy);o.lineTo(3.5*xx,0);o.lineTo(4.5*xx,1*yy);o.lineTo(3.5*xx,2*yy);o.lineTo(4*xx,1*yy);o.endFill();o.bounds=rect;var arrow=o;var anch=new PIXI.Point(.5,1);var l=new PIXI.DisplayObjectContainer;var temp;this.back=temp=new PIXI.Sprite(back.generateTexture());temp.anchor=anch;l.addChild(temp);this.b1=temp=new PIXI.Sprite(b1.generateTexture());temp.anchor=anch;l.addChild(temp);this.arrow=temp=new PIXI.Sprite(arrow.generateTexture());temp.anchor=new PIXI.Point(.5,.5);l.addChild(temp);var container=new PIXI.DisplayObjectContainer;this.center=temp=new PIXI.Sprite(center.generateTexture());temp.anchor=anch;l.addChild(temp);centerMask.position.x-=4*xx;centerMask.position.y-=10*yy;l.addChild(centerMask);container.mask=centerMask;this.bar=temp=new PIXI.Sprite(bar.generateTexture());this.bar.scale.y=0;temp.blendMode=PIXI.blendModes.MULTIPLY;temp.anchor=anch;container.addChild(temp);l.addChild(container);this.front=temp=new PIXI.Sprite(front.generateTexture());temp.anchor=anch;l.addChild(temp);this.b2=temp=new PIXI.Sprite(b2.generateTexture());temp.anchor=anch;l.addChild(temp);this.b3=temp=new PIXI.Sprite(b3.generateTexture());temp.anchor=anch;l.addChild(temp);this.b4=temp=new PIXI.Sprite(b4.generateTexture());temp.anchor=anch;l.addChild(temp);this.shield1=temp=new PIXI.Sprite(shield1.generateTexture());temp.anchor=anch;temp.visible=false;temp.alpha=.25;l.addChild(temp);this.shield2=temp=new PIXI.Sprite(shield2.generateTexture());temp.anchor=anch;temp.visible=false;temp.alpha=.25;l.addChild(temp);this.smoke1=temp=new PIXI.Sprite(smoke1.generateTexture());temp.anchor=anch;temp.visible=false;l.addChild(temp);this.smoke2=temp=new PIXI.Sprite(smoke2.generateTexture());temp.anchor=anch;temp.visible=false;l.addChild(temp);this.smoke3=temp=new PIXI.Sprite(smoke3.generateTexture());temp.anchor=anch;temp.visible=false;l.addChild(temp);l.position.y-=yy;this.layer=new PIXI.DisplayObjectContainer;this.layer.addChild(l);this.xx=xx;this.yy=yy;for(var i=0;i<4;i++){this["rb"+(i+1)]=this["b"+(i+1)]}if(savedBallTint[0]){for(var i=1;i<=4;i++){this["b"+i].tint=savedBallTint[i]}this.center.tint=savedBallTint[5]}if(this.level==10)this.transitionToLegendary();this.changedDirection=true};function TileSet(x,y,height){this.savedTiles=new Object;if(!is(y))this.tileDimensionsUnified(x);else this.tileDimensions(x,y,height)}TileSet.prototype.tileDimensionsUnified=function(d){var d=sad(d,200);this.tileDimensions(d,d*.6,d*.2)};TileSet.prototype.tileDimensions=function(x,y,height){this.x=sad(x,200);this.y=sad(y,100);this.height=sad(height,50)};TileSet.prototype.position=function(p,s){s=sad(s,2);var a=new Point(p.x*this.x*.5-p.y*this.x*.5,p.x*this.y*.5+p.y*this.y*.5-p.h*this.height+this.height*.5-s*this.y);return a};TileSet.prototype.positionObject=function(area,tile,height,s){var p3=new Point3D(area.x,area.y,height);var a=this.position(p3,s);a.x+=tile.x*this.x*.5-tile.y*this.x*.5;a.y+=tile.x*this.y*.5+tile.y*this.y*.5-this.y*.5;return a};TileSet.prototype.tileColor=function(color){var t=new Tile(this.x,this.y,this.height);t.oneColor(color);return t};TileSet.prototype.tileSimple=function(colorId,point3,v,good){good=sad(good,0);var t;if(!is(this.savedTiles["simple"+colorId+"X"+good])){var c=this.getColor(colorId);t=this.tileColor(c);if(good>0){t.addGood1()}this.savedTiles["simple"+colorId+"X"+good]=t}else{t=this.savedTiles["simple"+colorId+"X"+good]}var p=this.position(point3,v);var nt=t.tile(p);return nt};TileSet.prototype.tileSimpleEvil=function(colorId,point3,v,evil,good){evil=sad(evil,1);good=sad(good,0);var t;if(!is(this.savedTiles["simpleEvil"+evil+"x"+colorId+"X"+good])){var orgC=c=this.getColor(colorId);var shade=evil*-.05;c=ni(c,shade);t=this.tileColor(c);switch(evil){case 1:t.addEvil1();break;case 2:t.addEvil2();break;case 3:t.addEvil3();break;case 4:t.addEvil4();break;case 5:t.addEvil5();break;case 6:t.addEvil6(orgC);break;case 8:t.addEvil6(13369344);break;case 9:t.addEvil6(0);break;default:t.addEvil1();break}if(good>0){t.addGood1()}this.savedTiles["simpleEvil"+evil+"x"+colorId+"X"+good]=t}else{t=this.savedTiles["simpleEvil"+evil+"x"+colorId+"X"+good]}var p=this.position(point3,v);var nt=t.tile(p);return nt};TileSet.prototype.tileEmpty=function(){if(is(this.empty))return this.empty;else{var t=new Tile(this.x,this.y,this.height);t.empty();return t.tile()}};TileSet.prototype.getColor=function(id){var c;switch(id){case 1:c=11915333;break;case 2:c=8503493;break;case 3:c=3707024;break;case 4:c=16483125;break;case 5:c=14731176;break;default:c=16777215;break}return c};TileSet.prototype.getNumber=function(id){var c;switch(id){case 11915333:c=1;break;case 8503493:c=2;break;case 3707024:c=3;break;case 16483125:c=4;break;case 14731176:c=5;break;default:c=0;break}return c};TileSet.prototype.getColorNumber=function(){return 5};function Gui(){var maxScale=constantHeight/600;if(maxScale>1)maxScale=1;this.tileSet=new TileSet;this.tip=new PIXI.DisplayObjectContainer;var outline="#000000";var that=this;this.libraryText=new PIXI.Text("",{font:"60px picto",fill:"#FFFFFF",stroke:outline,strokeThickness:4});this.libraryText.position.x=10*maxScale;this.libraryText.position.y=10*maxScale;this.libraryText.scale.x=this.libraryText.scale.y=maxScale;this.libraryText.interactive=true;this.libraryText.click=this.libraryText.tap=function(e){menu.showLibrary(true)};this.tip.addChild(this.libraryText);addMouseOverForSprite(this.libraryText);this.lastComboText=new PIXI.Text("Last Combo",{font:"60px Shadows",fill:"#FFFFFF",stroke:outline,strokeThickness:4});this.lastComboText.position.x=20*maxScale+this.libraryText.width;this.lastComboText.scale.x=this.lastComboText.scale.y=maxScale;this.lastComboText.interactive=true;this.tip.addChild(this.lastComboText);addMouseOverForSprite(this.lastComboText);this.tipText=new PIXI.Text("",{font:"30px Shadows",fill:outline,align:"left",wordWrap:true,wordWrapWidth:constantWidth/4*(1/maxScale)});this.tipText.position.x=10;this.tipText.position.y=this.libraryText.height+10;this.tipText.scale.x=this.tipText.scale.y=maxScale;this.tip.addChild(this.tipText);this.lastTipRoll=-1;this.changeTip();this.tip.interactive=true;this.tipText.interactive=true;this.tipText.click=this.tipText.tap=function(e){that.changeTip()};addMouseOverForSprite(this.tipText);this.score=startingScore;this.pauseText=new PIXI.Text("",{font:"60px picto",fill:"#FFFFFF",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.pauseText.position.x=-10*maxScale;this.pauseText.position.y=10*maxScale;this.pauseText.anchor.x=1;this.pauseText.scale.x=this.pauseText.scale.y=maxScale;this.pauseText.interactive=true;this.pauseText.click=this.pauseText.tap=function(e){menu.showMenu(true)};addMouseOverForSprite(this.pauseText);this.scoreText=new PIXI.Text(this.score,{font:"60px Shadows",fill:"#FFD700",stroke:outline,strokeThickness:4,align:"right",wordWrap:false,wordWrapWidth:constantWidth/4});this.scoreText.position.x=-20*maxScale-this.pauseText.width;this.scoreText.anchor.x=1;this.scoreText.scale.x=this.scoreText.scale.y=maxScale;var alphaForBonuses=1;var o=this.buffHealthPicto=new PIXI.Text("",{font:"60px picto",fill:"#B5D045",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;this.buffHealth=new PIXI.Text("0/10",{font:"60px Shadows",fill:"#B5D045",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.buffHealth.position.x=-10*maxScale-.75*this.pauseText.width;this.buffHealth.position.y=10*maxScale+this.scoreText.height;this.buffHealth.anchor.x=1;this.buffHealth.scale.x=this.buffHealth.scale.y=maxScale*.5;this.buffHealth.alpha=alphaForBonuses;o.position.y-=(o.height-this.buffHealth.height)*.5;this.buffHealth.click=this.buffHealth.tap=o.click=o.tap=function(){menu.libraryPage(4,1)};var o=this.ultraMultiplierPicto=new PIXI.Text("",{font:"60px picto",fill:"#BF1515",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;o.visible=false;this.ultraMultiplier=new PIXI.Text("0/1000",{font:"60px Shadows",fill:"#BF1515",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.ultraMultiplier.position.x=-10*maxScale-this.ultraMultiplierPicto.width;this.ultraMultiplier.position.y=10*maxScale+this.scoreText.height;this.ultraMultiplier.anchor.x=1;this.ultraMultiplier.scale.x=this.ultraMultiplier.scale.y=maxScale*.5;this.ultraMultiplier.visible=false;this.ultraMultiplier.alpha=alphaForBonuses;o.position.y-=(o.height-this.ultraMultiplier.height)*.5;this.ultraMultiplier.click=this.ultraMultiplier.tap=o.click=o.tap=function(){menu.libraryPage(6,6)};var o=this.buffDefensePicto=new PIXI.Text("",{font:"60px picto",fill:"#81C0C5",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;this.buffDefense=new PIXI.Text("0/10",{font:"60px Shadows",fill:"#81C0C5",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.buffDefense.position.x=-10*maxScale-.75*this.pauseText.width;this.buffDefense.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height;this.buffDefense.anchor.x=1;this.buffDefense.scale.x=this.buffDefense.scale.y=maxScale*.5;this.buffDefense.alpha=alphaForBonuses;o.position.y-=(o.height-this.buffDefense.height)*.5;this.buffDefense.click=this.buffDefense.tap=o.click=o.tap=function(){menu.libraryPage(4,2)};var o=this.buffComboPicto=new PIXI.Text("",{font:"60px picto",fill:"#389090",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;this.buffCombo=new PIXI.Text("0/10",{font:"60px Shadows",fill:"#389090",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.buffCombo.position.x=-10*maxScale-.75*this.pauseText.width;this.buffCombo.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height;this.buffCombo.anchor.x=1;this.buffCombo.scale.x=this.buffCombo.scale.y=maxScale*.5;this.buffCombo.alpha=alphaForBonuses;o.position.y-=(o.height-this.buffCombo.height)*.5;this.buffCombo.click=this.buffCombo.tap=o.click=o.tap=function(){menu.libraryPage(4,3)};var o=this.buffEnemyPicto=new PIXI.Text("",{font:"60px picto",fill:"#FB8335",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;this.buffEnemy=new PIXI.Text("0/10",{font:"60px Shadows",fill:"#FB8335",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.buffEnemy.position.x=-10*maxScale-.75*this.pauseText.width;this.buffEnemy.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height;this.buffEnemy.anchor.x=1;this.buffEnemy.scale.x=this.buffEnemy.scale.y=maxScale*.5;this.buffEnemy.alpha=alphaForBonuses;o.position.y-=(o.height-this.buffEnemy.height)*.5;this.buffEnemy.click=this.buffEnemy.tap=o.click=o.tap=function(){menu.libraryPage(4,4)};var o=this.buffBlockPicto=new PIXI.Text("",{font:"60px picto",fill:"#E0C7A8",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height+this.buffEnemy.height;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;this.buffBlock=new PIXI.Text("0/10",{font:"60px Shadows",fill:"#E0C7A8",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.buffBlock.position.x=-10*maxScale-.75*this.pauseText.width;this.buffBlock.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height+this.buffEnemy.height;this.buffBlock.anchor.x=1;this.buffBlock.scale.x=this.buffBlock.scale.y=maxScale*.5;this.buffBlock.alpha=alphaForBonuses;o.position.y-=o.height-this.buffBlock.height;this.buffBlock.click=this.buffBlock.tap=o.click=o.tap=function(){menu.libraryPage(4,5)};var o=this.timerLevitationPicto=new PIXI.Text("",{font:"60px picto",fill:"#FFFFFF",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height+this.buffEnemy.height+this.buffBlock.height*2;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;this.timerLevitation=new PIXI.Text("0",{font:"60px Shadows",fill:"#FFFFFF",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.timerLevitation.position.x=-10*maxScale-.75*this.pauseText.width;this.timerLevitation.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height+this.buffEnemy.height+this.buffBlock.height*2;this.timerLevitation.anchor.x=1;this.timerLevitation.scale.x=this.timerLevitation.scale.y=maxScale*.5;this.timerLevitation.alpha=alphaForBonuses;this.timerLevitation.visible=false;o.position.y-=(o.height-this.timerLevitation.height)*.5;this.timerLevitation.click=this.timerLevitation.tap=o.click=o.tap=function(){menu.libraryPage(3,3)};var o=this.timerShield1Picto=new PIXI.Text("",{font:"60px picto",fill:"#FFFFFF",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height+this.buffEnemy.height+this.buffBlock.height*2+this.timerLevitation.height;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;this.timerShield1=new PIXI.Text("0",{font:"60px Shadows",fill:"#FFFFFF",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.timerShield1.position.x=-10*maxScale-.75*this.pauseText.width;this.timerShield1.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height+this.buffEnemy.height+this.buffBlock.height*2+this.timerLevitation.height;this.timerShield1.anchor.x=1;this.timerShield1.scale.x=this.timerShield1.scale.y=maxScale*.5;this.timerShield1.alpha=alphaForBonuses;this.timerShield1.visible=false;o.position.y-=(o.height-this.timerShield1.height)*.5;this.timerShield1.click=this.timerShield1.tap=o.click=o.tap=function(){menu.libraryPage(2,7)};var o=this.timerShield2Picto=new PIXI.Text("",{font:"60px picto",fill:"#FFFFFF",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});o.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height+this.buffEnemy.height+this.buffBlock.height*2+this.timerLevitation.height+this.timerShield1.height;o.anchor.x=1;o.scale.x=o.scale.y=maxScale*.5;o.position.x=-.5*this.pauseText.width+o.width*.5;o.alpha=alphaForBonuses;this.timerShield2=new PIXI.Text("0",{font:"60px Shadows",fill:"#FFFFFF",stroke:outline,strokeThickness:4,align:"right",wordWrap:true,wordWrapWidth:constantWidth/4});this.timerShield2.position.x=-10*maxScale-.75*this.pauseText.width;this.timerShield2.position.y=10*maxScale+this.scoreText.height+this.buffHealth.height+this.buffDefense.height+this.buffCombo.height+this.buffEnemy.height+this.buffBlock.height*2+this.timerLevitation.height+this.timerShield1.height;this.timerShield2.anchor.x=1;this.timerShield2.scale.x=this.timerShield2.scale.y=maxScale*.5;this.timerShield2.alpha=alphaForBonuses;this.timerShield2.visible=false;o.position.y-=(o.height-this.timerShield1.height)*.5;this.timerShield2.click=this.timerShield2.tap=o.click=o.tap=function(){menu.libraryPage(3,4)};this.buffHealth.interactive=this.buffDefense.interactive=this.buffCombo.interactive=this.buffEnemy.interactive=this.buffBlock.interactive=this.buffHealth.interactive=this.buffHealth.interactive=this.ultraMultiplier.interactive=this.timerLevitation.interactive=this.timerShield1.interactive=this.timerShield2.interactive=this.buffHealthPicto.interactive=this.buffDefensePicto.interactive=this.buffComboPicto.interactive=this.buffEnemyPicto.interactive=this.buffBlockPicto.interactive=this.buffHealthPicto.interactive=this.buffHealthPicto.interactive=this.ultraMultiplierPicto.interactive=this.timerLevitationPicto.interactive=this.timerShield1Picto.interactive=this.timerShield2Picto.interactive=true;this.scoreLayer=new PIXI.DisplayObjectContainer;this.scoreLayer.addChild(this.scoreText);this.scoreLayer.addChild(this.buffHealth);this.scoreLayer.addChild(this.buffDefense);this.scoreLayer.addChild(this.buffCombo);this.scoreLayer.addChild(this.buffEnemy);this.scoreLayer.addChild(this.buffBlock);this.scoreLayer.addChild(this.pauseText);this.scoreLayer.addChild(this.ultraMultiplier);this.scoreLayer.addChild(this.timerLevitation);this.scoreLayer.addChild(this.timerShield1);this.scoreLayer.addChild(this.timerShield2);this.scoreLayer.addChild(this.buffHealthPicto);this.scoreLayer.addChild(this.ultraMultiplierPicto);this.scoreLayer.addChild(this.buffDefensePicto);this.scoreLayer.addChild(this.buffComboPicto);this.scoreLayer.addChild(this.buffEnemyPicto);this.scoreLayer.addChild(this.buffBlockPicto);this.scoreLayer.addChild(this.timerLevitationPicto);this.scoreLayer.addChild(this.timerShield1Picto);this.scoreLayer.addChild(this.timerShield2Picto);this.scoreLayer.interactive=true;this.lifeLast=5;this.statusBar=new PIXI.DisplayObjectContainer;var maxPossibleLife=30;var spaceBetweenLifeBars=constantWidth/maxPossibleLife;this.diamond=this.createDiamond(3*spaceBetweenLifeBars,1*spaceBetweenLifeBars);this.life=[];for(var i=0;i<maxPossibleLife;i++){var s=this.getDiamondSprite(this.diamond);s.alpha=.5;s.position.x=spaceBetweenLifeBars*i+spaceBetweenLifeBars*.5;s.position.y=-spaceBetweenLifeBars*1.5;this.statusBar.addChild(s);this.life[i]=s}this.controlsHelp=new PIXI.DisplayObjectContainer;this.controlsHelpText=new PIXI.Text(language.controlsExplained,{font:"60px Shadows",fill:"#FFFFFF",stroke:ci("#FFFFFF",-.5),strokeThickness:5,align:"left",wordWrap:true,wordWrapWidth:constantWidth*(1/maxScale)});this.controlsHelpText.anchor.x=.5;this.controlsHelpText.anchor.y=1;this.controlsHelpText.y=-20;this.controlsHelpText.scale.x=this.controlsHelpText.scale.y=maxScale;this.controlsHelp.addChild(this.controlsHelpText);this.center=new PIXI.DisplayObjectContainer;this.centerMessages=[];this.centerMessagesLast=0;this.tempMessages=[];this.tempMessagesTimer=0;var maxMessages=10;for(var i=0;i<maxMessages;i++){var m=new PIXI.Text("",{font:"120px Shadows",fill:"#FFFFFF",stroke:ci("#FFFFFF",-.5),strokeThickness:10,align:"center",wordWrap:true,wordWrapWidth:constantWidth});m.visible=false;this.centerMessages[i]=m;this.center.addChild(m)}this.touches=new PIXI.DisplayObjectContainer;var lineColor1=0;var lineColor2=16777215;var o=new PIXI.Graphics;o.lineStyle(5,lineColor1);o.drawCircle(0,0,100*maxScale);o.lineStyle(3,lineColor2);o.drawCircle(0,0,100*maxScale);o.visible=false;this.analogStick=o;o=new PIXI.Graphics;o.lineStyle(5,lineColor1);o.drawCircle(0,0,50*maxScale);o.lineStyle(3,lineColor2);o.drawCircle(0,0,50*maxScale);o.visible=false;this.analogStickBob=o;o=new PIXI.Graphics;o.lineStyle(5,lineColor1);o.drawCircle(0,0,100*maxScale);o.lineStyle(3,lineColor2);o.drawCircle(0,0,100*maxScale);o.visible=false;this.analogStickRight=o;this.touches.addChild(this.analogStick);this.touches.addChild(this.analogStickBob);this.touches.addChild(this.analogStickRight)}Gui.prototype.addToScreen=function(s){s.addChild(this.tip,8);s.addChild(this.scoreLayer,5);s.addChild(this.statusBar,7);s.addChild(this.center,0);s.addChild(this.controlsHelp,3);s.addChild(this.touches,8)};Gui.prototype.updateBuffs=function(h,d,c,e,b,f){if(h==10&&d==10&&c==10&&e==10&&b==10){if(!is(this.buffsOnce)){this.buffsOnce=true;this.buffHealth.visible=false;this.buffDefense.visible=false;this.buffCombo.visible=false;this.buffEnemy.visible=false;this.buffBlock.visible=false;this.ultraMultiplier.visible=true;this.buffHealthPicto.visible=false;this.buffDefensePicto.visible=false;this.buffComboPicto.visible=false;this.buffEnemyPicto.visible=false;this.buffBlockPicto.visible=false;this.ultraMultiplierPicto.visible=true}this.ultraMultiplier.setText(f+"/1000")}else{this.buffHealth.setText(h+"/10");this.buffDefense.setText(d+"/10");this.buffCombo.setText(c+"/10");this.buffEnemy.setText(e+"/10");this.buffBlock.setText(b+"/10")}};Gui.prototype.updateTimers=function(levitation,shield1,shield2){if(levitation==0){this.timerLevitation.visible=false;this.timerLevitationPicto.visible=false}else{this.timerLevitation.visible=true;this.timerLevitationPicto.visible=true;this.timerLevitation.setText(levitation)}if(shield1==0){this.timerShield1.visible=false;this.timerShield1Picto.visible=false}else{this.timerShield1.visible=true;this.timerShield1Picto.visible=true;this.timerShield1.setText(shield1)}if(shield2==0){this.timerShield2.visible=false;this.timerShield2Picto.visible=false}else{this.timerShield2.visible=true;this.timerShield2Picto.visible=true;this.timerShield2.setText(shield2)}};Gui.prototype.updateLastCombo=function(name,page,option){this.lastComboText.setText(name);this.lastComboText.click=this.lastComboText.tap=function(e){menu.libraryPage(page,option)}};Gui.prototype.hideControlsHelp=function(){this.controlsHelp.visible=false};Gui.prototype.changeLife=function(life,maxLife){var color=2;var hp=life-this.lifeLast;if(hp>0){color=3}if(life<0)life=0;this.lifeLast=life;var l=this.life.length;if(l<life)life=l;if(l<maxLife)maxLife=l;for(var i=0;i<life;i++){this.life[i].alpha=1}for(var i=life;i<maxLife;i++){this.life[i].alpha=.5}for(var i=maxLife;i<l;i++){this.life[i].alpha=0}var txt="";if(color==3){txt="+"}if(hp!=0)this.addQuickMessage(txt+hp+language.hp,color,1)};Gui.prototype.changeTip=function(){var r=0;r=this.lastTipRoll+1;if(r>8)r=0;this.lastTipRoll=r;var t;t=language.tip(r);this.tipText.setText(t)};Gui.prototype.changeScore=function(){this.scoreText.setText(this.score)};Gui.prototype.update=function(delta){for(var i=0;i<this.centerMessages.length;i++){var m=this.centerMessages[i];if(m.active>0){if(m.active==6){m.visible=true;m.alpha=1;m.active--}else if(m.active==5){var maxScale=constantHeight/900;if(maxScale>1)maxScale=1;m.scale.y=m.scale.x+=m.scaleSpeed*delta*10*maxScale;m.position.y-=m.moveSpeed*delta*10*1/maxScale;if(m.scale.x>=maxScale){m.scale.x=maxScale;m.scale.y=maxScale;m.maxScale=maxScale;m.active--}}else if(m.active==4){m.scale.y=m.scale.x-=m.scaleSpeed*delta*.1;m.position.y+=m.moveSpeed*delta*10*m.maxScale;m.rotation+=m.rotationSpeed*delta;if(m.position.y>0){m.active--}}else if(m.active==3){m.scale.y=m.scale.x-=m.scaleSpeed*delta*1;m.position.y+=m.moveSpeed*delta*100;m.alpha-=delta*.5;if(m.alpha<=0){m.alpha=0;m.visible=false;m.active=0}}else if(m.active==2){}else if(m.active==1){}}else{}}if(this.tempMessages.length>0&&this.tempMessagesTimer<Date.now()){var m=this.tempMessages[0];this.addActualMessage(m.text,m.color);if(m.q>0)this.tempMessagesTimer=Date.now()+200;else this.tempMessagesTimer=Date.now()+2e3;if(this.tempMessages.length>1){this.tempMessages.splice(0,1)}else{this.tempMessages=[]}}};Gui.prototype.addQuickMessage=function(text,color,quick){quick=sad(quick,0);if(this.tempMessages.length==0&&this.tempMessagesTimer<Date.now()){this.addActualMessage(text,color);if(quick>0)this.tempMessagesTimer=Date.now()+200;else this.tempMessagesTimer=Date.now()+2e3}else{this.tempMessages[this.tempMessages.length]={text:text,color:color,q:quick}}};Gui.prototype.addActualMessage=function(text,color){color=sad(color,0);text=sad(text,"Quick Message!");this.centerMessagesLast++;if(this.centerMessagesLast>=this.centerMessages.length){this.centerMessagesLast=0}m=this.centerMessages[this.centerMessagesLast];m.setText(text);m.position.x=0;m.position.y=0;m.anchor.x=.5;m.anchor.y=.3;if(color==1){m.tint=16766720}else if(color==2){m.tint=12522773}else if(color==3){m.tint=6143765}else{m.tint=this.tileSet.getColor(roll(0,this.tileSet.getColorNumber()))}var scaleSpeedVariable=rand()*.1;m.scale.y=m.scale.x=.2+scaleSpeedVariable;m.rotation=rand()*.3-.15;m.scaleSpeed=.2-scaleSpeedVariable;m.moveSpeed=1+rand()*.5;m.rotationSpeed=rand()*.2-.1;m.active=6};Gui.prototype.createRefillDiamond=function(){var x=constantWidth/10,y=constantHeight/10;var xx=x/8,yy=y/8;var rect=new PIXI.Rectangle(0,-8*yy,8*xx,18*yy);var cn=0;var c=16777215;var cs=ni(c,-.1);var css=ni(c,-.2);var ct=ni(c,-.3);var ctt=ni(c,-.4);var lcp=ni(c,-.6);var lcs=ni(c,.2);var o=new PIXI.Graphics;o.beginFill(cs);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,-2*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(ct);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,-2*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(css);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,10*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(ctt);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,10*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.lineStyle(lt,lcs);o.moveTo(4*xx,-2*yy);o.lineTo(4*xx,10*yy);o.moveTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.lineTo(5*xx,4*yy);o.lineStyle(lt,lcp);o.moveTo(4*xx,-2*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,10*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,-2*yy);o.bounds=rect;var center=o;var o=new PIXI.Graphics;o.beginFill(c);o.moveTo(3*xx,4*yy);o.lineTo(4*xx,-2*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,10*yy);o.lineTo(3*xx,4*yy);o.endFill();o.bounds=rect;var centerMask=o;var o=new PIXI.Graphics;o.beginFill(c);o.moveTo(3*xx,-2*yy);o.lineTo(5*xx,-2*yy);o.lineTo(5*xx,10*yy);o.lineTo(3*xx,10*yy);o.lineTo(3*xx,-2*yy);o.endFill();o.bounds=rect;var bar=o;var anch=new PIXI.Point(.5,.5);var l=new PIXI.DisplayObjectContainer;var center2=new PIXI.Sprite(center.generateTexture());center2.anchor=anch;l.addChild(center2);centerMask.position.x-=4*xx;centerMask.position.y-=10*yy;l.addChild(centerMask);var container=new PIXI.DisplayObjectContainer;container.mask=centerMask;bar2=new PIXI.Sprite(bar.generateTexture());bar2.scale.y=0;bar2.blendMode=PIXI.blendModes.MULTIPLY;bar2.anchor=anch;container.addChild(bar2);l.addChild(container);l.position.y-=yy;var layer2=new PIXI.DisplayObjectContainer;layer2.addChild(l);var objec=new Object;objec.layer=layer2;objec.bar=bar2;objec.diamond=center2;return objec};Gui.prototype.createDiamond=function(x,y){var xx=x/8,yy=y/8;var rect=new PIXI.Rectangle(0,-8*yy,8*xx,18*yy);var cn=0;var c=16777215;var cs=ni(c,-.1);var css=ni(c,-.2);var ct=ni(c,-.3);var ctt=ni(c,-.4);var lcp=ni(c,-.6);var lcs=ni(c,.2);var lt=1;var o=new PIXI.Graphics;o.beginFill(cs);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,-2*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(ct);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,-2*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(css);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,10*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.beginFill(ctt);o.moveTo(4*xx,5*yy);o.lineTo(4*xx,10*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,5*yy);o.endFill();o.lineStyle(lt,lcs);o.moveTo(4*xx,-2*yy);o.lineTo(4*xx,10*yy);o.moveTo(3*xx,4*yy);o.lineTo(4*xx,5*yy);o.lineTo(5*xx,4*yy);o.lineStyle(lt,lcp);o.moveTo(4*xx,-2*yy);o.lineTo(5*xx,4*yy);o.lineTo(4*xx,10*yy);o.lineTo(3*xx,4*yy);o.lineTo(4*xx,-2*yy);o.bounds=rect;return o};Gui.prototype.getDiamondSprite=function(o){var anch=new PIXI.Point(.5,.5);var center=new PIXI.Sprite(o.generateTexture());center.anchor=anch;return center};function Level(size){this.size=sad(size,5);this.sizeHalf=Math.floor(this.size*.5);this.layer=new PIXI.DisplayObjectContainer;this.layerOut=new PIXI.DisplayObjectContainer;this.layerObjects=new PIXI.DisplayObjectContainer;this.layerOut.addChild(this.layer);this.layerOut.addChild(this.layerObjects);if(showGUI)this.tileSet=new TileSet(constantWidth/(this.size+2));else{this.tileSet=new TileSet(200,120,100);this.layer.position.y+=100}this.clearObjects();this.fadeOut=0;this.fadeTable=[];this.scaleVariable=1;this.savedTileAlpha=1;this.gameOver=false}Level.prototype.setViewPort=function(size){size=sad(size,5);if(size<1)size=1;if(size>this.map.size-1)size=this.map.size-1;this.size=size;this.sizeHalf=Math.floor(this.size*.5);this.tileSet=new TileSet(constantWidth/(this.size+2));for(var i=0;i<this.o.length;i++){this.o[i].createGraphics(this.tileSet)}this.loadMap();var t=this.table[this.sizeHalf][this.sizeHalf];var tile=t[t.length-1];if(tile){tile.alpha=this.savedTileAlpha;this.center.bar.scale.y=1-this.savedTileAlpha}};Level.prototype.loadMap=function(x,y,dontV,dontStopAnim){shouldWeGoAgain=false;ifGoAgainBeSafe=true;var f=-1;if(animations)if(is(x)&&is(y)){if(x<0)f=1;else if(x>0)f=3;else if(y<0)f=2;else if(y>0)f=4;else f=-1}else{f=5}if(f!=-1){this.scaleVariable=0;this.fadeOut=-1}var m=this.getMap();var c=this.getCenter();var s=this.size;var a;var dont=true;if(f==-1||f==5||dontV)a=m.getTable(c.map,c.area,s,dont);else if(!this.map.getBlock(0,0)||this.map.getBlock(0,0).id==0)a=m.getTable(c.map,c.area,s,dont);else a=m.getTable(c.map,c.area,s);var b=[];for(var i=0;i<s;i++){b[i]=[];for(var j=0;j<s;j++){b[i][j]=[];for(var k=0;k<a[i][j].length;k++){var p=new Point3D(i,j,k);if(is(a[i][j][k].enemy)&&a[i][j][k].enemy>0){var enemy=a[i][j][k].enemy;var good=0;if(is(a[i][j][k].life)&&a[i][j][k].life>0)good=a[i][j][k].life;
var revealed=false;if(is(a[i][j][k].revealed)&&a[i][j][k].revealed==true)revealed=true;if(enemy<=c.permBuff1||revealed){if(enemy==7){b[i][j][k]=this.tileSet.tileSimple(0,p,this.sizeHalf,good);b[i][j][k].scale.x=b[i][j][k].scale.y=.25;b[i][j][k].dontTouch=1}else if(enemy==10){b[i][j][k]=this.tileSet.tileSimple(a[i][j][k].id,p,this.sizeHalf,good)}else{b[i][j][k]=this.tileSet.tileSimpleEvil(a[i][j][k].id,p,this.sizeHalf,enemy,good)}}else{if(enemy==7){b[i][j][k]=this.tileSet.tileEmpty()}else{b[i][j][k]=this.tileSet.tileSimple(a[i][j][k].id,p,this.sizeHalf,good)}}b[i][j][k].enemy=enemy;b[i][j][k].revealed=revealed}else{var good=0;if(is(a[i][j][k].life)&&a[i][j][k].life>0)good=a[i][j][k].life;b[i][j][k]=this.tileSet.tileSimple(a[i][j][k].id,p,this.sizeHalf,good)}b[i][j][k].originalX=b[i][j][k].position.x;b[i][j][k].originalY=b[i][j][k].position.y;if(f==5){b[i][j][k].scale.x=0;b[i][j][k].scale.y=0}}}}var p=new Point3D(this.sizeHalf,this.sizeHalf,a[this.sizeHalf][this.sizeHalf].length-1);this.centerWhite=this.tileSet.tileSimple(0,p,this.sizeHalf);var ot=this.table;var ft=[];if(f==3||this.fadeOut==3){for(var i=0;i<s;i++){ft[i]=[];for(var k=0;k<ot[0][i].length;k++){ft[i][k]=ot[0][i][k];var p=new Point3D(-1,i,k);ft[i][k]=this.tileSet.tileSimple(-1,p,this.sizeHalf);ft[i][k].scale.x=ft[i][k].scale.y=1-this.scaleVariable}for(var k=0;k<b[s-1][i].length;k++){if(f==-1){b[s-1][i][k].scale.x=this.scaleVariable;b[s-1][i][k].scale.y=this.scaleVariable}else{b[s-1][i][k].scale.x=0;b[s-1][i][k].scale.y=0}}}}else if(f==4||this.fadeOut==4){for(var i=0;i<s;i++){ft[i]=[];for(var k=0;k<ot[i][0].length;k++){ft[i][k]=ot[i][0][k];var p=new Point3D(i,-1,k);ft[i][k]=this.tileSet.tileSimple(-1,p,this.sizeHalf);ft[i][k].scale.x=ft[i][k].scale.y=1-this.scaleVariable}for(var k=0;k<b[i][s-1].length;k++){if(f==-1){b[i][s-1][k].scale.x=this.scaleVariable;b[i][s-1][k].scale.y=this.scaleVariable}else{b[i][s-1][k].scale.x=0;b[i][s-1][k].scale.y=0}}}}else if(f==1||this.fadeOut==1){for(var i=0;i<s;i++){ft[i]=[];for(var k=0;k<ot[s-1][i].length;k++){ft[i][k]=ot[s-1][i][k];var p=new Point3D(s,i,k);ft[i][k]=this.tileSet.tileSimple(-1,p,this.sizeHalf);ft[i][k].scale.x=ft[i][k].scale.y=1-this.scaleVariable}for(var k=0;k<b[0][i].length;k++){if(f==-1){b[0][i][k].scale.x=this.scaleVariable;b[0][i][k].scale.y=this.scaleVariable}else{b[0][i][k].scale.x=0;b[0][i][k].scale.y=0}}}}else if(f==2||this.fadeOut==2){for(var i=0;i<s;i++){ft[i]=[];for(var k=0;k<ot[i][s-1].length;k++){ft[i][k]=ot[i][s-1][k];var p=new Point3D(i,s,k);ft[i][k]=this.tileSet.tileSimple(-1,p,this.sizeHalf);ft[i][k].scale.x=ft[i][k].scale.y=1-this.scaleVariable}for(var k=0;k<b[i][0].length;k++){if(f==-1){b[i][0][k].scale.x=this.scaleVariable;b[i][0][k].scale.y=this.scaleVariable}else{b[i][0][k].scale.x=0;b[i][0][k].scale.y=0}}}}if(f==5){this.centerWhite.scale.x=0;this.centerWhite.scale.y=0}if(this.center.levitation==0&&!dontV){var block=this.map.getBlock(0,0);if(!block)block=new Block(0,0);if(block.id!=0)if(block.id==this.center.suckingColor){b[this.sizeHalf][this.sizeHalf][b[this.sizeHalf][this.sizeHalf].length-1].alpha=1-this.center.bar.scale.y}this.center.updateColor(block.id);if(is(block.life)&&block.life>0){this.changePlayerHP(block.life);block.life=0;var column=this.map.getColumn(0,0);var h=column.length;this.map.setBlock(0,0,h-1,block);shouldWeGoAgain=true}if(block.enemy>0&&this.center.protectionFromMoving==0){var dmg=block.enemy-Math.floor(this.center.permBuff1*.5);if(dmg>0)this.changePlayerHP(-dmg)}}if(f==-1||f==5||dontV){}else{if(this.center.levitation>0){this.center.levitation--;if(this.center.levitation==0){this.center.changedDirection=true;shouldWeGoAgain=true;ifGoAgainBeSafe=false}}if(this.center.protectionFromMoving>0){this.center.protectionFromMoving--;if(this.center.protectionFromMoving==0){this.center.shield1.visible=false}}if(this.center.protectionFromSucking>0){this.center.protectionFromSucking--;if(this.center.protectionFromSucking==0){this.center.shield2.visible=false}}this.effects.updateShieldTimer()}if(f!=-1)this.fadeOut=f;this.fadeTable=ft;this.table=b;this.positionObjects();if(shouldWeGoAgain){this.loadMap(0,0,ifGoAgainBeSafe,true)}else{}};Level.prototype.changePlayerHP=function(hp){if(hp!=0){var lifeThen=this.center.changeLife(hp);this.effects.changeLife(this.center.life,this.center.maxLife);if(lifeThen<=0){this.gui.addQuickMessage("Game over!");this.gameOver=true}}};Level.prototype.get=function(){this.effects.changeLife(this.center.life,this.center.maxLife);return this.layerOut};Level.prototype.getMap=function(){if(is(this.map))return this.map;else{this.map=new Map;return this.map}};Level.prototype.setMap=function(map){this.map=map};Level.prototype.getObject=function(index){if(this.o.length<index)return this.o[index];else return null};Level.prototype.addObject=function(object){object.createGraphics(this.tileSet);this.o[this.o.length]=object};Level.prototype.clearObjects=function(){this.o=[]};Level.prototype.getCenter=function(){if(is(this.center))return this.center;else{this.center=new Player;return this.center}};Level.prototype.setCenter=function(center){this.center=center};Level.prototype.removeObjects=function(){var ch=this.layer.children;while(ch.length>0){this.layer.removeChild(ch[ch.length-1])}var ch=this.layerObjects.children;while(ch.length>0){this.layerObjects.removeChild(ch[ch.length-1])}};Level.prototype.positionTiles=function(){var a=this.table;var l=a.length;var f=this.fadeOut;var ft;if(f>2&&f<5){ft=this.fadeTable;for(var i=0;i<ft.length;i++){for(var k=0;k<ft[i].length;k++){this.layer.addChild(ft[i][k])}}}for(var i=0;i<l;i++){for(var j=0;j<l;j++){for(var k=0;k<a[j][i].length;k++){if(i==this.sizeHalf&&j==this.sizeHalf&&k==a[j][i].length-1)this.layer.addChild(this.centerWhite);var shouldDraw=true;if(a.length>j+1&&a[j].length>i+1&&a[j][i].length>k+1){if(is(a[j][i][k+1])&&is(a[j+1][i][k])&&is(a[j][i+1][k])){shouldDraw=false}}if(!showGUI)shouldDraw=roll(0,1);if(shouldDraw)this.layer.addChild(a[j][i][k])}}}if(f>0&&f<3){ft=this.fadeTable;for(var i=0;i<ft.length;i++){for(var k=0;k<ft[i].length;k++){this.layer.addChild(ft[i][k])}}}};Level.prototype.positionObjects=function(){this.removeObjects();this.positionTiles();for(var i=0;i<this.o.length;i++){if(showGUI)this.layerObjects.addChild(this.o[i].layer)}};Level.prototype.move=function(x,y){};Level.prototype.update=function(delta){var c=this.getCenter();var m=this.getMap();for(var i=0;i<this.o.length;i++){var o=this.o[i];var l=o.layer;if(o==this.center){if(o.activate){o.activate=false;var effects=this.effects;var shouldReloadMap=effects.activate();if(shouldReloadMap)this.loadMap(0,0,false,true)}else if(o.suckingColor==0){}else{var tile=this.table[this.sizeHalf][this.sizeHalf][o.altitude];tile.alpha-=o.suckSpeed*delta;this.savedTileAlpha=tile.alpha;var multiplier=tile.enemy;if(tile.alpha<=0){this.center.suckedColor();if(this.center.level==10){this.effects.changeUltimateMultiplier()}if(o.protectionFromSucking==0)if(tile.enemy==3||tile.enemy==6||tile.enemy==9){var dmg;if(tile.enemy==3)dmg=2;else if(tile.enemy==6)dmg=4;else if(tile.enemy==9)dmg=6;dmg-=Math.floor(o.permBuff1*.5);if(dmg>0)this.changePlayerHP(-dmg)}var score=1;if(this.center.multiplierUltimate>0)score*=this.center.multiplierUltimate;if(multiplier>0)score+=multiplier*this.center.multiplierEnemy;if(this.center.multiplierWait>0)score*=this.center.multiplierWait;if(this.center.score>0){if(this.center.score>0)score*=this.center.score;this.effects.addScore(score);this.center.score=0}else{this.effects.addScore(score)}this.map.setBlock(0,0,o.altitude,new Block(0));this.loadMap(0,0,true,true)}}}if(is(o.speed)){if(o.tile.x>=1){o.tile.x-=1;o.area.x+=1;o.changedTile(4);if(o.area.x>=m.size){o.area.x-=m.size;o.map.x+=1}if(this.center==o)this.loadMap(1,0)}else if(o.tile.x<0){o.tile.x+=1;o.area.x-=1;o.changedTile(2);if(o.area.x<0){o.area.x+=m.size;o.map.x-=1}if(this.center==o)this.loadMap(-1,0)}if(o.tile.y>=1){o.tile.y-=1;o.area.y+=1;o.changedTile(1);if(o.area.y>=m.size){o.area.y-=m.size;o.map.y+=1}if(this.center==o)this.loadMap(0,1)}else if(o.tile.y<0){o.tile.y+=1;o.area.y-=1;o.changedTile(3);if(o.area.y<0){o.area.y+=m.size;o.map.y-=1}if(this.center==o)this.loadMap(0,-1)}}c=this.center;var d=new Point((o.map.x-c.map.x)*m.size+(o.area.x-c.area.x),(o.map.y-c.map.y)*m.size+(o.area.y-c.area.y));if(Math.abs(d.x)>this.sizeHalf||Math.abs(d.y)>this.sizeHalf){l.visible=false}else{l.visible=true;var a=new Point(d.x+this.sizeHalf,d.y+this.sizeHalf);o.altitude=this.table[a.x][a.y].length-1;var shouldDim=false;var b=this.table;var minusAlpha=delta*.75;var minAlpha=.1;if(animations){if(b.length>a.x+1&&b[a.x+1][a.y].length>o.altitude+1){if(b[a.x+1][a.y][o.altitude+1].alpha!=minAlpha)for(var i=o.altitude+1;i<b[a.x+1][a.y].length;i++){b[a.x+1][a.y][i].alpha-=minusAlpha;if(b[a.x+1][a.y][i].alpha<minAlpha)b[a.x+1][a.y][i].alpha=minAlpha}}if(b[a.x].length>a.y+1&&b[a.x][a.y+1].length>o.altitude+1){if(b[a.x][a.y+1][o.altitude+1].alpha!=minAlpha)for(var i=o.altitude+1;i<b[a.x][a.y+1].length;i++){b[a.x][a.y+1][i].alpha-=minusAlpha;if(b[a.x][a.y+1][i].alpha<minAlpha)b[a.x][a.y+1][i].alpha=minAlpha}}if(b.length>a.x+1&&b[a.x+1].length>a.y+1&&b[a.x+1][a.y+1].length>o.altitude+1){if(b[a.x+1][a.y+1][o.altitude+1].alpha!=minAlpha)for(var i=o.altitude+1;i<b[a.x+1][a.y+1].length;i++){b[a.x+1][a.y+1][i].alpha-=minusAlpha;if(b[a.x+1][a.y+1][i].alpha<minAlpha)b[a.x+1][a.y+1][i].alpha=minAlpha}}}var p=this.tileSet.positionObject(a,o.tile,o.altitude,this.sizeHalf);l.position.x=p.x;l.position.y=p.y;if(c==o){var pA=this.tileSet.positionObject(a,o.tile,0,this.sizeHalf);this.layer.position.x=-pA.x;this.layer.position.y=-pA.y;this.layerObjects.position.x=-pA.x;this.layerObjects.position.y=-pA.y;if(c.levitation>0){l.position.y-=3*this.tileSet.height;if(c.levitationArrowPosition){c.arrow.position.y+=3*this.tileSet.height;c.levitationArrowPosition=false}}if(!showGUI){this.layer.position.y+=100}}}}var ft=this.fadeTable;var scaleSpeed=playerMoveSpeed;if(animations)for(var i=0;i<ft.length;i++){for(var k=0;k<ft[i].length;k++){if(ft[i][k].scale.x!=0){ft[i][k].scale.x-=delta*scaleSpeed;ft[i][k].scale.y-=delta*scaleSpeed;if(ft[i][k].scale.x<0){ft[i][k].scale.x=0;ft[i][k].scale.y=0}}}}var a=this.table;var l=a.length;if(animations){if(this.scaleVariable!=1){this.scaleVariable+=delta*scaleSpeed;if(this.scaleVariable>1)this.scaleVariable=1;if(this.centerWhite.scale.x!=1){this.centerWhite.scale.x=this.scaleVariable;this.centerWhite.scale.y=this.scaleVariable}for(var i=0;i<l;i++){for(var j=0;j<l;j++){for(var k=0;k<a[j][i].length;k++){if(!is(a[j][i][k].dontTouch)||a[j][i][k].dontTouch<1)if(a[j][i][k].scale.x!=1){a[j][i][k].scale.x=this.scaleVariable;a[j][i][k].scale.y=this.scaleVariable}}}}}}if(animations){var maxDistance=10;for(var i=0;i<l;i++){for(var j=0;j<l;j++){for(var k=0;k<a[j][i].length;k++){var block=a[j][i][k];var enemy=is(block.enemy)?block.enemy:0;var reveal=is(block.revealed)?block.revealed:false;var normalEnemy=enemy==this.center.permBuff1+1&&enemy!=10&&!reveal;var superEnemy=enemy==10&&(this.center.permBuff1==10||reveal);if(enemy>0&&(normalEnemy||superEnemy)){block.position.x+=(rand()-.5)*delta*50;block.position.y+=(rand()-.5)*delta*50;if(maxDistance<Math.abs(block.originalX-block.position.x)||maxDistance<Math.abs(block.originalY-block.position.y)){block.position.x=block.originalX;block.position.y=block.originalY}}}}}}};function Block(id,enemy){id=sad(id,roll(0,5));enemy=sad(enemy,0);this.id=id;this.enemy=enemy}function AreaMap(size,seed,difficulty){if(!is(size))size=16;if(!is(seed))seed=0;if(!is(difficulty))difficulty=0;var r=new Random(seed);var a=[];for(var i=0;i<size;i++){a[i]=[];for(var j=0;j<size;j++){a[i][j]=[];var hei=r.roll(mapGenerationMinHeight,mapGenerationMaxHeight);for(var k=0;k<hei;k++){var enemy=calculateEvil(difficulty);a[i][j][k]=new Block(r.roll(1,5),enemy)}}}return a}var tableOfEvil={};function calculateEvil(difficulty){if(difficulty>10)difficulty=10;var enemy=0;var r=rand()*10-difficulty;r=Math.floor(r);if(r<0){enemy=Math.abs(r)}if(tableOfEvil[enemy]>0)tableOfEvil[enemy]++;else tableOfEvil[enemy]=1;return enemy}function Map(size,seed){if(!is(size))size=16;if(!is(seed))seed=1;this.size=size;this.seed=seed;this.difficulty=startingLevel;var start=new Point(0,0);this.allAreas=new Object;this.voidBlock=new Block(0,0);this.voidBlock.void=true;this.dirty=false}Map.prototype.getTable=function(map,area,size,dont){var s=sad(size,5);var sh=Math.floor(s*.5);var as=this.size;this.centerMap=map;this.centerArea=area;if(s>as)return;var a,c,nc,shouldReload=false;if(is(this.table)&&this.savedViewPort==s){a=this.table;c=this.center;nc=new Point(map.x-c.x+1,map.y-c.y+1);if(as*nc.x+area.x<sh)shouldReload=true;else if(as*Math.abs(2-nc.x)+(as-area.x-1)<sh)shouldReload=true;else if(as*nc.y+area.y<sh)shouldReload=true;else if(as*Math.abs(2-nc.y)+(as-area.y-1)<sh)shouldReload=true}else{this.savedViewPort=s;a=[];for(var i=0;i<3*as;i++){a[i]=[];for(var j=0;j<3*as;j++){a[i][j]=[];a[i][j][0]=0}}shouldReload=true}if(!is(dont)){var playerChunk=this.getArea(map);for(var chunX=0;chunX<playerChunk.length;chunX++){for(var chunY=0;chunY<playerChunk[chunX].length;chunY++){for(var i=0;i<playerChunk[chunX][chunY].length;i++){var block=playerChunk[chunX][chunY][i];if(chunX!=area.x&&chunY!=area.y)if(block.id!=0)if(!is(block.enemy)||block.enemy<this.difficulty){var newEnemy=calculateEvil(this.difficulty);if(newEnemy>block.enemy)block.enemy=newEnemy}}}}this.setArea(map,playerChunk)}if(shouldReload||this.dirty){c=new Point(map.x,map.y);for(var chunX=0;chunX<3;chunX++){for(var chunY=0;chunY<3;chunY++){var chunk=this.getArea(new Point(chunX+c.x-1,chunY+c.y-1));var ii=0,jj=0;for(var i=chunX*as;i<chunX*as+as;i++){jj=0;for(var j=chunY*as;j<chunY*as+as;j++){a[i][j]=[];var height=chunk[ii][jj].length;for(var k=0;k<height;k++){a[i][j][k]=chunk[ii][jj][k]}jj++}ii++}}}nc=new Point(1,1);this.dirty=false}var lt=new Point(as*nc.x+area.x-sh,as*nc.y+area.y-sh);var ret=[];var ii=0,jj=0;for(var i=lt.x;i<lt.x+s;i++){jj=0;ret[ii]=[];for(var j=lt.y;j<lt.y+s;j++){ret[ii][jj]=a[i][j];jj++}ii++}this.table=a;this.center=c;log(shouldReload);return ret};Map.prototype.getColumn=function(x,y){y=sad(y,0);x=sad(x,0);var a=this.table;var c=this.center;var as=this.size;var map=this.centerMap.clone();var area=this.centerArea.clone();var nc=new Point(map.x-c.x+1,map.y-c.y+1);var lt=new Point(as*nc.x+area.x,as*nc.y+area.y);var xx=lt.x+x;var yy=lt.y+y;var t;if(xx>=0&&xx<a.length&&yy>=0&&yy<a[xx].length){t=a[lt.x+x][lt.y+y]}else{console.log("couldn't load!");return this.getColumnAbsolute(x,y)}return t};Map.prototype.getColumnAbsolute=function(x,y){y=sad(y,0);x=sad(x,0);var map=this.centerMap.clone();var area=this.centerArea.clone();var xx=area.x+x;var yy=area.y+y;while(xx<0){xx+=this.size;map.x-=1}while(xx>=this.size){xx-=this.size;map.x+=1}while(yy<0){yy+=this.size;map.y-=1}while(yy>=this.size){yy-=this.size;map.y+=1}var a=this.getArea(map);var t=a[xx][yy];return t};Map.prototype.getBlock=function(x,y,h){h=sad(h,-1);y=sad(y,0);x=sad(x,0);var a=this.table;var c=this.center;var as=this.size;var map=this.centerMap.clone();var area=this.centerArea.clone();var nc=new Point(map.x-c.x+1,map.y-c.y+1);var lt=new Point(as*nc.x+area.x,as*nc.y+area.y);var xx=lt.x+x;var yy=lt.y+y;var t;if(xx>=0&&xx<a.length&&yy>=0&&yy<a[xx].length){t=a[lt.x+x][lt.y+y]}else{console.log("couldn't load!");return this.getBlockAbsolute(x,y,h)}if(h>=t.length)return null;if(h<0)h=t.length-1;if(h>=0)return t[h];else return null};Map.prototype.getBlockAbsolute=function(x,y,h){h=sad(h,-1);y=sad(y,0);x=sad(x,0);var map=this.centerMap.clone();var area=this.centerArea.clone();var xx=area.x+x;var yy=area.y+y;while(xx<0){xx+=this.size;map.x-=1}while(xx>=this.size){xx-=this.size;map.x+=1}while(yy<0){yy+=this.size;map.y-=1}while(yy>=this.size){yy-=this.size;map.y+=1}var a=this.getArea(map);var t=a[xx][yy];if(h>=t.length)return null;if(h<0)h=t.length-1;if(h>=0)return t[h];else return null};Map.prototype.setBlock=function(x,y,h,block){h=sad(h,-1);y=sad(y,0);x=sad(x,0);var result=0;var willDelete=false;if(!is(block)){willDelete=true}var a=this.table;var c=this.center;var as=this.size;var map=this.centerMap.clone();var area=this.centerArea.clone();var nc=new Point(map.x-c.x+1,map.y-c.y+1);var lt=new Point(as*nc.x+area.x,as*nc.y+area.y);var xx=lt.x+x;var yy=lt.y+y;var t=null;if(xx>=0&&xx<a.length&&yy>=0&&yy<a[xx].length){t=a[lt.x+x][lt.y+y]}if(t){if(!willDelete){if(h>=t.length||h<0)h=t.length;t[h]=block;result=1}else{if(h<t.length){if(h<0)h=t.length-1;var hasBlock=false;if(h>=0){t.splice(h,1);result=-1}}}}else{console.log("couldn't save!")}if(result!=0){this.table[lt.x+x][lt.y+y]=t}if(!willDelete)result=this.setBlockAbsolute(x,y,h,block);else result=this.setBlockAbsolute(x,y,h);return result};Map.prototype.setBlockAbsolute=function(x,y,h,block){h=sad(h,-1);y=sad(y,0);x=sad(x,0);var result=0;var willDelete=false;if(!is(block)){willDelete=true}var map=this.centerMap.clone();var area=this.centerArea.clone();var xx=area.x+x;var yy=area.y+y;while(xx<0){xx+=this.size;map.x-=1}while(xx>=this.size){xx-=this.size;map.x+=1}while(yy<0){yy+=this.size;map.y-=1}while(yy>=this.size){yy-=this.size;map.y+=1}var a=this.getArea(map);var t=a[xx][yy];if(!willDelete){if(h>=t.length||h<0)h=t.length;t[h]=block;result=1}else{if(h<t.length){if(h<0)h=t.length-1;var hasBlock=false;if(h>=0){t.splice(h,1);result=-1}}}return result};Map.prototype.generateArea=function(point){var rx=new Random(Math.abs(point.x));var ry=new Random(Math.abs(point.y));var px=rx.rand()*1e6;if(point.x<0)px-5e5;var py=ry.rand()*1e6;if(point.y<0)py-5e5;var s=this.seed*px+this.seed*py;this.allAreas[this.stringFromCoord(point)]=new AreaMap(this.size,s,this.difficulty)};Map.prototype.getArea=function(point){var str=this.stringFromCoord(point);if(!is(this.allAreas[str])){this.generateArea(point)}return this.allAreas[str]};Map.prototype.setArea=function(point,area){this.allAreas[this.stringFromCoord(point)]=area};Map.prototype.stringFromCoord=function(point){return point.x+"x"+point.y};Map.prototype.coordFromString=function(string){var arrString=string.split("x");return new Point(parseInt(arrString[0]),parseInt(arrString[1]))};function Screen(x,y){if(is(x)&&is(y)){this.constantSize=true;constantWidth=this.constantX=x;constantHeight=this.constantY=y}else{this.constantSize=false;constantWidth=this.constantX=window.innerWidth;constantHeight=this.constantY=window.innerHeight}this.stageReal=gameStage;this.stage=new PIXI.DisplayObjectContainer;this.stageReal.addChild(this.stage);this.renderer=gameRenderer;this.resize();this.createLoadingScreen();var resizeTimeout;var that=this;window.onresize=function(){clearTimeout(resizeTimeout);tresizeTimeout=setTimeout(function(){that.resize()},1e3)}}Screen.prototype.resize=function(){if(!this.constantSize){constantWidth=window.innerWidth;constantHeight=window.innerHeight;this.constantX=window.innerWidth;this.constantY=window.innerHeight}this.renderer.resize(this.constantX,this.constantY);for(var i=0;i<this.stage.children.length;i++){var child=this.stage.getChildAt(i);var stick=child.stick;if(stick==1){child.position.x=this.constantX*.5;child.position.y=0}else if(stick==2){child.position.x=this.constantX;child.position.y=this.constantY*.5}else if(stick==3){child.position.x=this.constantX*.5;child.position.y=this.constantY}else if(stick==4){child.position.x=0;child.position.y=this.constantY*.5}else if(stick==5){child.position.x=this.constantX;child.position.y=0}else if(stick==6){child.position.x=this.constantX;child.position.y=this.constantY}else if(stick==7){child.position.x=0;child.position.y=this.constantY}else if(stick==8){}else{child.position.x=this.constantX*.5;child.position.y=this.constantY*.5}}log("Resized to: "+this.constantX+"x"+this.constantY)};Screen.prototype.createLoadingScreen=function(){this.loadingScreen=new PIXI.Stage(3707024);this.loadingText=new PIXI.Text("Loading...",{font:"bold 60px Gotham",stroke:ci("#FFFFFF",-.5),strokeThickness:5,fill:"white",align:"center",wordWrap:true,wordWrapWidth:constantWidth});this.loadingScreen.addChild(this.loadingText);this.loadingText.anchor.x=.5;this.loadingText.anchor.y=.5;this.loadingText.position.x=this.constantX*.5;this.loadingText.position.y=this.constantY*.5};Screen.prototype.addChild=function(child,stick){if(is(child)){if(is(stick)){if(stick==1){child.position.x=this.constantX*.5;child.position.y=0}else if(stick==2){child.position.x=this.constantX;child.position.y=this.constantY*.5}else if(stick==3){child.position.x=this.constantX*.5;child.position.y=this.constantY}else if(stick==4){child.position.x=0;child.position.y=this.constantY*.5}else if(stick==5){child.position.x=this.constantX;child.position.y=0}else if(stick==6){child.position.x=this.constantX;child.position.y=this.constantY}else if(stick==7){child.position.x=0;child.position.y=this.constantY}else if(stick==8){child.position.x=0;child.position.y=0}else{child.position.x=this.constantX*.5;child.position.y=this.constantY*.5}child.stick=stick}else{child.position.x=this.constantX*.5;child.position.y=this.constantY*.5;child.stick=0}this.stage.addChild(child)}};Screen.prototype.render=function(){this.renderer.render(this.stageReal)};Screen.prototype.load=function(message){if(is(message))this.loadingText.setText(message);this.renderer.render(this.loadingScreen)};function Library(){this.firstTime()}Library.prototype.firstTime=function(){var that=this;var headerHeight=constantHeight/6;var headerButtonWidth=constantWidth/8;this.tileset=new TileSet;this.stageReal=gameStage;this.renderer=gameRenderer;this.renderer.resize(constantWidth,constantHeight);var d=this.database={};for(var i=1;i<=5;i++){var de=d["c"+i]={};var to=1;if(i==1||i==4)to=5;else if(i==2||i==3)to=10;for(var j=1;j<=to;j++){var dem=de["c"+j]={};dem.n="";dem.c1=0;dem.c2=0;dem.c3=0;dem.c4=0;dem.c5=0}}d.c1.c1.n="heal";d.c1.c1.c1=1;d.c1.c2.n="cleanse";d.c1.c2.c2=1;d.c1.c3.n="teleport";d.c1.c3.c3=1;d.c1.c4.n="destroy";d.c1.c4.c4=1;d.c1.c5.n="create";d.c1.c5.c5=1;d.c2.c1.n="reveal";d.c2.c1.c2=d.c2.c1.c3=1;d.c2.c2.n="whiteout";d.c2.c2.c3=d.c2.c2.c4=1;d.c2.c3.n="turnblue";d.c2.c3.c1=d.c2.c3.c2=1;d.c2.c4.n="turnsky";d.c2.c4.c1=d.c2.c4.c3=1;d.c2.c5.n="turnorange";d.c2.c5.c1=d.c2.c5.c4=1;d.c2.c6.n="turngrey";d.c2.c6.c1=d.c2.c6.c5=1;d.c2.c7.n="protectnormal";d.c2.c7.c2=d.c2.c7.c4=1;d.c2.c8.n="teleblocks";d.c2.c8.c3=d.c2.c8.c5=1;d.c2.c9.n="shiftblock";d.c2.c9.c2=d.c2.c9.c5=1;d.c2.c10.n="dig";d.c2.c10.c4=d.c2.c10.c5=1;d.c3.c1.n="mark";d.c3.c1.c2=d.c3.c1.c3=d.c3.c1.c5=1;d.c3.c2.n="recall";d.c3.c2.c1=d.c3.c2.c2=d.c3.c2.c3=1;d.c3.c3.n="levitation";d.c3.c3.c2=d.c3.c3.c3=d.c3.c3.c4=1;d.c3.c4.n="protectdrain";d.c3.c4.c1=d.c3.c4.c3=d.c3.c4.c4=1;d.c3.c5.n="randomblock";d.c3.c5.c3=d.c3.c5.c4=d.c3.c5.c5=1;d.c3.c6.n="healpick";d.c3.c6.c1=d.c3.c6.c2=d.c3.c6.c5=1;d.c3.c7.n="pickup";d.c3.c7.c1=d.c3.c7.c2=d.c3.c7.c4=1;d.c3.c8.n="place";d.c3.c8.c2=d.c3.c8.c4=d.c3.c8.c5=1;d.c3.c9.n="createblock";d.c3.c9.c1=d.c3.c9.c4=d.c3.c9.c5=1;d.c3.c10.n="turngreen";d.c3.c10.c1=d.c3.c10.c3=d.c3.c10.c5=1;d.c4.c1.n="buff1";d.c4.c1.c2=d.c4.c1.c3=d.c4.c1.c4=d.c4.c1.c5=1;d.c4.c2.n="buff2";d.c4.c2.c1=d.c4.c2.c3=d.c4.c2.c4=d.c4.c2.c5=1;d.c4.c3.n="buff3";d.c4.c3.c1=d.c4.c3.c2=d.c4.c3.c4=d.c4.c3.c5=1;d.c4.c4.n="buff4";d.c4.c4.c1=d.c4.c4.c2=d.c4.c4.c3=d.c4.c4.c5=1;d.c4.c5.n="buff5";d.c4.c5.c1=d.c4.c5.c2=d.c4.c5.c3=d.c4.c5.c4=1;d.c5.c1.n="ultimate";d.c5.c1.c1=d.c5.c1.c2=d.c5.c1.c3=d.c5.c1.c4=d.c5.c1.c5=1;d.c6={};d.c6.c1={n:"tutBasics"};d.c6.c2={n:"tutControls"};d.c6.c3={n:"tutCombos"};d.c6.c4={n:"tutEnemies"};d.c6.c5={n:"tutLeveling"};d.c6.c6={n:"legendary"};for(var i=1;i<=6;i++){d.c6["c"+i].c1=0;d.c6["c"+i].c2=0;d.c6["c"+i].c3=0;d.c6["c"+i].c4=0;d.c6["c"+i].c5=0}var color=5274547;var color2=ni(color,.5);var o=this.backButton=new PIXI.Graphics;o.beginFill(color);o.drawRect(5,5,headerButtonWidth-10,headerHeight-10);o.endFill();this.textBack=new PIXI.Text("",{font:"200px picto",fill:"#FFFFFF",align:"center"});this.textBack.position.x=headerButtonWidth*.5;this.textBack.position.y=15;this.textBack.anchor.x=.5;this.textBack.anchor.y=0;var o=this.textBack;o.scale.x=o.scale.y=1;if(o.height>headerHeight-20){o.height=headerHeight-20;o.scale.x=o.scale.y}var h=o.height;if(o.width>headerButtonWidth-20){o.width=headerButtonWidth-20;o.scale.y=o.scale.x;o.position.y+=(h-o.height)*.5}this.backButton.hitArea=new PIXI.Rectangle(1,1,headerButtonWidth-1,headerHeight-1);this.backButton.interactive=true;this.backButton.click=this.backButton.tap=function(e){that.backButtonPressed()};var o=this.infoButton=new PIXI.Graphics;o.beginFill(color);o.drawRect(headerButtonWidth+5,5,headerButtonWidth*3.5-10,headerHeight-10);o.endFill();this.textInfo=new PIXI.Text(language.library,{font:"200px Shadows",fill:"#FFFFFF",align:"center"});this.textInfo.position.x=headerButtonWidth+headerButtonWidth*3.5*.5;this.textInfo.position.y=5;this.textInfo.anchor.x=.5;this.textInfo.anchor.y=0;var o=this.textInfo;o.scale.x=o.scale.y=1;if(o.height>headerHeight-20){o.height=headerHeight-20;o.scale.x=o.scale.y}var h=o.height;if(o.width>headerButtonWidth*3.5-20){o.width=headerButtonWidth*3.5-20;o.scale.y=o.scale.x;o.position.y+=(h-o.height)*.5}var o=this.combosBlank=new PIXI.Graphics;o.beginFill(color);o.drawRect(headerButtonWidth*4.5+5,5,headerButtonWidth*2.5-10,headerHeight-10);o.endFill();o.visible=false;o.click=o.tap=function(e){that.blankPressed()};this.combosBlank.hitArea=new PIXI.Rectangle(headerButtonWidth*4.5,0,headerButtonWidth*2.5,headerHeight);var o=this.textBlank=new PIXI.Text(language.combosWith,{font:"120px Shadows",fill:"#FFFFFF",align:"center"});o.position.x=headerButtonWidth*4.5+headerButtonWidth*2.5*.5;o.position.y=5;o.anchor.x=.5;o.anchor.y=0;o.scale.x=o.scale.y=1;if(o.height>headerHeight-20){o.height=headerHeight-20;o.scale.x=o.scale.y}var h=o.height;if(o.width>headerButtonWidth*2.5-20){o.width=headerButtonWidth*2.5-20;o.scale.y=o.scale.x;o.position.y+=(h-o.height)*.5}var o=this.helpButton=new PIXI.Graphics;o.beginFill(color);o.drawRect(headerButtonWidth*7+5,5,headerButtonWidth-10,headerHeight-10);o.endFill();this.textHelp=new PIXI.Text("",{font:"200px picto",fill:"#FFFFFF",align:"center"});this.textHelp.position.x=headerButtonWidth*7+headerButtonWidth*.5;this.textHelp.position.y=15;this.textHelp.anchor.x=.5;this.textHelp.anchor.y=0;var o=this.textHelp;o.scale.x=o.scale.y=1;if(o.height>headerHeight-20){o.height=headerHeight-20;o.scale.x=o.scale.y}var h=o.height;if(o.width>headerButtonWidth-20){o.width=headerButtonWidth-20;o.scale.y=o.scale.x;o.position.y+=(h-o.height)*.5}this.helpButton.hitArea=new PIXI.Rectangle(headerButtonWidth*7,0,headerButtonWidth,headerHeight);this.helpButton.interactive=true;this.helpButton.click=this.helpButton.tap=function(e){that.helpPressed()};var o=this.color1=new PIXI.Graphics;o.beginFill(color);o.drawRect(headerButtonWidth*4.5+5,5,headerButtonWidth*.5-10,headerHeight-10);o.endFill();this.textColor1=new PIXI.Text("1",{font:"200px Shadows",fill:"#FFFFFF",align:"center"});this.textColor1.position.x=headerButtonWidth*4.5+headerButtonWidth*.25;this.textColor1.position.y=5;this.textColor1.anchor.x=.5;this.textColor1.anchor.y=0;if(this.textColor1.height>headerHeight-10){this.textColor1.height=headerHeight-10;this.textColor1.scale.x=this.textColor1.scale.y}this.color1.hitArea=new PIXI.Rectangle(headerButtonWidth*4.5,0,headerButtonWidth*.5,headerHeight);this.color1.interactive=true;this.color1.click=this.color1.tap=function(e){that.colorChoose(1)};var o=this.color2=new PIXI.Graphics;o.beginFill(color);o.drawRect(headerButtonWidth*5+5,5,headerButtonWidth*.5-10,headerHeight-10);o.endFill();this.textColor2=new PIXI.Text("2",{font:"200px Shadows",fill:"#FFFFFF",align:"center"});this.textColor2.position.x=headerButtonWidth*5+headerButtonWidth*.25;this.textColor2.position.y=5;this.textColor2.anchor.x=.5;this.textColor2.anchor.y=0;if(this.textColor2.height>headerHeight-10){this.textColor2.height=headerHeight-10;this.textColor2.scale.x=this.textColor2.scale.y}this.color2.hitArea=new PIXI.Rectangle(headerButtonWidth*5,0,headerButtonWidth*.5,headerHeight);this.color2.interactive=true;this.color2.click=this.color2.tap=function(e){that.colorChoose(2)};var o=this.color3=new PIXI.Graphics;o.beginFill(color);o.drawRect(headerButtonWidth*5.5+5,5,headerButtonWidth*.5-10,headerHeight-10);o.endFill();this.textColor3=new PIXI.Text("3",{font:"200px Shadows",fill:"#FFFFFF",align:"center"});this.textColor3.position.x=headerButtonWidth*5.5+headerButtonWidth*.25;this.textColor3.position.y=5;this.textColor3.anchor.x=.5;this.textColor3.anchor.y=0;if(this.textColor3.height>headerHeight-10){this.textColor3.height=headerHeight-10;this.textColor3.scale.x=this.textColor3.scale.y}this.color3.hitArea=new PIXI.Rectangle(headerButtonWidth*5.5,0,headerButtonWidth*.5,headerHeight);this.color3.interactive=true;this.color3.click=this.color3.tap=function(e){that.colorChoose(3)};var o=this.color4=new PIXI.Graphics;o.beginFill(color);o.drawRect(headerButtonWidth*6+5,5,headerButtonWidth*.5-10,headerHeight-10);o.endFill();this.textColor4=new PIXI.Text("4",{font:"200px Shadows",fill:"#FFFFFF",align:"center"});this.textColor4.position.x=headerButtonWidth*6+headerButtonWidth*.25;this.textColor4.position.y=5;this.textColor4.anchor.x=.5;this.textColor4.anchor.y=0;if(this.textColor4.height>headerHeight-10){this.textColor4.height=headerHeight-10;this.textColor4.scale.x=this.textColor4.scale.y}this.color4.hitArea=new PIXI.Rectangle(headerButtonWidth*6,0,headerButtonWidth*.5,headerHeight);this.color4.interactive=true;this.color4.click=this.color4.tap=function(e){that.colorChoose(4)};var o=this.color5=new PIXI.Graphics;o.beginFill(color);o.drawRect(headerButtonWidth*6.5+5,5,headerButtonWidth*.5-10,headerHeight-10);o.endFill();this.textColor5=new PIXI.Text("5",{font:"200px Shadows",fill:"#FFFFFF",align:"center"});this.textColor5.position.x=headerButtonWidth*6.5+headerButtonWidth*.25;this.textColor5.position.y=5;this.textColor5.anchor.x=.5;this.textColor5.anchor.y=0;if(this.textColor5.height>headerHeight-10){this.textColor5.height=headerHeight-10;this.textColor5.scale.x=this.textColor5.scale.y}this.color5.hitArea=new PIXI.Rectangle(headerButtonWidth*6.5,0,headerButtonWidth*.5,headerHeight);this.color5.interactive=true;this.color5.click=this.color5.tap=function(e){that.colorChoose(5)};var funcs=[];function createfunc(i){return function(){that.option(i)}}for(var i=1;i<=5;i++){var o=this["op"+i]=new PIXI.Graphics;o.beginFill(color2);o.drawRect(5,headerHeight*i+5,headerButtonWidth*4-10,headerHeight-10);o.endFill();o.hitArea=new PIXI.Rectangle(0,headerHeight*i,headerButtonWidth*4,headerHeight);o.interactive=true;funcs[i]=createfunc(i);var oo=o;o=this["op"+i+"Text"]=new PIXI.Text(i,{font:"200px Shadows",fill:"#FFFFFF",align:"center"});o.position.x=headerButtonWidth*2;o.position.y=headerHeight*i+5;o.anchor.x=.5;o.anchor.y=0;if(o.height>headerHeight-10){o.height=headerHeight-10;o.scale.x=o.scale.y}addMouseOverForSpriteWithTint(o,oo)}for(var i=1;i<=5;i++){var o=this["op"+(i+5)]=new PIXI.Graphics;o.beginFill(color2);o.drawRect(headerButtonWidth*4+5,headerHeight*i+5,headerButtonWidth*4-10,headerHeight-10);o.endFill();o.hitArea=new PIXI.Rectangle(headerButtonWidth*4,headerHeight*i,headerButtonWidth*4,headerHeight);o.interactive=true;funcs[i+5]=createfunc(i+5);var oo=o;o=this["op"+(i+5)+"Text"]=new PIXI.Text(i+5,{font:"200px Shadows",fill:"#FFFFFF",align:"center"});o.position.x=headerButtonWidth*4+headerButtonWidth*2;o.position.y=headerHeight*i+5;o.anchor.x=.5;o.anchor.y=0;if(o.height>headerHeight-10){o.height=headerHeight-10;o.scale.x=o.scale.y}addMouseOverForSpriteWithTint(o,oo)}for(var i=1;i<=10;i++){var o=this["op"+i];o.click=o.tap=funcs[i]}var o=this.mainInfo=new PIXI.Graphics;o.beginFill(color2);o.drawRect(5,headerHeight+5,headerButtonWidth*8-10,headerHeight*5-10);o.endFill();o=this.mainInfoText=new PIXI.Text("Sample text",{font:"60px Shadows",fill:"#FFFFFF",align:"left",wordWrap:true,wordWrapWidth:headerButtonWidth*8-10});o.position.x=10;o.position.y=headerHeight+5;o.anchor.x=0;o.anchor.y=0;for(var i=1;i<=5;i++){var o=this["infoColor"+i]=new PIXI.Graphics;var col=this.tileset.getColor(i);
o.beginFill(col);o.lineStyle(5,ni(col,-.25));o.drawRect(headerButtonWidth*4.5+headerButtonWidth*.5*(i-1)+2.5,headerHeight+2.5,headerButtonWidth*.5-5,headerButtonWidth*.5-5);o.endFill();o.visible=false}this.mainInfo.visible=false;this.mainInfoText.visible=false;this.stage=new PIXI.DisplayObjectContainer;this.stage.addChild(this.backButton);this.stage.addChild(this.textBack);addMouseOverForSpriteWithTint(this.textBack,this.backButton);this.stage.addChild(this.infoButton);this.stage.addChild(this.textInfo);this.stage.addChild(this.color1);this.stage.addChild(this.textColor1);this.stage.addChild(this.color2);this.stage.addChild(this.textColor2);this.stage.addChild(this.color3);this.stage.addChild(this.textColor3);this.stage.addChild(this.color4);this.stage.addChild(this.textColor4);this.stage.addChild(this.color5);this.stage.addChild(this.textColor5);addMouseOverForSpriteWithTint(this.textColor1,this.color1);addMouseOverForSpriteWithTint(this.textColor2,this.color2);addMouseOverForSpriteWithTint(this.textColor3,this.color3);addMouseOverForSpriteWithTint(this.textColor4,this.color4);addMouseOverForSpriteWithTint(this.textColor5,this.color5);this.stage.addChild(this.combosBlank);this.stage.addChild(this.textBlank);addMouseOverForSpriteWithTint(this.textBlank,this.combosBlank);this.stage.addChild(this.op1);this.stage.addChild(this.op1Text);this.stage.addChild(this.op2);this.stage.addChild(this.op2Text);this.stage.addChild(this.op3);this.stage.addChild(this.op3Text);this.stage.addChild(this.op4);this.stage.addChild(this.op4Text);this.stage.addChild(this.op5);this.stage.addChild(this.op5Text);this.stage.addChild(this.op6);this.stage.addChild(this.op6Text);this.stage.addChild(this.op7);this.stage.addChild(this.op7Text);this.stage.addChild(this.op8);this.stage.addChild(this.op8Text);this.stage.addChild(this.op9);this.stage.addChild(this.op9Text);this.stage.addChild(this.op10);this.stage.addChild(this.op10Text);this.stage.addChild(this.mainInfo);this.stage.addChild(this.infoColor1);this.stage.addChild(this.infoColor2);this.stage.addChild(this.infoColor3);this.stage.addChild(this.infoColor4);this.stage.addChild(this.infoColor5);this.stage.addChild(this.mainInfoText);this.stage.addChild(this.helpButton);this.stage.addChild(this.textHelp);addMouseOverForSpriteWithTint(this.textHelp,this.helpButton);this.stageReal.addChild(this.stage);this.stage.visible=false;this.knownCombos={};this.colorsChoosen=6;this.tileSize=headerButtonWidth*4-20;this.tileHeig=headerHeight-20;this.infoScreenSize=headerHeight*5-20;this.infoSize=headerButtonWidth*3.5-20;this.gotHereByGame=false};Library.prototype.helpPressed=function(){this.hideMainInfo();this.hideOptions();this.highlightMenuOption(6);this.colorsChoosen=6;this.textInfo.setText(language.help);this.combosBlank.visible=true;this.textBlank.visible=true;this.showOption(1,language.tutBasics,true);this.showOption(2,language.tutControls,true);this.showOption(3,language.tutCombos,true);this.showOption(4,language.tutEnemies,true);this.showOption(5,language.tutLeveling,true);this.showOption(6,language.legendary,this.knownCombos.legendary,true)};Library.prototype.colorChoose=function(colors){if(!is(colors))colors=this.colorsChoosen;if(colors>0){var k=this.knownCombos;this.hideMainInfo();this.hideOptions();this.colorsChoosen=colors;this.highlightMenuOption(colors);if(colors<6){this.textInfo.setText(colors+" "+language.color(colors)+language.colorCombo);var o=this.textInfo;o.scale.x=o.scale.y=1;if(o.height>this.tileHeig){o.height=this.tileHeig;o.scale.x=o.scale.y}if(o.width>this.infoSize){o.width=this.infoSize;o.scale.y=o.scale.x}this.combosBlank.visible=false;this.textBlank.visible=false}switch(colors){case 1:this.showOption(1,language.heal,k.heal);this.showOption(2,language.cleanse,k.cleanse);this.showOption(3,language.teleport,k.teleport);this.showOption(4,language.destroy,k.destroy);this.showOption(5,language.create,k.create);break;case 2:this.showOption(1,language.reveal,k.reveal);this.showOption(2,language.whiteout,k.whiteout);this.showOption(3,language.turnblue,k.turnblue);this.showOption(4,language.turnsky,k.turnsky);this.showOption(5,language.turnorange,k.turnorange);this.showOption(6,language.turngrey,k.turngrey);this.showOption(7,language.protectnormal,k.protectnormal);this.showOption(8,language.teleblocks,k.teleblocks);this.showOption(9,language.shiftblock,k.shiftblock);this.showOption(10,language.dig,k.dig);break;case 3:this.showOption(1,language.mark,k.mark);this.showOption(2,language.recall,k.recall);this.showOption(3,language.levitation,k.levitation);this.showOption(4,language.protectdrain,k.protectdrain);this.showOption(5,language.randomblock,k.randomblock);this.showOption(6,language.healpick,k.healpick);this.showOption(7,language.pickup,k.pickup);this.showOption(8,language.place,k.place);this.showOption(9,language.createblock,k.createblock);this.showOption(10,language.turngreen,k.turngreen);break;case 4:this.showOption(1,language.buff1,k.buff1);this.showOption(2,language.buff2,k.buff2);this.showOption(3,language.buff3,k.buff3);this.showOption(4,language.buff4,k.buff4);this.showOption(5,language.buff5,k.buff5);break;case 5:this.showOption(1,language.ultimate,k.ultimate);break;case 6:this.helpPressed();break;default:break}}};Library.prototype.showOption=function(option,text,should){var i=option;var op=this["op"+i];var opT=this["op"+i+"Text"];op.visible=true;opT.visible=true;if(should)opT.setText(text);else opT.setText("???");var o=opT;o.scale.x=o.scale.y=1;if(o.height>this.tileHeig){o.height=this.tileHeig;o.scale.x=o.scale.y}var h=o.height;if(o.width>this.tileSize){o.width=this.tileSize;o.scale.y=o.scale.x;o.position.y+=(h-o.height)*.5}};Library.prototype.option=function(option){var colors=this.colorsChoosen;var op="c"+option;var d1=this.database;var d2=d1["c"+colors];var d=d2[op];if(colors==6&&option==6&&!is(this.knownCombos.legendary)){this.showMainInfo("???");this.textInfo.setText("???")}else{this.showMainInfo(this.getDescriptionFrom(d.n,colors));this.textInfo.setText(this.getDescriptionFrom(d.n,colors,true))}var o=this.textInfo;o.scale.x=o.scale.y=1;if(o.height>this.tileHeig){o.height=this.tileHeig;o.scale.x=o.scale.y}var h=o.height;if(o.width>this.infoSize){o.width=this.infoSize;o.scale.y=o.scale.x;o.position.y+=(h-o.height)*.5}this.chooseDescriptionColors(d.c1,d.c2,d.c3,d.c4,d.c5);this.hideOptions()};Library.prototype.chooseDescriptionColors=function(l,w,a,f,e){if(l>0)l=true;else l=false;if(w>0)w=true;else w=false;if(a>0)a=true;else a=false;if(f>0)f=true;else f=false;if(e>0)e=true;else e=false;this.infoColor1.visible=l;this.infoColor2.visible=w;this.infoColor3.visible=a;this.infoColor4.visible=f;this.infoColor5.visible=e};Library.prototype.hideMainInfo=function(){this.mainInfo.visible=false;this.mainInfoText.visible=false;this.infoColor1.visible=false;this.infoColor2.visible=false;this.infoColor3.visible=false;this.infoColor4.visible=false;this.infoColor5.visible=false};Library.prototype.hideOptions=function(){for(var i=1;i<=10;i++){this["op"+i].visible=false;this["op"+i+"Text"].visible=false}};Library.prototype.highlightMenuOption=function(option){for(var i=1;i<=5;i++){this["color"+i].tint=16777215}this.helpButton.tint=16777215;if(option>0&&option<6){this["color"+option].tint=11184810}else if(option==6){this.helpButton.tint=11184810}};Library.prototype.showMainInfo=function(text){this.mainInfo.visible=true;this.mainInfoText.visible=true;this.mainInfoText.setText(text);var o=this.mainInfoText;o.scale.x=o.scale.y=1;if(o.height>this.infoScreenSize){o.height=this.infoScreenSize}};Library.prototype.backButtonPressed=function(){if(this.mainInfo.visible){this.colorChoose()}else{if(this.gotHereByGame&&menu.game){this.gotHereByGame=false;menu.showGame()}else menu.showMenu()}};Library.prototype.getDescriptionFrom=function(name,colors,title){if(colors==6){if(is(title))return language[name];else return language[name+"D"]}var k=this.knownCombos;if(k[name]){if(is(title))return language[name];else return language[name+"D"]}else return"???"};Library.prototype.blankPressed=function(){this.combosBlank.visible=false;this.textBlank.visible=false};Library.prototype.getPageAndOptionFromName=function(name){switch(name){case"heal":return{page:1,option:1};break;case"cleanse":return{page:1,option:2};break;case"teleport":return{page:1,option:3};break;case"destroy":return{page:1,option:4};break;case"create":return{page:1,option:5};break;case"reveal":return{page:2,option:1};break;case"whiteout":return{page:2,option:2};break;case"turnblue":return{page:2,option:3};break;case"turnsky":return{page:2,option:4};break;case"turnorange":return{page:2,option:5};break;case"turngrey":return{page:2,option:6};break;case"protectnormal":return{page:2,option:7};break;case"teleblocks":return{page:2,option:8};break;case"shiftblock":return{page:2,option:9};break;case"dig":return{page:2,option:10};break;case"mark":return{page:3,option:1};break;case"recall":return{page:3,option:2};break;case"levitation":return{page:3,option:3};break;case"protectdrain":return{page:3,option:4};break;case"randomblock":return{page:3,option:5};break;case"healpick":return{page:3,option:6};break;case"pickup":return{page:3,option:7};break;case"place":return{page:3,option:8};break;case"createblock":return{page:3,option:9};break;case"turngreen":return{page:3,option:10};break;case"buff1":return{page:4,option:1};break;case"buff2":return{page:4,option:2};break;case"buff3":return{page:4,option:3};break;case"buff4":return{page:4,option:4};break;case"buff5":return{page:4,option:5};break;case"ultimate":return{page:5,option:1};break;default:return{page:1,option:1};break}};function Menu(){this.firstTime();this.library=new Library;if(this.enableSave){var lib=localStorage.getItem("savedLibrary");if(lib&&lib.length>0){var loadLib=JSON.parse(lib);this.library.knownCombos=loadLib}}this.library.colorChoose();this.runEvery=1/targetFPS;this.then=Date.now();this.main()}Menu.prototype.firstTime=function(){var that=this;this.showing=0;this.loading=true;constantWidth=window.innerWidth;constantHeight=window.innerHeight;this.stageReal=gameStage;this.renderer=gameRenderer;this.renderer.resize(constantWidth,constantHeight);var maxScale=constantHeight/600;if(maxScale>1)maxScale=1;this.textContinue=new PIXI.Text(language.continueButton,{font:"120px Shadows",fill:"#FFFFFF",stroke:ci("#FFFFFF",-.5),strokeThickness:4,align:"center"});this.textContinue.position.x=constantWidth*.5;this.textContinue.position.y=constantHeight*.25;this.textContinue.anchor.x=.5;this.textContinue.anchor.y=.5;this.textContinue.scale.x=this.textContinue.scale.y=maxScale;this.textContinue.interactive=true;this.textContinue.click=this.textContinue.tap=function(e){that.continueGame()};addMouseOverForSprite(this.textContinue);if(typeof Storage!=="undefined"){this.enableSave=true;var save=localStorage.getItem("savedGame");if(save&&save.length>0)this.textContinue.alpha=1;else this.textContinue.alpha=.5}else{this.textContinue.alpha=.5;this.enableSave=false}this.textStart=new PIXI.Text(language.newGameButton,{font:"120px Shadows",fill:"#FFFFFF",stroke:ci("#FFFFFF",-.5),strokeThickness:4,align:"center"});this.textStart.position.x=constantWidth*.5;this.textStart.position.y=constantHeight*.5;this.textStart.anchor.x=.5;this.textStart.anchor.y=.5;this.textStart.scale.x=this.textStart.scale.y=maxScale;this.textStart.interactive=true;this.textStart.click=this.textStart.tap=function(e){that.askToStartGame()};addMouseOverForSprite(this.textStart);this.textYes=new PIXI.Text(language.yes,{font:"120px Shadows",fill:"#FFFFFF",stroke:ci("#FFFFFF",-.5),strokeThickness:4,align:"center"});this.textYes.position.x=constantWidth*.9;this.textYes.position.y=constantHeight*.5;this.textYes.anchor.x=.5;this.textYes.anchor.y=.5;this.textYes.scale.x=this.textYes.scale.y=maxScale;this.textYes.interactive=true;this.textYes.click=this.textYes.tap=function(e){that.startGame()};this.textYes.visible=false;addMouseOverForSprite(this.textYes);this.textLibrary=new PIXI.Text("",{font:"120px picto",fill:"#FFFFFF",stroke:ci("#FFFFFF",-.5),strokeThickness:4,align:"center"});this.textLibrary.position.x=constantWidth*.1;this.textLibrary.position.y=constantHeight*.75;this.textLibrary.anchor.x=.5;this.textLibrary.anchor.y=.5;this.textLibrary.scale.x=this.textLibrary.scale.y=maxScale;this.textLibrary.interactive=true;this.textLibrary.click=this.textLibrary.tap=function(e){that.showLibrary()};addMouseOverForSprite(this.textLibrary);this.textHelp=new PIXI.Text("",{font:"120px picto",fill:"#FFFFFF",stroke:ci("#FFFFFF",-.5),strokeThickness:4,align:"center"});this.textHelp.position.x=constantWidth*.9;this.textHelp.position.y=constantHeight*.75;this.textHelp.anchor.x=.5;this.textHelp.anchor.y=.5;this.textHelp.scale.x=this.textHelp.scale.y=maxScale;this.textHelp.interactive=true;this.textHelp.click=this.textHelp.tap=function(e){that.showHelp()};addMouseOverForSprite(this.textHelp);this.stage=new PIXI.DisplayObjectContainer;this.stage.addChild(this.textStart);this.stage.addChild(this.textContinue);this.stage.addChild(this.textLibrary);this.stage.addChild(this.textHelp);this.stage.addChild(this.textYes);this.stageReal.addChild(this.stage);this.statusNow=0};Menu.prototype.main=function(){var now=Date.now();var delta=now-this.then;delta=delta*.001;if(delta>1){this.then=now}else if(delta>this.runEvery){if(this.showing==0){this.update(delta);this.renderer.render(this.stageReal)}else if(this.showing==1){if(delta>this.runEvery){this.game.main(delta);this.then=now}}else{this.renderer.render(this.stageReal)}this.then=now;if(!is(this.firstTimeBool)){if(is(this.firstTimeSecondBool)){this.firstTimeBool=true;hideLoadingScreen();document.body.appendChild(gameRenderer.view)}this.firstTimeSecondBool=true}}var that=this;requestAnimFrame(function(){that.main()})};Menu.prototype.update=function(delta){};Menu.prototype.saveGameMethod=function(){showLoadingScreen();var that=this;setTimeout(function(){that.saveGame();hideLoadingScreen()},loadingScreenWait)};Menu.prototype.saveGame=function(){if(this.game)if(this.enableSave)if(this.game.player&&this.game.map){var save={player:this.game.player.save(),map:this.game.map};localStorage.setItem("savedGame",JSON.stringify(save));var saveLib=this.library.knownCombos;localStorage.setItem("savedLibrary",JSON.stringify(saveLib))}};Menu.prototype.showMenu=function(alsoSave){var that=this;if(this.showing!=0){this.showing=0;this.hideStages();this.stage.visible=true;if(is(alsoSave))this.saveGameMethod()}this.textYes.visible=false;this.textStart.setText(language.newGameButton)};Menu.prototype.showGame=function(){if(this.showing!=1){this.showing=1;this.hideStages();this.game.screen.stage.visible=true}};Menu.prototype.hideStages=function(){if(this.game)this.game.screen.stage.visible=false;this.stage.visible=false;this.library.stage.visible=false};Menu.prototype.startGame=function(){showLoadingScreen();var that=this;setTimeout(function(){that.startGameReal()},loadingScreenWait)};Menu.prototype.startGameReal=function(){this.game=new Game;this.game.firstTime();this.textContinue.alpha=1;this.showGame()};Menu.prototype.continueGame=function(){if(!this.game){if(this.enableSave){var save=localStorage.getItem("savedGame");if(save&&save.length>0){showLoadingScreen();this.save=save;var that=this;setTimeout(function(){that.continueGameReal()},loadingScreenWait)}else{}}else{}}else{this.showGame()}};Menu.prototype.continueGameReal=function(){var save=this.save;var load=JSON.parse(save);var p=new Player;var m=new Map;p.load(load.player);m.allAreas=load.map.allAreas;m.dirty=true;this.game=new Game(p,m);this.game.firstTime();this.showGame()};Menu.prototype.showLibrary=function(byGame){if(is(byGame))this.library.gotHereByGame=true;if(this.showing!=2){this.showing=2;this.hideStages();this.library.stage.visible=true;if(this.library.colorsChoosen==6)this.library.colorsChoosen=1;this.library.colorChoose()}};Menu.prototype.libraryPage=function(page,option){this.library.gotHereByGame=true;this.showing=2;this.hideStages();this.library.stage.visible=true;this.library.colorsChoosen=page;this.library.colorChoose();this.library.option(option)};Menu.prototype.addToLibrary=function(combo){this.library.knownCombos[combo]=true;var o=this.library.getPageAndOptionFromName(combo);this.game.gui.updateLastCombo(language[combo],o.page,o.option);if(this.enableSave){var saveLib=this.library.knownCombos;localStorage.setItem("savedLibrary",JSON.stringify(saveLib))}};Menu.prototype.showHelp=function(){if(this.showing!=2){this.showing=2;this.hideStages();this.library.stage.visible=true;this.library.colorChoose(6)}};Menu.prototype.askToStartGame=function(){var save=localStorage.getItem("savedGame");if(save&&save.length>0){this.textYes.visible=true;this.textStart.setText(language.areYouSure)}else{this.startGame()}};var debug=true;var debugPolish=false;var showGUI=true;var targetFPS=60;var animations=true;var minimumHeightConstant=50;var startingLevel=0;var startingScore=0;var playerMoveSpeed=1.5;var playerInstantPicking=false;var invincibility=false;var constantCombo=false;var constantComboValues={g:1,b:1,s:1,o:1,e:1};var defaultViewPort=5;var mapGenerationMinHeight=1;var mapGenerationMaxHeight=3;var useCanvasRenderer=false;var loadingScreen=document.getElementById("loading");var loadingScreenWait=100;if(!showGUI){animations=false;defaultViewPort=3;mapGenerationMinHeight=3;mapGenerationMaxHeight=3}var PI_4=Math.PI/4;var PI_2=Math.PI/2;var PI=Math.PI;var PI3_2=Math.PI*3/2;var PI2=Math.PI*2;var constantWidth=window.innerWidth;var constantHeight=window.innerHeight;var pixelRatio=window.devicePixelRatio;var scaleOfEverything=1/pixelRatio;var scaleOfEverythingDefault=1;var scaleOfEverythingCurrent=scaleOfEverythingDefault;function scaleViewport(scale){if(scale<scaleOfEverything)scale=scaleOfEverything;if(scale>scaleOfEverythingDefault*2)scale=scaleOfEverythingDefault*2;var viewport=document.querySelector("meta[name=viewport");viewport.setAttribute("content","width=device-width, initial-scale="+scale+", maximum-scale="+scale+", user-scalable=0")}if(pixelRatio>1&&constantHeight<minimumHeightConstant){var p=pixelRatio;var hr=constantHeight*p;p--;var h=hr/p;while(h<minimumHeightConstant&&p>1){p--;h=hr/p}var pr=scaleOfEverything*p;scaleViewport(pr)}if(debug)console.log("Dimensions: "+constantWidth+"x"+constantHeight);if(debug)console.log("PixelRatio: "+pixelRatio);var gameRenderer;var gameStage;if(useCanvasRenderer)gameRenderer=new PIXI.CanvasRenderer;else gameRenderer=PIXI.autoDetectRenderer();gameRenderer.id="gameRenderer";gameStage=new PIXI.Stage(16777215,true);function Point(x,y){if(is(y)){this.x=x;this.y=y}else if(is(x)){if(is(x.x)&&is(x.y)){this.x=x.x;this.y=x.y}else{this.x=x;this.y=x}}else{this.x=0;this.y=0}}Point.prototype.clone=function(){var p=new Point(this.x,this.y);return p};function Point3D(x,y,h){this.x=x;this.y=y;this.h=h}function log(message){if(debug)console.log(message)}function n1(n){if(n<=1){return 1}else{return n+n1(n-1)}}function is(value){var retValue=typeof value!=="undefined"?true:false;return retValue}function sad(value,defaultValue){var retValue=typeof value!=="undefined"?value:defaultValue;return retValue}function rand(){return Math.random()}function roll(from,to){to=to-from+1;return Math.floor(Math.random()*to+from)}function Random(seed){if(!is(seed))seed=0;if(seed<0)seed=0;this.seed=seed++}Random.prototype.rand=function(){var x=Math.sin(this.seed++)*1e4;return x-Math.floor(x)};Random.prototype.roll=function(from,to){to=to-from+1;return Math.floor(this.rand()*to+from)};function ci(c,percent){var f=parseInt(c.slice(1),16),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=f>>16,G=f>>8&255,B=f&255;return"#"+(16777216+(Math.round((t-R)*p)+R)*65536+(Math.round((t-G)*p)+G)*256+(Math.round((t-B)*p)+B)).toString(16).slice(1)}function ni(n,percent){return ctn(ci(ntc(n),percent))}function ntc(n){n>>>=0;var b=n&255,g=(n&65280)>>>8,r=(n&16711680)>>>16,a=(n&4278190080)>>>24;return"#"+a.toString(16)+r.toString(16)+g.toString(16)+b.toString(16)}function ctn(c){return parseInt(c.slice(1),16)}function enableFullScreen(){var doc=window.document;var docEl=doc.documentElement;var requestFullScreen=docEl.requestFullscreen||docEl.mozRequestFullScreen||docEl.webkitRequestFullScreen||docEl.msRequestFullscreen;var cancelFullScreen=doc.exitFullscreen||doc.mozCancelFullScreen||doc.webkitExitFullscreen||doc.msExitFullscreen;if(!doc.fullscreenElement&&!doc.mozFullScreenElement&&!doc.webkitFullscreenElement&&!doc.msFullscreenElement){requestFullScreen.call(docEl)}}var globalStatForLoadness=0;var menu,language;WebFont.load({custom:{families:["Shadows","picto"]},active:function(){globalStatForLoadness++;loadGame()}});window.onload=function(){globalStatForLoadness++;loadGame()};function loadGame(){if(globalStatForLoadness==2){language=new Language;menu=new Menu}}function showLoadingScreen(){loadingScreen.style.visibility="visible"}function hideLoadingScreen(){loadingScreen.style.visibility="hidden"}var hoverTint=8432383;var clickTint=4227327;var defauTint=16777215;function addMouseOverForSprite(element){element.interactive=true;element.mouseover=function(e){this.tint=hoverTint};element.mouseout=function(e){this.tint=defauTint};element.mousedown=function(e){this.tint=clickTint};element.mouseup=function(e){this.tint=defauTint}}function addMouseOverForSpriteWithTint(t,element){element.interactive=true;element.mouseover=function(e){t.tint=hoverTint};element.mouseout=function(e){t.tint=defauTint};element.mousedown=function(e){t.tint=clickTint};element.mouseup=function(e){t.tint=defauTint}}if(is(window.Cocoon)){Cocoon.App.on("suspending",function(){menu.showMenu(true)});navigator.isCocoonJS=true;Cocoon.App.nativeAvailable=true;Cocoon.App.exitCallback(function(){menu.showMenu(true);return false})}